
step(1)
add(now(1))  234  []
add(contra(X1, X2, X3) & eval_bound(name_to_time(X2, X4), [X2]) & eval_bound(name_to_time(X1, X5), [X1]) & eval_bound(;(->(>(X4, X5), =(X6, X1)), =(X6, X2)), [X5, X4, X1, X2]) -f-> conclusion(reinstate(X6)))  233  []
add(done(ac_think(X7, X8), X9, X7) & eval_bound(member(equil(X10, X11), X9), [X9, X11, X10]) & eval_bound(=(X8, [equil, X11, X12]), [X8]) & eval_bound(\+(matchwords(X10, X13, X14)), [X10]) & eval_bound(\+(pos_int(satisfied(X7, X8))), [X7, X8]) & equil(X10, X11) -f-> conclusion(need(X7, [equil, X10, X12])))  232  []
add(done(ac_think(X15, X16), X17, X15) & eval_bound(member(equil(X18, X19), X17), [X17, X18, X19]) & eval_bound(=(X16, [equil, X18, X20]), [X16]) & eval_bound(\+(matchwords(X19, X21, X22)), [X19]) & eval_bound(\+(pos_int(satisfied(X15, X16))), [X15, X16]) & equil(X18, X19) -f-> conclusion(need(X15, [equil, X19, X20])))  231  []
add(update_expect_list(X23, X24) & eval_bound(df(update_expect_list(X23, X24)), [X23, X24]) & eval_bound(delete_expect_lists(X23), [X23]) -f-> conclusion(expect_list(X24)))  230  []
add(eval_bound(union(X25, X26, X27), [X25, X26]) & eval_bound(\==(X25, X26), [X25, X26]) & expect_list(X26) & expect_list(X25) -f-> conclusion(update_expect_lists([X25, X26], X27)))  229  []
add(satisfied(X28, X29) & expect(X28, X29) & eval_bound(delete(X30, [X28, X29], X31), [X28, X29, X30]) & eval_bound(member([X28, X29], X30), [X28, X29, X30]) & expect_list(X30) -f-> conclusion(update_expect_list([X30], X31)))  228  []
add(expect(X32, X33) & eval_bound(\+(member([X32, X33], X34)), [X32, X33, X34]) & eval_bound(\+(pos_int_u(update_expect_list(X35, X36))), ) & eval_bound(\+(pos_int_u(satisfied(X32, X33))), [X32, X33]) & expect_list(X34) -f-> conclusion(update_expect_list([X34], [[X32, X33], X34])))  227  []
add(done(ac_ask(X37, X38), X39, X40) -f-> conclusion(expect(X37, X38)))  226  []
add(failed(ac_ask(X41, X42), X43, X44) -f-> conclusion(call(ac_report_fail(X41, [ask, X42]), , X41)))  225  []
add(eval_bound(idling_for_steps(100), ) & eval_bound(\+(asking(X45, X46, )), [X45, X46]) & idling(X47) & expect_list([[X45, X46], X48]) -f-> conclusion(call(ac_ask(X45, X46), , X45)))  224  []
add(done(ac_think(X49, X50), X51, X49) & eval_bound(=(X50, [equil, X52]), [X50]) & eval_bound(\+(asking(X49, X50, )), [X49, X50]) & eval_bound(\+(pos_int_u(satisfied(X53, X50))), [X50]) & eval_bound(\+(pos_int_u(expect(X54, X50))), [X50]) -f-> conclusion(call(ac_ask(X49, X50), , X49)))  223  []
add(done(ac_think(X55, X56), X57, X55) & eval_bound(=(X56, [disambiguate, X59, X58]), [X56]) & eval_bound(\+(pos_int(satisfied(X55, X56))), [X55, X56]) -f-> conclusion(need(X55, [equil, X59, X58])))  222  []
add(failed(ac_think(X60, X61), X62, X60) -f-> conclusion(call(ac_report_fail(X60, [think, X61]), , X60)))  221  []
add(need(X63, X64) & eval_bound(sort(X65, X66), [X65]) & eval_bound(mult_gather_all([equil(X83, X84), isa(X81, X82), structure(X77, X78, X79, X80), value_of(X63, X75, X76), verb(X63, X74), val(X63, X72, X73), link(X63, X69, X70, X71), type(X63, X67, X68)], X65), [X63]) & eval_bound(\+(thought(X63, X64, X66)), [X63, X64, X66]) & eval_bound(\+(thinking(X63, X64, X66)), [X63, X64, X66]) & eval_bound(\+(pos_int_u(satisfied(X63, X64))), [X63, X64]) & equil(X85, X86) -f-> conclusion(call(ac_think(X63, X64), X66, X63)))  220  []
add(need(X87, X88) & isa(X89, X90) & eval_bound(sort(X91, X92), [X91]) & eval_bound(mult_gather_all([equil(X109, X110), isa(X107, X108), structure(X103, X104, X105, X106), value_of(X87, X101, X102), verb(X87, X100), val(X87, X98, X99), link(X87, X95, X96, X97), type(X87, X93, X94)], X91), [X87]) & eval_bound(\+(thought(X87, X88, X92)), [X87, X88, X92]) & eval_bound(\+(thinking(X87, X88, X92)), [X87, X88, X92]) & eval_bound(\+(pos_int_u(satisfied(X87, X88))), [X87, X88]) -f-> conclusion(call(ac_think(X87, X88), X92, X87)))  219  []
add(done(ac_think(X111, X112), X113, X111) & need(X111, X114) & eval_bound(sort(X115, X116), [X115]) & eval_bound(mult_gather_all([equil(X133, X134), isa(X131, X132), structure(X127, X128, X129, X130), value_of(X111, X125, X126), verb(X111, X124), val(X111, X122, X123), link(X111, X119, X120, X121), type(X111, X117, X118)], X115), [X111]) & eval_bound(\+(thought(X111, X114, X116)), [X111, X114, X116]) & eval_bound(\+(thinking(X111, X114, X116)), [X111, X114, X116]) & eval_bound(\+(pos_int_u(satisfied(X111, X114))), [X111, X114]) -f-> conclusion(call(ac_think(X111, X114), X116, X111)))  218  []
add(sent_to_domain(X135, X136, X137) -f-> conclusion(call(ac_report_action(X137), , X135)))  217  []
add(sent_to_domain(X138, X139, X140) & eval_bound(mult_gather_all([result(X144, X145), isa(X142, X143), domain_list(X141)], X146), ) -f-> conclusion(call(ac_post_process(X138, X140), X146, X138)))  216  []
add(send_to_domain(X147, X148, X149) & eval_bound(sending_to_domain(X148, X149), [X148, X149]) -f-> conclusion(sent_to_domain(X147, X148, X149)))  215  []
add(failed(ac_action(X150, X151, X152), X153, X150) -f-> conclusion(call(ac_report_fail(X150, [action, X152]), , X150)))  214  []
add(desire(update, X154, X155) & eval_bound(mult_gather_all([equil(X162, X163), isa(X160, X161), structure(X156, X157, X158, X159)], X164), ) & equil(X165, X155) -f-> conclusion(call(ac_action(a, alfred, [update, X154, X155, X165]), X164, a)))  213  []
add(desire(update, X166, X167) & eval_bound(mult_gather_all([equil(X174, X175), isa(X172, X173), structure(X168, X169, X170, X171)], X176), ) & equil(X167, X177) -f-> conclusion(call(ac_action(a, alfred, [update, X166, X167, X177]), X176, a)))  212  []
add(intention(X178, domain, X179) & eval_bound(domain_tag(X180), ) -f-> conclusion(call(ac_action(X178, domain, [X180, X179]), , X178)))  211  []
add(intention(X181, alfred, X182) & eval_bound(mult_gather_all([equil(X189, X190), isa(X187, X188), structure(X183, X184, X185, X186)], X191), ) & eval_bound(clause(step_number(X192), true), ) & eval_bound(\==(X182, [undo]), [X182]) -f-> conclusion(call(ac_action(X181, alfred, X182, X192), X191, X181)))  210  []
add(intention(X193, alfred, [undo]) & eval_bound(pos_int_u(intention(X194, domain, X195)), [X194]) & eval_bound(pos_int_u(belief(domain, X195)), [X195]) & eval_bound(domain_tag(X196), ) & utt_list([X193, X194, X197]) -f-> conclusion(call(ac_action(X193, domain, [X196, undo, X195]), , X193)))  209  []
add(intention(X198, alfred, [undo]) & eval_bound(pos_int_u(intention(X199, alfred, X200)), [X199]) & eval_bound(pos_int_u(belief(alfred, X200)), [X200]) & utt_list([X198, X199, X201]) -f-> conclusion(call(ac_action(X198, alfred, [undo, X200]), , X198)))  208  []
add(intention(X202, X203, X204) | conclusion(not(belief(X203, X204))))  207  []
add(intention(X205, X206, X207) -f-> conclusion(belief(X206, X207)))  206  []
add(need(X208, X209) & eval_bound(\+(pos_int_u(satisfied(X208, X209))), [X208, X209]) & satisfiedallneeds(X208) -f-> conclusion(not(satisfiedallneeds(X208))))  205  []
add(satisfied(X210, X211) & eval_bound(satisfied_needs(X210), [X210]) & eval_bound(pos_int_u(done(ac_think(X210, X212), X213, X210)), [X210]) & eval_bound(\+(pos_int_u(doing(ac_think(X210, X214), X215, X210))), [X210]) -f-> conclusion(satisfiedallneeds(X210)))  204  []
add(done(ac_think(X216, X217), X218, X216) & eval_bound(satisfied_needs(X216), [X216]) & eval_bound(pos_int_u(done(ac_think(X216, X219), X220, X216)), [X216]) & eval_bound(\+(pos_int_u(doing(ac_think(X216, X221), X222, X216))), [X216]) -f-> conclusion(satisfiedallneeds(X216)))  203  []
add(error(X223, EXTRA_LINK, [X226, X225, X224]) -f-> conclusion(need(X223, [fix_xlink, X226, X225, X224])))  202  []
add(error(X227, LINK_NF, [X228]) -f-> conclusion(need(X227, [fix_mlink, X228])))  201  []
add(error(X229, Item_NF, [X231, X230]) -f-> conclusion(need(X229, [disambiguate, X230, X231])))  200  []
add(error(X232, Verb_NF_in_DD, [X233]) -f-> conclusion(need(X232, [equil, X233, dcommand])))  199  []
add(failed(ac_find_intention(X234, X235, X236), X237, X234) -f-> conclusion(call(ac_report_fail(X234, [find_intention]), , X234)))  198  []
add(complex_command(X238, X239, X240) & eval_bound(mult_gather_all([isa(X249, X250), structure(X240, X246, X247, X248), link(X238, X243, X244, X245), value_of(X238, X241, X242)], X251), [X238, X240]) & eval_bound(\+(pos_int_u(intention(X238, X252, X253))), [X238]) & eval_bound(\+(pos_int_u(doing(ac_think(X238, X254), X255, X238))), [X238]) & satisfiedallneeds(X238) -f-> conclusion(call(ac_find_intention(X238, complex, X240), X251, X238)))  197  []
add(alfred_command(X256, X257, X258) & eval_bound(mult_gather_all([isa(X268, X269), structure(X258, X265, X266, X267), link(X256, X262, X263, X264), value_of(X256, X260, X261), verb(X256, X259)], X270), [X256, X258]) & eval_bound(\+(pos_int_u(intention(X256, X271, X272))), [X256]) & eval_bound(\+(pos_int_u(doing(ac_think(X256, X273), X274, X256))), [X256]) & satisfiedallneeds(X256) -f-> conclusion(call(ac_find_intention(X256, alfred, X258), X270, X256)))  196  []
add(domain_command(X275, X276, X277) & eval_bound(mult_gather_all([isa(X288, X289), domain_list(X287), structure(X277, X284, X285, X286), link(X275, X281, X282, X283), value_of(X275, X279, X280), verb(X275, X278)], X290), [X275, X277]) & eval_bound(\+(pos_int_u(intention(X275, X291, X292))), [X275]) & eval_bound(\+(pos_int_u(doing(ac_think(X275, X293), X294, X275))), [X275]) & satisfiedallneeds(X275) -f-> conclusion(call(ac_find_intention(X275, domain, X277), X290, X275)))  195  []
add(failed(ac_find_command(X295), X296, X295) -f-> conclusion(call(ac_report_fail(X295, [find_command]), , X295)))  194  []
add(done(ac_find_command(X297), X298, X297) -f-> conclusion(satisfiedallneeds(X297)))  193  []
add(eval_bound(mult_gather_all([isa(X305, X306), value_of(X299, X303, X304), equil(X301, X302), main_verb(X299, X300)], X307), [X299]) & eval_bound(\+(pos_int_u(domain_command(X299, X308, X309))), [X299]) & eval_bound(\+(pos_int_u(doing(ac_think(X299, X310), X311, X299))), [X299]) & eval_bound(\+(pos_int_u(complex_command(X299, X312, X313))), [X299]) & eval_bound(\+(pos_int_u(alfred_command(X299, X314, X315))), [X299]) & satisfiedallneeds(X299) -f-> conclusion(call(ac_find_command(X299), X307, X299)))  192  []
add(main_verb(X316, X317) & eval_bound(mult_gather_all([isa(X323, X324), value_of(X316, X321, X322), equil(X319, X320), main_verb(X316, X318)], X325), [X316]) & eval_bound(\+(pos_int_u(domain_command(X316, X326, X327))), [X316]) & eval_bound(\+(pos_int_u(doing(ac_think(X316, X328), X329, X316))), [X316]) & eval_bound(\+(pos_int_u(complex_command(X316, X330, X331))), [X316]) & eval_bound(\+(pos_int_u(alfred_command(X316, X332, X333))), [X316]) -f-> conclusion(call(ac_find_command(X316), X325, X316)))  191  []
add(failed(ac_main_verb(X334), X335, X334) -f-> conclusion(call(ac_report_fail(X334, [main_verb]), , X334)))  190  []
add(verb(X336, X337) & eval_bound(mult_gather_all([verb(X336, X340), value_of(X336, X338, X339)], X341), [X336]) & parsed(X336) -f-> conclusion(call(ac_main_verb(X336), X341, X336)))  189  []
add(unused_cost(X342, X343, 0) -f-> conclusion(parsed(X342)))  188  []
add(done(ac_fix_linkage(X344, X345), X346, X344) & eval_bound(mult_gather_all([value_of(X344, X352, X353), link(X344, X349, X350, X351), unused_cost(X344, X347, X348)], X354), [X344]) -f-> conclusion(call(ac_find_unused_cost(X344), X354, X344)))  187  []
add(failed(ac_fix_linkage(X355, 5), X356, X355) -f-> conclusion(call(ac_report_fail(X355, [fix_linkage]), , X355)))  186  []
add(failed(ac_fix_linkage(X357, X358), X359, X357) & fix_link_length(X357, X358) & eval_bound(is(X360, +(X358, 1)), [X358]) & eval_bound(\==(X358, 5), [X358]) & eval_bound(df(fix_link_length(X357, X358)), [X357, X358]) -f-> conclusion(fix_link_length(X357, X360)))  185  []
add(fix_link_length(X361, X362) & eval_bound(mult_gather_all([value_of(X361, X373, X374), verb(X361, X372), isa(X370, X371), structure(X366, X367, X368, X369), link(X361, X363, X364, X365)], X375), [X361]) & eval_bound(\+(pos_int_u(done(ac_fix_linkage(X361, X362), X376, X361))), [X361, X362]) & eval_bound(\+(pos_int_u(doing(ac_fix_linkage(X361, X362), X377, X361))), [X361, X362]) -f-> conclusion(call(ac_fix_linkage(X361, X362), X375, X361)))  184  []
add(link(X378, X379, X380, X381) & unused_cost(X378, X382, X383) & done(ac_find_links(X378), X384, X378) & eval_bound(\==(X383, 0), [X383]) & eval_bound(\+(pos_int_u(fix_link_length(X378, X385))), [X378]) -f-> conclusion(fix_link_length(X378, 2)))  183  []
add(failed(ac_parse_phrase(X386, X387), X388, X386) -f-> conclusion(fix_link_length(X386, 2)))  182  []
add(done(ac_find_links(X389), X390, X389) & eval_bound(mult_gather_all([value_of(X389, X395, X396), isa(X393, X394), equil(X391, X392)], X397), [X389]) & eval_bound(\+(pos_int_u(link(X389, X398, X399, X400))), [X389]) & eval_bound(\+(pos_int_u(response(X401, X402, X389))), [X389]) -f-> conclusion(call(ac_parse_phrase(X389, ), X397, X389)))  181  []
add(response(X403, X404, X405) & done(ac_find_links(X405), X406, X405) & eval_bound(mult_gather_all([value_of(X405, X411, X412), isa(X409, X410), equil(X407, X408)], X413), [X405]) & eval_bound(\+(pos_int_u(link(X405, X414, X415, X416))), [X405]) -f-> conclusion(call(ac_parse_phrase(X405, X404), X413, X405)))  180  []
add(eval_bound(mult_gather_all([links(X417, X420, X421, X422, X423), value_of(X417, X418, X419)], X424), [X417]) & end_of_parse(X417) -f-> conclusion(call(ac_find_links(X417), X424, X417)))  179  []
add(expect(X425, X426) & eval_bound(compare(>, X427, X425), [X427, X425]) & eval_bound(\+(pos_int_u(response(X425, X426, X428))), [X425, X426]) & utterance(X427) -f-> conclusion(response(X425, X426, X427)))  178  []
add(update_utt_list(X429, X430) & eval_bound(df(utt_list(X430)), [X430]) -f-> conclusion(utt_list([X429, X430])))  177  []
add(eval_bound(\+(member(X431, X432)), [X431, X432]) & utterance(X431) & utt_list(X432) -f-> conclusion(update_utt_list(X431, X432)))  176  []
add(done(ac_report_observation(X433, X434, X435), X436, X433) & desire(X433, [inform, X434, X437]) -f-> conclusion(satisfied(X433, [inform, X434, X437])))  175  []
add(observation(X438, X439, X440) & eval_bound(mult_gather_all([observation(X438, X445, X446), isa(X443, X444), equil(X441, X442)], X447), [X438]) & eval_bound(\+(pos_int_u(satisfied(X448, [inform, X438, X449]))), [X448, X438, X449]) & desire(X448, [inform, X438, X449]) -f-> conclusion(call(ac_report_observation(X448, X438, X449), X447, X448)))  174  []
add(observation(X450, X451, X452) & eval_bound(\+(pos_int_u(satisfied(X453, [observation, X450]))), [X453, X450]) & domain_expect(X453, [observation, X450]) -f-> conclusion(satisfied(X453, [observation, X450])))  173  []
add(observation(X454, X455) & eval_bound(pos_int_u(now(X456)), ) & eval_bound(df(observation(X454, X455)), [X454, X455]) -f-> conclusion(observation(X454, X455, X456)))  172  []
add(eval_bound(idling_for_steps(350), ) & idling(X457) -f-> conclusion(call(ac_prompt(X457), , X457)))  171  []
add(domain_list())  170  []
add(utt_list())  169  []
add(expect_list())  168  []
add(isa(parameter, width))  167  []
add(isa(parameter, height))  166  []
add(isa(parameter, volume))  165  []
add(isa(movie, Kenshin.ogm))  164  []
add(isa(movie, David.asf))  163  []
add(isa(movie, traider.mov))  162  []
add(isa(movie, swat.mov))  161  []
add(isa(movie, rome.avi))  160  []
add(isa(movie, bad.asx))  159  []
add(isa(domain, movies))  158  []
add(isa(start, from))  157  []
add(isa(city, Atlanta))  156  []
add(isa(city, Newark))  155  []
add(isa(city, Washington))  154  []
add(isa(city, Pittsburgh))  153  []
add(isa(city, Richmond))  152  []
add(isa(city, Buffalo))  151  []
add(isa(city, Baltimore))  150  []
add(isa(train, NorthStar))  149  []
add(isa(train, Bullet))  148  []
add(isa(train, Metroliner))  147  []
add(isa(domain, trains))  146  []
add(isa(all, all))  145  []
add(isa(display_type, cuisines))  144  []
add(isa(display_type, restaurants))  143  []
add(isa(item_name, pizza))  142  []
add(isa(cuisine, chinese))  141  []
add(isa(food_type, chicken))  140  []
add(isa(domain, restaurant))  139  []
add(isa(mail, mail))  138  []
add(isa(mail, email))  137  []
add(isa(domain, popkorn))  136  []
add(isa(domain, draughts))  135  []
add(isa(end, to))  134  []
add(isa(position, h8))  133  []
add(isa(position, h7))  132  []
add(isa(position, h6))  131  []
add(isa(position, h5))  130  []
add(isa(position, h4))  129  []
add(isa(position, h3))  128  []
add(isa(position, h2))  127  []
add(isa(position, h1))  126  []
add(isa(position, g8))  125  []
add(isa(position, g7))  124  []
add(isa(position, g6))  123  []
add(isa(position, g5))  122  []
add(isa(position, g4))  121  []
add(isa(position, g3))  120  []
add(isa(position, g2))  119  []
add(isa(position, g1))  118  []
add(isa(position, f8))  117  []
add(isa(position, f7))  116  []
add(isa(position, f6))  115  []
add(isa(position, f5))  114  []
add(isa(position, f4))  113  []
add(isa(position, f3))  112  []
add(isa(position, f2))  111  []
add(isa(position, f1))  110  []
add(isa(position, e8))  109  []
add(isa(position, e7))  108  []
add(isa(position, e6))  107  []
add(isa(position, e5))  106  []
add(isa(position, e4))  105  []
add(isa(position, e3))  104  []
add(isa(position, e2))  103  []
add(isa(position, e1))  102  []
add(isa(position, d8))  101  []
add(isa(position, d7))  100  []
add(isa(position, d6))  99  []
add(isa(position, d5))  98  []
add(isa(position, d4))  97  []
add(isa(position, d3))  96  []
add(isa(position, d2))  95  []
add(isa(position, d1))  94  []
add(isa(position, c8))  93  []
add(isa(position, c7))  92  []
add(isa(position, c6))  91  []
add(isa(position, c5))  90  []
add(isa(position, c4))  89  []
add(isa(position, c3))  88  []
add(isa(position, c2))  87  []
add(isa(position, c1))  86  []
add(isa(position, b8))  85  []
add(isa(position, b7))  84  []
add(isa(position, b6))  83  []
add(isa(position, b5))  82  []
add(isa(position, b2))  81  []
add(isa(position, b1))  80  []
add(isa(position, a8))  79  []
add(isa(position, a7))  78  []
add(isa(position, a6))  77  []
add(isa(position, a5))  76  []
add(isa(position, a4))  75  []
add(isa(position, a3))  74  []
add(isa(position, a2))  73  []
add(isa(position, a1))  72  []
add(isa(domain, chess))  71  []
add(isa(room, living))  70  []
add(isa(room, kitchen))  69  []
add(isa(room, pantry))  68  []
add(isa(room, corridor))  67  []
add(isa(room, room3))  66  []
add(isa(room, room2))  65  []
add(isa(room, master))  64  []
add(isa(room, room1))  63  []
add(isa(direction, sw))  62  []
add(isa(direction, se))  61  []
add(isa(direction, ne))  60  []
add(isa(direction, e))  59  []
add(isa(direction, toilet))  58  []
add(isa(direction, desk))  57  []
add(isa(direction, w))  56  []
add(isa(direction, nw))  55  []
add(isa(status, off))  54  []
add(isa(status, on))  53  []
add(isa(domain, house))  52  []
add(result(find, location))  51  []
add(syntax(location, [v0, city]))  50  []
add(isa(observation, location))  49  []
add(structure(find, [[v0, v1, O]], [[v0, verb], [v1, train]], [trains, [v0, v1]]))  48  []
add(isa(dcommand, find))  47  []
add(structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]))  46  []
add(structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]))  45  []
add(isa(dcommand, send))  44  []
add(structure(mute, , [[v0, verb]], [movies, [v0]]))  43  []
add(isa(dcommand, mute))  42  []
add(structure(list, [[v0, v1, O]], [[v0, verb]], [movies, [v0]]))  41  []
add(structure(list, , [[v0, verb]], [movies, [v0]]))  40  []
add(isa(dcommand, list))  39  []
add(structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [movies, [v0, v1, v3]]))  38  []
add(isa(dcommand, set))  37  []
add(structure(stop, , [[v0, verb]], [movies, [v0]]))  36  []
add(isa(dcommand, stop))  35  []
add(structure(fullscreen, , [[v0, verb]], [movies, [v0]]))  34  []
add(isa(dcommand, fullscreen))  33  []
add(structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [movies, [v0, v1, v3]]))  32  []
add(structure(play, [[v0, v1, O]], [[v0, verb], [v1, movie]], [movies, [v0, v1]]))  31  []
add(isa(dcommand, play))  30  []
add(structure(light, [[v1, v2, MV], [v2, v4, J], [v3, v4, AN]], [[v1, verb], [v2, status], [v3, room], [v4, direction]], [house, [v1, v2, v3, v4]]))  29  []
add(isa(dcommand, light))  28  []
add(structure(check, [[v0, v1, O]], [[v0, verb], [v1, mail]], [popkorn, [v0, v1]]))  27  []
add(isa(dcommand, check))  26  []
add(structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [draughts, [v0, v1, v3]]))  25  []
add(structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [chess, [v1, v3]]))  24  []
add(isa(dcommand, move))  23  []
add(structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [restaurant, [v0, v2, v1]]))  22  []
add(structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [restaurant, [v0, v2, v1]]))  21  []
add(structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [restaurant, [v0, v2, v1]]))  20  []
add(isa(dcommand, display))  19  []
add(structure(quit, , [[v0, verb]], [v0]))  18  []
add(structure(quit, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]))  17  []
add(isa(dcommand, quit))  16  []
add(structure(hide, , [[v0, verb]], [v0]))  15  []
add(isa(dcommand, hide))  14  []
add(structure(show, , [[v0, verb]], [v0]))  13  []
add(isa(dcommand, show))  12  []
add(structure(run, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]))  11  []
add(isa(dcommand, run))  10  []
add(structure(no, , , [undo]))  9  []
add(isa(conjunct, and))  8  []
add(isa(acommand, no))  7  []
add(isa(lw, LEFT-WALL))  6  []
add(isa(qnmark, ?))  5  []
add(isa(qnword, what))  4  []
add(structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]))  3  []
add(structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]))  2  []
add(structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]))  1  []
add(isa(acommand, is))  0  []
End of Step----------------------------------

step(2)
add(idling(2))  236  []
add(now(2))  235  []
delete(now(1))  234  []
End of Step----------------------------------

step(3)
add(idling(3))  238  []
add(now(3))  237  []
delete(now(2))  235  []
End of Step----------------------------------

step(4)
add(idling(4))  240  []
add(now(4))  239  []
delete(now(3))  237  []
End of Step----------------------------------

step(5)
add(idling(5))  242  []
add(now(5))  241  []
delete(now(4))  239  []
End of Step----------------------------------

step(6)
add(idling(6))  244  []
add(now(6))  243  []
delete(now(5))  241  []
End of Step----------------------------------

step(7)
add(idling(7))  246  []
add(now(7))  245  []
delete(now(6))  243  []
End of Step----------------------------------

step(8)
add(idling(8))  248  []
add(now(8))  247  []
delete(now(7))  245  []
End of Step----------------------------------

step(9)
add(idling(9))  250  []
add(now(9))  249  []
delete(now(8))  247  []
End of Step----------------------------------

step(10)
add(idling(10))  252  []
add(now(10))  251  []
delete(now(9))  249  []
End of Step----------------------------------

step(11)
add(idling(11))  254  []
add(now(11))  253  []
delete(now(10))  251  []
End of Step----------------------------------

step(12)
add(idling(12))  256  []
add(now(12))  255  []
delete(now(11))  253  []
End of Step----------------------------------

step(13)
add(idling(13))  258  []
add(now(13))  257  []
delete(now(12))  255  []
End of Step----------------------------------

step(14)
add(idling(14))  260  []
add(now(14))  259  []
delete(now(13))  257  []
End of Step----------------------------------

step(15)
add(idling(15))  262  []
add(now(15))  261  []
delete(now(14))  259  []
End of Step----------------------------------

step(16)
add(idling(16))  264  []
add(now(16))  263  []
delete(now(15))  261  []
End of Step----------------------------------

step(17)
add(idling(17))  266  []
add(now(17))  265  []
delete(now(16))  263  []
End of Step----------------------------------

step(18)
add(idling(18))  268  []
add(now(18))  267  []
delete(now(17))  265  []
End of Step----------------------------------

step(19)
add(idling(19))  270  []
add(now(19))  269  []
delete(now(18))  267  []
End of Step----------------------------------

step(20)
add(idling(20))  272  []
add(now(20))  271  []
delete(now(19))  269  []
End of Step----------------------------------

step(21)
add(idling(21))  274  []
add(now(21))  273  []
delete(now(20))  271  []
End of Step----------------------------------

step(22)
add(idling(22))  276  []
add(now(22))  275  []
delete(now(21))  273  []
End of Step----------------------------------

step(23)
add(idling(23))  278  []
add(now(23))  277  []
delete(now(22))  275  []
End of Step----------------------------------

step(24)
add(idling(24))  280  []
add(now(24))  279  []
delete(now(23))  277  []
End of Step----------------------------------

step(25)
add(idling(25))  282  []
add(now(25))  281  []
delete(now(24))  279  []
End of Step----------------------------------

step(26)
add(idling(26))  284  []
add(now(26))  283  []
delete(now(25))  281  []
End of Step----------------------------------

step(27)
add(idling(27))  286  []
add(now(27))  285  []
delete(now(26))  283  []
End of Step----------------------------------

step(28)
add(idling(28))  288  []
add(now(28))  287  []
delete(now(27))  285  []
End of Step----------------------------------

step(29)
add(idling(29))  290  []
add(now(29))  289  []
delete(now(28))  287  []
End of Step----------------------------------

step(30)
add(idling(30))  292  []
add(now(30))  291  []
delete(now(29))  289  []
End of Step----------------------------------

step(31)
add(idling(31))  294  []
add(now(31))  293  []
delete(now(30))  291  []
End of Step----------------------------------

step(32)
add(idling(32))  296  []
add(now(32))  295  []
delete(now(31))  293  []
End of Step----------------------------------

step(33)
add(idling(33))  298  []
add(now(33))  297  []
delete(now(32))  295  []
End of Step----------------------------------

step(34)
add(idling(34))  300  []
add(now(34))  299  []
delete(now(33))  297  []
End of Step----------------------------------

step(35)
add(idling(35))  302  []
add(now(35))  301  []
delete(now(34))  299  []
End of Step----------------------------------

step(36)
add(idling(36))  304  []
add(now(36))  303  []
delete(now(35))  301  []
End of Step----------------------------------

step(37)
add(utterance(s1))  306  []
add(now(37))  305  []
delete(now(36))  303  []
End of Step----------------------------------

step(38)
add(now(38))  308  []
add(update_utt_list(s1, ))  307  [[176,306,169]]
delete(utt_list())  169  []
delete(now(37))  305  []
End of Step----------------------------------

step(39)
add(now(39))  310  []
add(utt_list([s1]))  309  [[177,307]]
delete(now(38))  308  []
End of Step----------------------------------

step(40)
add(end_of_parse(s1))  321  []
add(verb(s1, val1))  320  []
add(links(s1, l0, val1, val2, Op))  319  []
add(links(s1, l0, val0, val1, Wi))  318  []
add(links(s1, l0, val0, val3, RW))  317  []
add(value_of(s1, val3, RIGHT-WALL))  316  []
add(value_of(s1, val2, trains))  315  []
add(value_of(s1, val1, run))  314  []
add(value_of(s1, val0, LEFT-WALL))  313  []
add(unused_cost(s1, l0, 0))  312  []
add(now(40))  311  []
delete(now(39))  310  []
End of Step----------------------------------

step(41)
add(now(41))  324  []
add(call(ac_find_links(s1), [links(s1, l0, val0, val3, RW), links(s1, l0, val0, val1, Wi), links(s1, l0, val1, val2, Op), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, run), value_of(s1, val2, trains), value_of(s1, val3, RIGHT-WALL)], s1))  323  [[179,321]]
add(parsed(s1))  322  [[188,312]]
delete(now(40))  311  []
End of Step----------------------------------

step(42)
add(now(42))  327  []
add(call(ac_main_verb(s1), [verb(s1, val1), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, run), value_of(s1, val2, trains), value_of(s1, val3, RIGHT-WALL)], s1))  326  [[189,322,320]]
add(doing(ac_find_links(s1), [links(s1, l0, val0, val3, RW), links(s1, l0, val0, val1, Wi), links(s1, l0, val1, val2, Op), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, run), value_of(s1, val2, trains), value_of(s1, val3, RIGHT-WALL)], s1))  325  []
delete(now(41))  324  []
End of Step----------------------------------

step(43)
add(done(ac_find_links(s1), [links(s1, l0, val0, val3, RW), links(s1, l0, val0, val1, Wi), links(s1, l0, val1, val2, Op), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, run), value_of(s1, val2, trains), value_of(s1, val3, RIGHT-WALL)], s1))  332  []
add(link(s1, val1, val2, Op))  331  []
add(link(s1, val0, val1, Wi))  330  []
add(now(43))  329  []
add(doing(ac_main_verb(s1), [verb(s1, val1), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, run), value_of(s1, val2, trains), value_of(s1, val3, RIGHT-WALL)], s1))  328  []
delete(doing(ac_find_links(s1), [links(s1, l0, val0, val3, RW), links(s1, l0, val0, val1, Wi), links(s1, l0, val1, val2, Op), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, run), value_of(s1, val2, trains), value_of(s1, val3, RIGHT-WALL)], s1))  325  []
delete(now(42))  327  []
End of Step----------------------------------

step(44)
add(main_verb(s1, run))  334  []
add(now(44))  333  []
delete(now(43))  329  []
End of Step----------------------------------

step(45)
add(now(45))  336  []
add(call(ac_find_command(s1), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, run), value_of(s1, val2, trains), value_of(s1, val3, RIGHT-WALL), main_verb(s1, run)], s1))  335  [[191,334]]
delete(now(44))  333  []
End of Step----------------------------------

step(46)
add(done(ac_main_verb(s1), [verb(s1, val1), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, run), value_of(s1, val2, trains), value_of(s1, val3, RIGHT-WALL)], s1))  339  []
add(now(46))  338  []
add(doing(ac_find_command(s1), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, run), value_of(s1, val2, trains), value_of(s1, val3, RIGHT-WALL), main_verb(s1, run)], s1))  337  []
delete(doing(ac_main_verb(s1), [verb(s1, val1), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, run), value_of(s1, val2, trains), value_of(s1, val3, RIGHT-WALL)], s1))  328  []
delete(now(45))  336  []
End of Step----------------------------------

step(47)
add(domain_command(s1, run, run))  341  []
add(now(47))  340  []
delete(now(46))  338  []
End of Step----------------------------------

step(48)
add(done(ac_find_command(s1), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, run), value_of(s1, val2, trains), value_of(s1, val3, RIGHT-WALL), main_verb(s1, run)], s1))  343  []
add(now(48))  342  []
delete(doing(ac_find_command(s1), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, run), value_of(s1, val2, trains), value_of(s1, val3, RIGHT-WALL), main_verb(s1, run)], s1))  337  []
delete(now(47))  340  []
End of Step----------------------------------

step(49)
add(now(49))  345  []
add(satisfiedallneeds(s1))  344  [[193,343]]
delete(now(48))  342  []
End of Step----------------------------------

step(50)
add(now(50))  347  []
add(call(ac_find_intention(s1, domain, run), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list(), structure(run, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), link(s1, val0, val1, Wi), link(s1, val1, val2, Op), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, run), value_of(s1, val2, trains), value_of(s1, val3, RIGHT-WALL), verb(s1, val1)], s1))  346  [[195,344,341]]
delete(now(49))  345  []
End of Step----------------------------------

step(51)
add(now(51))  349  []
add(doing(ac_find_intention(s1, domain, run), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list(), structure(run, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), link(s1, val0, val1, Wi), link(s1, val1, val2, Op), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, run), value_of(s1, val2, trains), value_of(s1, val3, RIGHT-WALL), verb(s1, val1)], s1))  348  []
delete(now(50))  347  []
End of Step----------------------------------

step(52)
add(done(ac_find_intention(s1, domain, run), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list(), structure(run, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), link(s1, val0, val1, Wi), link(s1, val1, val2, Op), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, run), value_of(s1, val2, trains), value_of(s1, val3, RIGHT-WALL), verb(s1, val1)], s1))  354  []
add(intention(s1, domain, [run, trains]))  353  []
add(type(s1, v0, verb))  352  []
add(val(s1, v0, val1))  351  []
add(now(52))  350  []
delete(doing(ac_find_intention(s1, domain, run), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list(), structure(run, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), link(s1, val0, val1, Wi), link(s1, val1, val2, Op), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, run), value_of(s1, val2, trains), value_of(s1, val3, RIGHT-WALL), verb(s1, val1)], s1))  348  []
delete(now(51))  349  []
End of Step----------------------------------

step(53)
add(now(53))  357  []
add(call(ac_action(s1, domain, [5, [run, trains]]), , s1))  356  [[211,353]]
add(belief(domain, [run, trains]))  355  [[206,353]]
delete(now(52))  350  []
End of Step----------------------------------

step(54)
add(now(54))  359  []
add(doing(ac_action(s1, domain, [5, [run, trains]]), , s1))  358  []
delete(now(53))  357  []
End of Step----------------------------------

step(55)
add(done(ac_action(s1, domain, [5, [run, trains]]), , s1))  362  []
add(send_to_domain(s1, 5, [[run, trains]]))  361  []
add(now(55))  360  []
delete(doing(ac_action(s1, domain, [5, [run, trains]]), , s1))  358  []
delete(now(54))  359  []
End of Step----------------------------------

step(56)
add(now(56))  364  []
add(sent_to_domain(s1, 5, [[run, trains]]))  363  [[215,361]]
delete(now(55))  360  []
End of Step----------------------------------

step(57)
add(now(57))  367  []
add(call(ac_report_action([[run, trains]]), , s1))  366  [[217,363]]
add(call(ac_post_process(s1, [[run, trains]]), [result(find, location), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list()], s1))  365  [[216,363]]
delete(now(56))  364  []
End of Step----------------------------------

step(58)
add(now(58))  370  []
add(doing(ac_post_process(s1, [[run, trains]]), [result(find, location), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list()], s1))  369  []
add(doing(ac_report_action([[run, trains]]), , s1))  368  []
delete(now(57))  367  []
End of Step----------------------------------

step(59)
add(domain_list([trains]))  372  []
add(now(59))  371  []
delete(domain_list())  170  []
delete(now(58))  370  []
End of Step----------------------------------

step(60)
add(done(ac_report_action([[run, trains]]), , s1))  375  []
add(done(ac_post_process(s1, [[run, trains]]), [result(find, location), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list()], s1))  374  []
add(now(60))  373  []
delete(doing(ac_report_action([[run, trains]]), , s1))  368  []
delete(doing(ac_post_process(s1, [[run, trains]]), [result(find, location), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list()], s1))  369  []
delete(now(59))  371  []
End of Step----------------------------------

step(61)
add(idling(61))  377  []
add(now(61))  376  []
delete(now(60))  373  []
End of Step----------------------------------

step(62)
add(idling(62))  379  []
add(now(62))  378  []
delete(now(61))  376  []
End of Step----------------------------------

step(63)
add(idling(63))  381  []
add(now(63))  380  []
delete(now(62))  378  []
End of Step----------------------------------

step(64)
add(idling(64))  383  []
add(now(64))  382  []
delete(now(63))  380  []
End of Step----------------------------------

step(65)
add(idling(65))  385  []
add(now(65))  384  []
delete(now(64))  382  []
End of Step----------------------------------

step(66)
add(idling(66))  387  []
add(now(66))  386  []
delete(now(65))  384  []
End of Step----------------------------------

step(67)
add(idling(67))  389  []
add(now(67))  388  []
delete(now(66))  386  []
End of Step----------------------------------

step(68)
add(idling(68))  391  []
add(now(68))  390  []
delete(now(67))  388  []
End of Step----------------------------------

step(69)
add(idling(69))  393  []
add(now(69))  392  []
delete(now(68))  390  []
End of Step----------------------------------

step(70)
add(idling(70))  395  []
add(now(70))  394  []
delete(now(69))  392  []
End of Step----------------------------------

step(71)
add(idling(71))  397  []
add(now(71))  396  []
delete(now(70))  394  []
End of Step----------------------------------

step(72)
add(idling(72))  399  []
add(now(72))  398  []
delete(now(71))  396  []
End of Step----------------------------------

step(73)
add(idling(73))  401  []
add(now(73))  400  []
delete(now(72))  398  []
End of Step----------------------------------

step(74)
add(idling(74))  403  []
add(now(74))  402  []
delete(now(73))  400  []
End of Step----------------------------------

step(75)
add(idling(75))  405  []
add(now(75))  404  []
delete(now(74))  402  []
End of Step----------------------------------

step(76)
add(idling(76))  407  []
add(now(76))  406  []
delete(now(75))  404  []
End of Step----------------------------------

step(77)
add(idling(77))  409  []
add(now(77))  408  []
delete(now(76))  406  []
End of Step----------------------------------

step(78)
add(idling(78))  411  []
add(now(78))  410  []
delete(now(77))  408  []
End of Step----------------------------------

step(79)
add(idling(79))  413  []
add(now(79))  412  []
delete(now(78))  410  []
End of Step----------------------------------

step(80)
add(idling(80))  415  []
add(now(80))  414  []
delete(now(79))  412  []
End of Step----------------------------------

step(81)
add(idling(81))  417  []
add(now(81))  416  []
delete(now(80))  414  []
End of Step----------------------------------

step(82)
add(idling(82))  419  []
add(now(82))  418  []
delete(now(81))  416  []
End of Step----------------------------------

step(83)
add(idling(83))  421  []
add(now(83))  420  []
delete(now(82))  418  []
End of Step----------------------------------

step(84)
add(idling(84))  423  []
add(now(84))  422  []
delete(now(83))  420  []
End of Step----------------------------------

step(85)
add(idling(85))  425  []
add(now(85))  424  []
delete(now(84))  422  []
End of Step----------------------------------

step(86)
add(idling(86))  427  []
add(now(86))  426  []
delete(now(85))  424  []
End of Step----------------------------------

step(87)
add(idling(87))  429  []
add(now(87))  428  []
delete(now(86))  426  []
End of Step----------------------------------

step(88)
add(idling(88))  431  []
add(now(88))  430  []
delete(now(87))  428  []
End of Step----------------------------------

step(89)
add(idling(89))  433  []
add(now(89))  432  []
delete(now(88))  430  []
End of Step----------------------------------

step(90)
add(idling(90))  435  []
add(now(90))  434  []
delete(now(89))  432  []
End of Step----------------------------------

step(91)
add(idling(91))  437  []
add(now(91))  436  []
delete(now(90))  434  []
End of Step----------------------------------

step(92)
add(idling(92))  439  []
add(now(92))  438  []
delete(now(91))  436  []
End of Step----------------------------------

step(93)
add(idling(93))  441  []
add(now(93))  440  []
delete(now(92))  438  []
End of Step----------------------------------

step(94)
add(idling(94))  443  []
add(now(94))  442  []
delete(now(93))  440  []
End of Step----------------------------------

step(95)
add(idling(95))  445  []
add(now(95))  444  []
delete(now(94))  442  []
End of Step----------------------------------

step(96)
add(idling(96))  447  []
add(now(96))  446  []
delete(now(95))  444  []
End of Step----------------------------------

step(97)
add(idling(97))  449  []
add(now(97))  448  []
delete(now(96))  446  []
End of Step----------------------------------

step(98)
add(idling(98))  451  []
add(now(98))  450  []
delete(now(97))  448  []
End of Step----------------------------------

step(99)
add(idling(99))  453  []
add(now(99))  452  []
delete(now(98))  450  []
End of Step----------------------------------

step(100)
add(idling(100))  455  []
add(now(100))  454  []
delete(now(99))  452  []
End of Step----------------------------------

step(101)
add(idling(101))  457  []
add(now(101))  456  []
delete(now(100))  454  []
End of Step----------------------------------

step(102)
add(idling(102))  459  []
add(now(102))  458  []
delete(now(101))  456  []
End of Step----------------------------------

step(103)
add(idling(103))  461  []
add(now(103))  460  []
delete(now(102))  458  []
End of Step----------------------------------

step(104)
add(idling(104))  463  []
add(now(104))  462  []
delete(now(103))  460  []
End of Step----------------------------------

step(105)
add(idling(105))  465  []
add(now(105))  464  []
delete(now(104))  462  []
End of Step----------------------------------

step(106)
add(idling(106))  467  []
add(now(106))  466  []
delete(now(105))  464  []
End of Step----------------------------------

step(107)
add(idling(107))  469  []
add(now(107))  468  []
delete(now(106))  466  []
End of Step----------------------------------

step(108)
add(idling(108))  471  []
add(now(108))  470  []
delete(now(107))  468  []
End of Step----------------------------------

step(109)
add(idling(109))  473  []
add(now(109))  472  []
delete(now(108))  470  []
End of Step----------------------------------

step(110)
add(idling(110))  475  []
add(now(110))  474  []
delete(now(109))  472  []
End of Step----------------------------------

step(111)
add(idling(111))  477  []
add(now(111))  476  []
delete(now(110))  474  []
End of Step----------------------------------

step(112)
add(idling(112))  479  []
add(now(112))  478  []
delete(now(111))  476  []
End of Step----------------------------------

step(113)
add(idling(113))  481  []
add(now(113))  480  []
delete(now(112))  478  []
End of Step----------------------------------

step(114)
add(idling(114))  483  []
add(now(114))  482  []
delete(now(113))  480  []
End of Step----------------------------------

step(115)
add(idling(115))  485  []
add(now(115))  484  []
delete(now(114))  482  []
End of Step----------------------------------

step(116)
add(idling(116))  487  []
add(now(116))  486  []
delete(now(115))  484  []
End of Step----------------------------------

step(117)
add(idling(117))  489  []
add(now(117))  488  []
delete(now(116))  486  []
End of Step----------------------------------

step(118)
add(idling(118))  491  []
add(now(118))  490  []
delete(now(117))  488  []
End of Step----------------------------------

step(119)
add(idling(119))  493  []
add(now(119))  492  []
delete(now(118))  490  []
End of Step----------------------------------

step(120)
add(idling(120))  495  []
add(now(120))  494  []
delete(now(119))  492  []
End of Step----------------------------------

step(121)
add(idling(121))  497  []
add(now(121))  496  []
delete(now(120))  494  []
End of Step----------------------------------

step(122)
add(idling(122))  499  []
add(now(122))  498  []
delete(now(121))  496  []
End of Step----------------------------------

step(123)
add(idling(123))  501  []
add(now(123))  500  []
delete(now(122))  498  []
End of Step----------------------------------

step(124)
add(idling(124))  503  []
add(now(124))  502  []
delete(now(123))  500  []
End of Step----------------------------------

step(125)
add(idling(125))  505  []
add(now(125))  504  []
delete(now(124))  502  []
End of Step----------------------------------

step(126)
add(idling(126))  507  []
add(now(126))  506  []
delete(now(125))  504  []
End of Step----------------------------------

step(127)
add(idling(127))  509  []
add(now(127))  508  []
delete(now(126))  506  []
End of Step----------------------------------

step(128)
add(idling(128))  511  []
add(now(128))  510  []
delete(now(127))  508  []
End of Step----------------------------------

step(129)
add(idling(129))  513  []
add(now(129))  512  []
delete(now(128))  510  []
End of Step----------------------------------

step(130)
add(idling(130))  515  []
add(now(130))  514  []
delete(now(129))  512  []
End of Step----------------------------------

step(131)
add(idling(131))  517  []
add(now(131))  516  []
delete(now(130))  514  []
End of Step----------------------------------

step(132)
add(idling(132))  519  []
add(now(132))  518  []
delete(now(131))  516  []
End of Step----------------------------------

step(133)
add(idling(133))  521  []
add(now(133))  520  []
delete(now(132))  518  []
End of Step----------------------------------

step(134)
add(idling(134))  523  []
add(now(134))  522  []
delete(now(133))  520  []
End of Step----------------------------------

step(135)
add(idling(135))  525  []
add(now(135))  524  []
delete(now(134))  522  []
End of Step----------------------------------

step(136)
add(idling(136))  527  []
add(now(136))  526  []
delete(now(135))  524  []
End of Step----------------------------------

step(137)
add(idling(137))  529  []
add(now(137))  528  []
delete(now(136))  526  []
End of Step----------------------------------

step(138)
add(idling(138))  531  []
add(now(138))  530  []
delete(now(137))  528  []
End of Step----------------------------------

step(139)
add(idling(139))  533  []
add(now(139))  532  []
delete(now(138))  530  []
End of Step----------------------------------

step(140)
add(idling(140))  535  []
add(now(140))  534  []
delete(now(139))  532  []
End of Step----------------------------------

step(141)
add(idling(141))  537  []
add(now(141))  536  []
delete(now(140))  534  []
End of Step----------------------------------

step(142)
add(idling(142))  539  []
add(now(142))  538  []
delete(now(141))  536  []
End of Step----------------------------------

step(143)
add(idling(143))  541  []
add(now(143))  540  []
delete(now(142))  538  []
End of Step----------------------------------

step(144)
add(idling(144))  543  []
add(now(144))  542  []
delete(now(143))  540  []
End of Step----------------------------------

step(145)
add(idling(145))  545  []
add(now(145))  544  []
delete(now(144))  542  []
End of Step----------------------------------

step(146)
add(idling(146))  547  []
add(now(146))  546  []
delete(now(145))  544  []
End of Step----------------------------------

step(147)
add(idling(147))  549  []
add(now(147))  548  []
delete(now(146))  546  []
End of Step----------------------------------

step(148)
add(idling(148))  551  []
add(now(148))  550  []
delete(now(147))  548  []
End of Step----------------------------------

step(149)
add(idling(149))  553  []
add(now(149))  552  []
delete(now(148))  550  []
End of Step----------------------------------

step(150)
add(idling(150))  555  []
add(now(150))  554  []
delete(now(149))  552  []
End of Step----------------------------------

step(151)
add(idling(151))  557  []
add(now(151))  556  []
delete(now(150))  554  []
End of Step----------------------------------

step(152)
add(idling(152))  559  []
add(now(152))  558  []
delete(now(151))  556  []
End of Step----------------------------------

step(153)
add(idling(153))  561  []
add(now(153))  560  []
delete(now(152))  558  []
End of Step----------------------------------

step(154)
add(idling(154))  563  []
add(now(154))  562  []
delete(now(153))  560  []
End of Step----------------------------------

step(155)
add(idling(155))  565  []
add(now(155))  564  []
delete(now(154))  562  []
End of Step----------------------------------

step(156)
add(idling(156))  567  []
add(now(156))  566  []
delete(now(155))  564  []
End of Step----------------------------------

step(157)
add(idling(157))  569  []
add(now(157))  568  []
delete(now(156))  566  []
End of Step----------------------------------

step(158)
add(idling(158))  571  []
add(now(158))  570  []
delete(now(157))  568  []
End of Step----------------------------------

step(159)
add(idling(159))  573  []
add(now(159))  572  []
delete(now(158))  570  []
End of Step----------------------------------

step(160)
add(idling(160))  575  []
add(now(160))  574  []
delete(now(159))  572  []
End of Step----------------------------------

step(161)
add(idling(161))  577  []
add(now(161))  576  []
delete(now(160))  574  []
End of Step----------------------------------

step(162)
add(idling(162))  579  []
add(now(162))  578  []
delete(now(161))  576  []
End of Step----------------------------------

step(163)
add(idling(163))  581  []
add(now(163))  580  []
delete(now(162))  578  []
End of Step----------------------------------

step(164)
add(idling(164))  583  []
add(now(164))  582  []
delete(now(163))  580  []
End of Step----------------------------------

step(165)
add(idling(165))  585  []
add(now(165))  584  []
delete(now(164))  582  []
End of Step----------------------------------

step(166)
add(idling(166))  587  []
add(now(166))  586  []
delete(now(165))  584  []
End of Step----------------------------------

step(167)
add(idling(167))  589  []
add(now(167))  588  []
delete(now(166))  586  []
End of Step----------------------------------

step(168)
add(idling(168))  591  []
add(now(168))  590  []
delete(now(167))  588  []
End of Step----------------------------------

step(169)
add(idling(169))  593  []
add(now(169))  592  []
delete(now(168))  590  []
End of Step----------------------------------

step(170)
add(idling(170))  595  []
add(now(170))  594  []
delete(now(169))  592  []
End of Step----------------------------------

step(171)
add(idling(171))  597  []
add(now(171))  596  []
delete(now(170))  594  []
End of Step----------------------------------

step(172)
add(idling(172))  599  []
add(now(172))  598  []
delete(now(171))  596  []
End of Step----------------------------------

step(173)
add(idling(173))  601  []
add(now(173))  600  []
delete(now(172))  598  []
End of Step----------------------------------

step(174)
add(idling(174))  603  []
add(now(174))  602  []
delete(now(173))  600  []
End of Step----------------------------------

step(175)
add(idling(175))  605  []
add(now(175))  604  []
delete(now(174))  602  []
End of Step----------------------------------

step(176)
add(idling(176))  607  []
add(now(176))  606  []
delete(now(175))  604  []
End of Step----------------------------------

step(177)
add(idling(177))  609  []
add(now(177))  608  []
delete(now(176))  606  []
End of Step----------------------------------

step(178)
add(idling(178))  611  []
add(now(178))  610  []
delete(now(177))  608  []
End of Step----------------------------------

step(179)
add(idling(179))  613  []
add(now(179))  612  []
delete(now(178))  610  []
End of Step----------------------------------

step(180)
add(idling(180))  615  []
add(now(180))  614  []
delete(now(179))  612  []
End of Step----------------------------------

step(181)
add(idling(181))  617  []
add(now(181))  616  []
delete(now(180))  614  []
End of Step----------------------------------

step(182)
add(idling(182))  619  []
add(now(182))  618  []
delete(now(181))  616  []
End of Step----------------------------------

step(183)
add(idling(183))  621  []
add(now(183))  620  []
delete(now(182))  618  []
End of Step----------------------------------

step(184)
add(idling(184))  623  []
add(now(184))  622  []
delete(now(183))  620  []
End of Step----------------------------------

step(185)
add(idling(185))  625  []
add(now(185))  624  []
delete(now(184))  622  []
End of Step----------------------------------

step(186)
add(idling(186))  627  []
add(now(186))  626  []
delete(now(185))  624  []
End of Step----------------------------------

step(187)
add(idling(187))  629  []
add(now(187))  628  []
delete(now(186))  626  []
End of Step----------------------------------

step(188)
add(idling(188))  631  []
add(now(188))  630  []
delete(now(187))  628  []
End of Step----------------------------------

step(189)
add(idling(189))  633  []
add(now(189))  632  []
delete(now(188))  630  []
End of Step----------------------------------

step(190)
add(idling(190))  635  []
add(now(190))  634  []
delete(now(189))  632  []
End of Step----------------------------------

step(191)
add(idling(191))  637  []
add(now(191))  636  []
delete(now(190))  634  []
End of Step----------------------------------

step(192)
add(idling(192))  639  []
add(now(192))  638  []
delete(now(191))  636  []
End of Step----------------------------------

step(193)
add(idling(193))  641  []
add(now(193))  640  []
delete(now(192))  638  []
End of Step----------------------------------

step(194)
add(idling(194))  643  []
add(now(194))  642  []
delete(now(193))  640  []
End of Step----------------------------------

step(195)
add(idling(195))  645  []
add(now(195))  644  []
delete(now(194))  642  []
End of Step----------------------------------

step(196)
add(idling(196))  647  []
add(now(196))  646  []
delete(now(195))  644  []
End of Step----------------------------------

step(197)
add(idling(197))  649  []
add(now(197))  648  []
delete(now(196))  646  []
End of Step----------------------------------

step(198)
add(idling(198))  651  []
add(now(198))  650  []
delete(now(197))  648  []
End of Step----------------------------------

step(199)
add(idling(199))  653  []
add(now(199))  652  []
delete(now(198))  650  []
End of Step----------------------------------

step(200)
add(idling(200))  655  []
add(now(200))  654  []
delete(now(199))  652  []
End of Step----------------------------------

step(201)
add(idling(201))  657  []
add(now(201))  656  []
delete(now(200))  654  []
End of Step----------------------------------

step(202)
add(idling(202))  659  []
add(now(202))  658  []
delete(now(201))  656  []
End of Step----------------------------------

step(203)
add(idling(203))  661  []
add(now(203))  660  []
delete(now(202))  658  []
End of Step----------------------------------

step(204)
add(idling(204))  663  []
add(now(204))  662  []
delete(now(203))  660  []
End of Step----------------------------------

step(205)
add(idling(205))  665  []
add(now(205))  664  []
delete(now(204))  662  []
End of Step----------------------------------

step(206)
add(idling(206))  667  []
add(now(206))  666  []
delete(now(205))  664  []
End of Step----------------------------------

step(207)
add(idling(207))  669  []
add(now(207))  668  []
delete(now(206))  666  []
End of Step----------------------------------

step(208)
add(idling(208))  671  []
add(now(208))  670  []
delete(now(207))  668  []
End of Step----------------------------------

step(209)
add(idling(209))  673  []
add(now(209))  672  []
delete(now(208))  670  []
End of Step----------------------------------

step(210)
add(idling(210))  675  []
add(now(210))  674  []
delete(now(209))  672  []
End of Step----------------------------------

step(211)
add(idling(211))  677  []
add(now(211))  676  []
delete(now(210))  674  []
End of Step----------------------------------

step(212)
add(idling(212))  679  []
add(now(212))  678  []
delete(now(211))  676  []
End of Step----------------------------------

step(213)
add(utterance(s2))  681  []
add(now(213))  680  []
delete(now(212))  678  []
End of Step----------------------------------

step(214)
add(now(214))  683  []
add(update_utt_list(s2, [s1]))  682  [[176,681,309]]
delete(utt_list([s1]))  309  [[177,307]]
delete(now(213))  680  []
End of Step----------------------------------

step(215)
add(end_of_parse(s2))  699  []
add(verb(s2, val1))  698  []
add(links(s2, l0, val3, val4, Jp))  697  []
add(links(s2, l0, val1, val2, Os))  696  []
add(links(s2, l0, val1, val3, MVp))  695  []
add(links(s2, l0, val0, val1, Wi))  694  []
add(links(s2, l0, val0, val5, RW))  693  []
add(value_of(s2, val5, RIGHT-WALL))  692  []
add(value_of(s2, val4, baltimore))  691  []
add(value_of(s2, val3, to))  690  []
add(value_of(s2, val2, metroliner))  689  []
add(value_of(s2, val1, send))  688  []
add(value_of(s2, val0, LEFT-WALL))  687  []
add(unused_cost(s2, l0, 0))  686  []
add(now(215))  685  []
add(utt_list([s2, s1]))  684  [[177,682]]
delete(now(214))  683  []
End of Step----------------------------------

step(216)
add(now(216))  702  []
add(call(ac_find_links(s2), [links(s2, l0, val0, val5, RW), links(s2, l0, val0, val1, Wi), links(s2, l0, val1, val3, MVp), links(s2, l0, val1, val2, Os), links(s2, l0, val3, val4, Jp), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL)], s2))  701  [[179,699]]
add(parsed(s2))  700  [[188,686]]
delete(now(215))  685  []
End of Step----------------------------------

step(217)
add(now(217))  705  []
add(call(ac_main_verb(s2), [verb(s2, val1), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL)], s2))  704  [[189,700,698]]
add(doing(ac_find_links(s2), [links(s2, l0, val0, val5, RW), links(s2, l0, val0, val1, Wi), links(s2, l0, val1, val3, MVp), links(s2, l0, val1, val2, Os), links(s2, l0, val3, val4, Jp), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL)], s2))  703  []
delete(now(216))  702  []
End of Step----------------------------------

step(218)
add(done(ac_find_links(s2), [links(s2, l0, val0, val5, RW), links(s2, l0, val0, val1, Wi), links(s2, l0, val1, val3, MVp), links(s2, l0, val1, val2, Os), links(s2, l0, val3, val4, Jp), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL)], s2))  712  []
add(link(s2, val3, val4, Jp))  711  []
add(link(s2, val1, val2, Os))  710  []
add(link(s2, val1, val3, MVp))  709  []
add(link(s2, val0, val1, Wi))  708  []
add(now(218))  707  []
add(doing(ac_main_verb(s2), [verb(s2, val1), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL)], s2))  706  []
delete(doing(ac_find_links(s2), [links(s2, l0, val0, val5, RW), links(s2, l0, val0, val1, Wi), links(s2, l0, val1, val3, MVp), links(s2, l0, val1, val2, Os), links(s2, l0, val3, val4, Jp), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL)], s2))  703  []
delete(now(217))  705  []
End of Step----------------------------------

step(219)
add(main_verb(s2, send))  714  []
add(now(219))  713  []
delete(now(218))  707  []
End of Step----------------------------------

step(220)
add(now(220))  716  []
add(call(ac_find_command(s2), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL), main_verb(s2, send)], s2))  715  [[191,714]]
delete(now(219))  713  []
End of Step----------------------------------

step(221)
add(done(ac_main_verb(s2), [verb(s2, val1), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL)], s2))  719  []
add(now(221))  718  []
add(doing(ac_find_command(s2), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL), main_verb(s2, send)], s2))  717  []
delete(doing(ac_main_verb(s2), [verb(s2, val1), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL)], s2))  706  []
delete(now(220))  716  []
End of Step----------------------------------

step(222)
add(domain_command(s2, send, send))  721  []
add(now(222))  720  []
delete(now(221))  718  []
End of Step----------------------------------

step(223)
add(done(ac_find_command(s2), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL), main_verb(s2, send)], s2))  723  []
add(now(223))  722  []
delete(doing(ac_find_command(s2), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL), main_verb(s2, send)], s2))  717  []
delete(now(222))  720  []
End of Step----------------------------------

step(224)
add(now(224))  725  []
add(satisfiedallneeds(s2))  724  [[193,723]]
delete(now(223))  722  []
End of Step----------------------------------

step(225)
add(now(225))  727  []
add(call(ac_find_intention(s2, domain, send), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains]), structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]), structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]), link(s2, val0, val1, Wi), link(s2, val1, val3, MVp), link(s2, val1, val2, Os), link(s2, val3, val4, Jp), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL), verb(s2, val1)], s2))  726  [[195,724,721]]
delete(now(224))  725  []
End of Step----------------------------------

step(226)
add(now(226))  729  []
add(doing(ac_find_intention(s2, domain, send), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains]), structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]), structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]), link(s2, val0, val1, Wi), link(s2, val1, val3, MVp), link(s2, val1, val2, Os), link(s2, val3, val4, Jp), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL), verb(s2, val1)], s2))  728  []
delete(now(225))  727  []
End of Step----------------------------------

step(227)
add(done(ac_find_intention(s2, domain, send), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains]), structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]), structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]), link(s2, val0, val1, Wi), link(s2, val1, val3, MVp), link(s2, val1, val2, Os), link(s2, val3, val4, Jp), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL), verb(s2, val1)], s2))  735  []
add(type(s2, v1, train))  734  []
add(val(s2, v1, val2))  733  []
add(error(s2, Item_NF, [city, baltimore]))  732  []
add(error(s2, Item_NF, [train, metroliner]))  731  []
add(now(227))  730  []
delete(doing(ac_find_intention(s2, domain, send), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains]), structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]), structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]), link(s2, val0, val1, Wi), link(s2, val1, val3, MVp), link(s2, val1, val2, Os), link(s2, val3, val4, Jp), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL), verb(s2, val1)], s2))  728  []
delete(now(226))  729  []
End of Step----------------------------------

step(228)
add(now(228))  738  []
add(need(s2, [disambiguate, baltimore, city]))  737  [[200,732]]
add(need(s2, [disambiguate, metroliner, train]))  736  [[200,731]]
delete(now(227))  730  []
End of Step----------------------------------

step(229)
add(not(satisfiedallneeds(s2)))  739  [[205,736,724]]
add(now(229))  1019  []
add(call(ac_think(s2, [disambiguate, baltimore, city]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(city, Atlanta), isa(city, Baltimore), isa(city, Buffalo), isa(city, Newark), isa(city, Pittsburgh), isa(city, Richmond), isa(city, Washington), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, check), isa(dcommand, display), isa(dcommand, find), isa(dcommand, fullscreen), isa(dcommand, hide), isa(dcommand, light), isa(dcommand, list), isa(dcommand, move), isa(dcommand, mute), isa(dcommand, play), isa(dcommand, quit), isa(dcommand, run), isa(dcommand, send), isa(dcommand, set), isa(dcommand, show), isa(dcommand, stop), isa(direction, desk), isa(direction, e), isa(direction, ne), isa(direction, nw), isa(direction, se), isa(direction, sw), isa(direction, toilet), isa(direction, w), isa(display_type, cuisines), isa(display_type, restaurants), isa(domain, chess), isa(domain, draughts), isa(domain, house), isa(domain, movies), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(end, to), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(mail, email), isa(mail, mail), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(observation, location), isa(parameter, height), isa(parameter, volume), isa(parameter, width), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(qnmark, ?), isa(qnword, what), isa(room, corridor), isa(room, kitchen), isa(room, living), isa(room, master), isa(room, pantry), isa(room, room1), isa(room, room2), isa(room, room3), isa(start, from), isa(status, off), isa(status, on), isa(train, Bullet), isa(train, Metroliner), isa(train, NorthStar), verb(s2, val1), type(s2, v1, train), val(s2, v1, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL), link(s2, val0, val1, Wi), link(s2, val1, val2, Os), link(s2, val1, val3, MVp), link(s2, val3, val4, Jp), structure(check, [[v0, v1, O]], [[v0, verb], [v1, mail]], [popkorn, [v0, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(find, [[v0, v1, O]], [[v0, verb], [v1, train]], [trains, [v0, v1]]), structure(fullscreen, , [[v0, verb]], [movies, [v0]]), structure(hide, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(light, [[v1, v2, MV], [v2, v4, J], [v3, v4, AN]], [[v1, verb], [v2, status], [v3, room], [v4, direction]], [house, [v1, v2, v3, v4]]), structure(list, , [[v0, verb]], [movies, [v0]]), structure(list, [[v0, v1, O]], [[v0, verb]], [movies, [v0]]), structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [chess, [v1, v3]]), structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [draughts, [v0, v1, v3]]), structure(mute, , [[v0, verb]], [movies, [v0]]), structure(no, , , [undo]), structure(play, [[v0, v1, O]], [[v0, verb], [v1, movie]], [movies, [v0, v1]]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [movies, [v0, v1, v3]]), structure(quit, , [[v0, verb]], [v0]), structure(quit, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(run, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]), structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [movies, [v0, v1, v3]]), structure(show, , [[v0, verb]], [v0]), structure(stop, , [[v0, verb]], [movies, [v0]])], s2))  880  [[219,737,159]]
add(call(ac_think(s2, [disambiguate, metroliner, train]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(city, Atlanta), isa(city, Baltimore), isa(city, Buffalo), isa(city, Newark), isa(city, Pittsburgh), isa(city, Richmond), isa(city, Washington), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, check), isa(dcommand, display), isa(dcommand, find), isa(dcommand, fullscreen), isa(dcommand, hide), isa(dcommand, light), isa(dcommand, list), isa(dcommand, move), isa(dcommand, mute), isa(dcommand, play), isa(dcommand, quit), isa(dcommand, run), isa(dcommand, send), isa(dcommand, set), isa(dcommand, show), isa(dcommand, stop), isa(direction, desk), isa(direction, e), isa(direction, ne), isa(direction, nw), isa(direction, se), isa(direction, sw), isa(direction, toilet), isa(direction, w), isa(display_type, cuisines), isa(display_type, restaurants), isa(domain, chess), isa(domain, draughts), isa(domain, house), isa(domain, movies), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(end, to), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(mail, email), isa(mail, mail), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(observation, location), isa(parameter, height), isa(parameter, volume), isa(parameter, width), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(qnmark, ?), isa(qnword, what), isa(room, corridor), isa(room, kitchen), isa(room, living), isa(room, master), isa(room, pantry), isa(room, room1), isa(room, room2), isa(room, room3), isa(start, from), isa(status, off), isa(status, on), isa(train, Bullet), isa(train, Metroliner), isa(train, NorthStar), verb(s2, val1), type(s2, v1, train), val(s2, v1, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL), link(s2, val0, val1, Wi), link(s2, val1, val2, Os), link(s2, val1, val3, MVp), link(s2, val3, val4, Jp), structure(check, [[v0, v1, O]], [[v0, verb], [v1, mail]], [popkorn, [v0, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(find, [[v0, v1, O]], [[v0, verb], [v1, train]], [trains, [v0, v1]]), structure(fullscreen, , [[v0, verb]], [movies, [v0]]), structure(hide, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(light, [[v1, v2, MV], [v2, v4, J], [v3, v4, AN]], [[v1, verb], [v2, status], [v3, room], [v4, direction]], [house, [v1, v2, v3, v4]]), structure(list, , [[v0, verb]], [movies, [v0]]), structure(list, [[v0, v1, O]], [[v0, verb]], [movies, [v0]]), structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [chess, [v1, v3]]), structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [draughts, [v0, v1, v3]]), structure(mute, , [[v0, verb]], [movies, [v0]]), structure(no, , , [undo]), structure(play, [[v0, v1, O]], [[v0, verb], [v1, movie]], [movies, [v0, v1]]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [movies, [v0, v1, v3]]), structure(quit, , [[v0, verb]], [v0]), structure(quit, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(run, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]), structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [movies, [v0, v1, v3]]), structure(show, , [[v0, verb]], [v0]), structure(stop, , [[v0, verb]], [movies, [v0]])], s2))  740  [[219,736,159]]
delete(now(228))  738  []
End of Step----------------------------------

step(230)
add(now(230))  1027  []
add(doing(ac_think(s2, [disambiguate, metroliner, train]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(city, Atlanta), isa(city, Baltimore), isa(city, Buffalo), isa(city, Newark), isa(city, Pittsburgh), isa(city, Richmond), isa(city, Washington), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, check), isa(dcommand, display), isa(dcommand, find), isa(dcommand, fullscreen), isa(dcommand, hide), isa(dcommand, light), isa(dcommand, list), isa(dcommand, move), isa(dcommand, mute), isa(dcommand, play), isa(dcommand, quit), isa(dcommand, run), isa(dcommand, send), isa(dcommand, set), isa(dcommand, show), isa(dcommand, stop), isa(direction, desk), isa(direction, e), isa(direction, ne), isa(direction, nw), isa(direction, se), isa(direction, sw), isa(direction, toilet), isa(direction, w), isa(display_type, cuisines), isa(display_type, restaurants), isa(domain, chess), isa(domain, draughts), isa(domain, house), isa(domain, movies), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(end, to), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(mail, email), isa(mail, mail), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(observation, location), isa(parameter, height), isa(parameter, volume), isa(parameter, width), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(qnmark, ?), isa(qnword, what), isa(room, corridor), isa(room, kitchen), isa(room, living), isa(room, master), isa(room, pantry), isa(room, room1), isa(room, room2), isa(room, room3), isa(start, from), isa(status, off), isa(status, on), isa(train, Bullet), isa(train, Metroliner), isa(train, NorthStar), verb(s2, val1), type(s2, v1, train), val(s2, v1, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL), link(s2, val0, val1, Wi), link(s2, val1, val2, Os), link(s2, val1, val3, MVp), link(s2, val3, val4, Jp), structure(check, [[v0, v1, O]], [[v0, verb], [v1, mail]], [popkorn, [v0, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(find, [[v0, v1, O]], [[v0, verb], [v1, train]], [trains, [v0, v1]]), structure(fullscreen, , [[v0, verb]], [movies, [v0]]), structure(hide, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(light, [[v1, v2, MV], [v2, v4, J], [v3, v4, AN]], [[v1, verb], [v2, status], [v3, room], [v4, direction]], [house, [v1, v2, v3, v4]]), structure(list, , [[v0, verb]], [movies, [v0]]), structure(list, [[v0, v1, O]], [[v0, verb]], [movies, [v0]]), structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [chess, [v1, v3]]), structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [draughts, [v0, v1, v3]]), structure(mute, , [[v0, verb]], [movies, [v0]]), structure(no, , , [undo]), structure(play, [[v0, v1, O]], [[v0, verb], [v1, movie]], [movies, [v0, v1]]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [movies, [v0, v1, v3]]), structure(quit, , [[v0, verb]], [v0]), structure(quit, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(run, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]), structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [movies, [v0, v1, v3]]), structure(show, , [[v0, verb]], [v0]), structure(stop, , [[v0, verb]], [movies, [v0]])], s2))  1026  []
add(doing(ac_think(s2, [disambiguate, baltimore, city]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(city, Atlanta), isa(city, Baltimore), isa(city, Buffalo), isa(city, Newark), isa(city, Pittsburgh), isa(city, Richmond), isa(city, Washington), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, check), isa(dcommand, display), isa(dcommand, find), isa(dcommand, fullscreen), isa(dcommand, hide), isa(dcommand, light), isa(dcommand, list), isa(dcommand, move), isa(dcommand, mute), isa(dcommand, play), isa(dcommand, quit), isa(dcommand, run), isa(dcommand, send), isa(dcommand, set), isa(dcommand, show), isa(dcommand, stop), isa(direction, desk), isa(direction, e), isa(direction, ne), isa(direction, nw), isa(direction, se), isa(direction, sw), isa(direction, toilet), isa(direction, w), isa(display_type, cuisines), isa(display_type, restaurants), isa(domain, chess), isa(domain, draughts), isa(domain, house), isa(domain, movies), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(end, to), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(mail, email), isa(mail, mail), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(observation, location), isa(parameter, height), isa(parameter, volume), isa(parameter, width), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(qnmark, ?), isa(qnword, what), isa(room, corridor), isa(room, kitchen), isa(room, living), isa(room, master), isa(room, pantry), isa(room, room1), isa(room, room2), isa(room, room3), isa(start, from), isa(status, off), isa(status, on), isa(train, Bullet), isa(train, Metroliner), isa(train, NorthStar), verb(s2, val1), type(s2, v1, train), val(s2, v1, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL), link(s2, val0, val1, Wi), link(s2, val1, val2, Os), link(s2, val1, val3, MVp), link(s2, val3, val4, Jp), structure(check, [[v0, v1, O]], [[v0, verb], [v1, mail]], [popkorn, [v0, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(find, [[v0, v1, O]], [[v0, verb], [v1, train]], [trains, [v0, v1]]), structure(fullscreen, , [[v0, verb]], [movies, [v0]]), structure(hide, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(light, [[v1, v2, MV], [v2, v4, J], [v3, v4, AN]], [[v1, verb], [v2, status], [v3, room], [v4, direction]], [house, [v1, v2, v3, v4]]), structure(list, , [[v0, verb]], [movies, [v0]]), structure(list, [[v0, v1, O]], [[v0, verb]], [movies, [v0]]), structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [chess, [v1, v3]]), structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [draughts, [v0, v1, v3]]), structure(mute, , [[v0, verb]], [movies, [v0]]), structure(no, , , [undo]), structure(play, [[v0, v1, O]], [[v0, verb], [v1, movie]], [movies, [v0, v1]]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [movies, [v0, v1, v3]]), structure(quit, , [[v0, verb]], [v0]), structure(quit, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(run, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]), structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [movies, [v0, v1, v3]]), structure(show, , [[v0, verb]], [v0]), structure(stop, , [[v0, verb]], [movies, [v0]])], s2))  1025  []
add(distrusted(879, 229))  1024  [[724]]
add(contra(879, 724, 229))  1023  [[879,724]]
add(contra(739, 724, 229))  1020  [[739,724]]
add(distrusted(739, 229))  1022  [[724]]
add(distrusted(724, 229))  1021  [[739]]
delete(now(229))  1019  []
End of Step----------------------------------

step(231)
add(done(ac_think(s2, [disambiguate, baltimore, city]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(city, Atlanta), isa(city, Baltimore), isa(city, Buffalo), isa(city, Newark), isa(city, Pittsburgh), isa(city, Richmond), isa(city, Washington), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, check), isa(dcommand, display), isa(dcommand, find), isa(dcommand, fullscreen), isa(dcommand, hide), isa(dcommand, light), isa(dcommand, list), isa(dcommand, move), isa(dcommand, mute), isa(dcommand, play), isa(dcommand, quit), isa(dcommand, run), isa(dcommand, send), isa(dcommand, set), isa(dcommand, show), isa(dcommand, stop), isa(direction, desk), isa(direction, e), isa(direction, ne), isa(direction, nw), isa(direction, se), isa(direction, sw), isa(direction, toilet), isa(direction, w), isa(display_type, cuisines), isa(display_type, restaurants), isa(domain, chess), isa(domain, draughts), isa(domain, house), isa(domain, movies), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(end, to), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(mail, email), isa(mail, mail), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(observation, location), isa(parameter, height), isa(parameter, volume), isa(parameter, width), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(qnmark, ?), isa(qnword, what), isa(room, corridor), isa(room, kitchen), isa(room, living), isa(room, master), isa(room, pantry), isa(room, room1), isa(room, room2), isa(room, room3), isa(start, from), isa(status, off), isa(status, on), isa(train, Bullet), isa(train, Metroliner), isa(train, NorthStar), verb(s2, val1), type(s2, v1, train), val(s2, v1, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL), link(s2, val0, val1, Wi), link(s2, val1, val2, Os), link(s2, val1, val3, MVp), link(s2, val3, val4, Jp), structure(check, [[v0, v1, O]], [[v0, verb], [v1, mail]], [popkorn, [v0, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(find, [[v0, v1, O]], [[v0, verb], [v1, train]], [trains, [v0, v1]]), structure(fullscreen, , [[v0, verb]], [movies, [v0]]), structure(hide, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(light, [[v1, v2, MV], [v2, v4, J], [v3, v4, AN]], [[v1, verb], [v2, status], [v3, room], [v4, direction]], [house, [v1, v2, v3, v4]]), structure(list, , [[v0, verb]], [movies, [v0]]), structure(list, [[v0, v1, O]], [[v0, verb]], [movies, [v0]]), structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [chess, [v1, v3]]), structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [draughts, [v0, v1, v3]]), structure(mute, , [[v0, verb]], [movies, [v0]]), structure(no, , , [undo]), structure(play, [[v0, v1, O]], [[v0, verb], [v1, movie]], [movies, [v0, v1]]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [movies, [v0, v1, v3]]), structure(quit, , [[v0, verb]], [v0]), structure(quit, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(run, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]), structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [movies, [v0, v1, v3]]), structure(show, , [[v0, verb]], [v0]), structure(stop, , [[v0, verb]], [movies, [v0]])], s2))  1036  []
add(satisfied(s2, [disambiguate, baltimore, city]))  1035  []
add(value_of(s2, val4, Baltimore))  1034  []
add(done(ac_think(s2, [disambiguate, metroliner, train]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(city, Atlanta), isa(city, Baltimore), isa(city, Buffalo), isa(city, Newark), isa(city, Pittsburgh), isa(city, Richmond), isa(city, Washington), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, check), isa(dcommand, display), isa(dcommand, find), isa(dcommand, fullscreen), isa(dcommand, hide), isa(dcommand, light), isa(dcommand, list), isa(dcommand, move), isa(dcommand, mute), isa(dcommand, play), isa(dcommand, quit), isa(dcommand, run), isa(dcommand, send), isa(dcommand, set), isa(dcommand, show), isa(dcommand, stop), isa(direction, desk), isa(direction, e), isa(direction, ne), isa(direction, nw), isa(direction, se), isa(direction, sw), isa(direction, toilet), isa(direction, w), isa(display_type, cuisines), isa(display_type, restaurants), isa(domain, chess), isa(domain, draughts), isa(domain, house), isa(domain, movies), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(end, to), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(mail, email), isa(mail, mail), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(observation, location), isa(parameter, height), isa(parameter, volume), isa(parameter, width), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(qnmark, ?), isa(qnword, what), isa(room, corridor), isa(room, kitchen), isa(room, living), isa(room, master), isa(room, pantry), isa(room, room1), isa(room, room2), isa(room, room3), isa(start, from), isa(status, off), isa(status, on), isa(train, Bullet), isa(train, Metroliner), isa(train, NorthStar), verb(s2, val1), type(s2, v1, train), val(s2, v1, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL), link(s2, val0, val1, Wi), link(s2, val1, val2, Os), link(s2, val1, val3, MVp), link(s2, val3, val4, Jp), structure(check, [[v0, v1, O]], [[v0, verb], [v1, mail]], [popkorn, [v0, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(find, [[v0, v1, O]], [[v0, verb], [v1, train]], [trains, [v0, v1]]), structure(fullscreen, , [[v0, verb]], [movies, [v0]]), structure(hide, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(light, [[v1, v2, MV], [v2, v4, J], [v3, v4, AN]], [[v1, verb], [v2, status], [v3, room], [v4, direction]], [house, [v1, v2, v3, v4]]), structure(list, , [[v0, verb]], [movies, [v0]]), structure(list, [[v0, v1, O]], [[v0, verb]], [movies, [v0]]), structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [chess, [v1, v3]]), structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [draughts, [v0, v1, v3]]), structure(mute, , [[v0, verb]], [movies, [v0]]), structure(no, , , [undo]), structure(play, [[v0, v1, O]], [[v0, verb], [v1, movie]], [movies, [v0, v1]]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [movies, [v0, v1, v3]]), structure(quit, , [[v0, verb]], [v0]), structure(quit, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(run, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]), structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [movies, [v0, v1, v3]]), structure(show, , [[v0, verb]], [v0]), structure(stop, , [[v0, verb]], [movies, [v0]])], s2))  1033  []
add(satisfied(s2, [disambiguate, metroliner, train]))  1032  []
add(value_of(s2, val2, Metroliner))  1031  []
add(now(231))  1030  []
add(not(satisfiedallneeds(s2)))  1028  [[233,1020]]
delete(doing(ac_think(s2, [disambiguate, baltimore, city]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(city, Atlanta), isa(city, Baltimore), isa(city, Buffalo), isa(city, Newark), isa(city, Pittsburgh), isa(city, Richmond), isa(city, Washington), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, check), isa(dcommand, display), isa(dcommand, find), isa(dcommand, fullscreen), isa(dcommand, hide), isa(dcommand, light), isa(dcommand, list), isa(dcommand, move), isa(dcommand, mute), isa(dcommand, play), isa(dcommand, quit), isa(dcommand, run), isa(dcommand, send), isa(dcommand, set), isa(dcommand, show), isa(dcommand, stop), isa(direction, desk), isa(direction, e), isa(direction, ne), isa(direction, nw), isa(direction, se), isa(direction, sw), isa(direction, toilet), isa(direction, w), isa(display_type, cuisines), isa(display_type, restaurants), isa(domain, chess), isa(domain, draughts), isa(domain, house), isa(domain, movies), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(end, to), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(mail, email), isa(mail, mail), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(observation, location), isa(parameter, height), isa(parameter, volume), isa(parameter, width), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(qnmark, ?), isa(qnword, what), isa(room, corridor), isa(room, kitchen), isa(room, living), isa(room, master), isa(room, pantry), isa(room, room1), isa(room, room2), isa(room, room3), isa(start, from), isa(status, off), isa(status, on), isa(train, Bullet), isa(train, Metroliner), isa(train, NorthStar), verb(s2, val1), type(s2, v1, train), val(s2, v1, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL), link(s2, val0, val1, Wi), link(s2, val1, val2, Os), link(s2, val1, val3, MVp), link(s2, val3, val4, Jp), structure(check, [[v0, v1, O]], [[v0, verb], [v1, mail]], [popkorn, [v0, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(find, [[v0, v1, O]], [[v0, verb], [v1, train]], [trains, [v0, v1]]), structure(fullscreen, , [[v0, verb]], [movies, [v0]]), structure(hide, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(light, [[v1, v2, MV], [v2, v4, J], [v3, v4, AN]], [[v1, verb], [v2, status], [v3, room], [v4, direction]], [house, [v1, v2, v3, v4]]), structure(list, , [[v0, verb]], [movies, [v0]]), structure(list, [[v0, v1, O]], [[v0, verb]], [movies, [v0]]), structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [chess, [v1, v3]]), structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [draughts, [v0, v1, v3]]), structure(mute, , [[v0, verb]], [movies, [v0]]), structure(no, , , [undo]), structure(play, [[v0, v1, O]], [[v0, verb], [v1, movie]], [movies, [v0, v1]]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [movies, [v0, v1, v3]]), structure(quit, , [[v0, verb]], [v0]), structure(quit, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(run, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]), structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [movies, [v0, v1, v3]]), structure(show, , [[v0, verb]], [v0]), structure(stop, , [[v0, verb]], [movies, [v0]])], s2))  1025  []
delete(value_of(s2, val4, baltimore))  691  []
delete(doing(ac_think(s2, [disambiguate, metroliner, train]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(city, Atlanta), isa(city, Baltimore), isa(city, Buffalo), isa(city, Newark), isa(city, Pittsburgh), isa(city, Richmond), isa(city, Washington), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, check), isa(dcommand, display), isa(dcommand, find), isa(dcommand, fullscreen), isa(dcommand, hide), isa(dcommand, light), isa(dcommand, list), isa(dcommand, move), isa(dcommand, mute), isa(dcommand, play), isa(dcommand, quit), isa(dcommand, run), isa(dcommand, send), isa(dcommand, set), isa(dcommand, show), isa(dcommand, stop), isa(direction, desk), isa(direction, e), isa(direction, ne), isa(direction, nw), isa(direction, se), isa(direction, sw), isa(direction, toilet), isa(direction, w), isa(display_type, cuisines), isa(display_type, restaurants), isa(domain, chess), isa(domain, draughts), isa(domain, house), isa(domain, movies), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(end, to), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(mail, email), isa(mail, mail), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(observation, location), isa(parameter, height), isa(parameter, volume), isa(parameter, width), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(qnmark, ?), isa(qnword, what), isa(room, corridor), isa(room, kitchen), isa(room, living), isa(room, master), isa(room, pantry), isa(room, room1), isa(room, room2), isa(room, room3), isa(start, from), isa(status, off), isa(status, on), isa(train, Bullet), isa(train, Metroliner), isa(train, NorthStar), verb(s2, val1), type(s2, v1, train), val(s2, v1, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val2, metroliner), value_of(s2, val3, to), value_of(s2, val4, baltimore), value_of(s2, val5, RIGHT-WALL), link(s2, val0, val1, Wi), link(s2, val1, val2, Os), link(s2, val1, val3, MVp), link(s2, val3, val4, Jp), structure(check, [[v0, v1, O]], [[v0, verb], [v1, mail]], [popkorn, [v0, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [restaurant, [v0, v2, v1]]), structure(find, [[v0, v1, O]], [[v0, verb], [v1, train]], [trains, [v0, v1]]), structure(fullscreen, , [[v0, verb]], [movies, [v0]]), structure(hide, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(light, [[v1, v2, MV], [v2, v4, J], [v3, v4, AN]], [[v1, verb], [v2, status], [v3, room], [v4, direction]], [house, [v1, v2, v3, v4]]), structure(list, , [[v0, verb]], [movies, [v0]]), structure(list, [[v0, v1, O]], [[v0, verb]], [movies, [v0]]), structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [chess, [v1, v3]]), structure(move, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, position], [v2, end], [v3, position]], [draughts, [v0, v1, v3]]), structure(mute, , [[v0, verb]], [movies, [v0]]), structure(no, , , [undo]), structure(play, [[v0, v1, O]], [[v0, verb], [v1, movie]], [movies, [v0, v1]]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [movies, [v0, v1, v3]]), structure(quit, , [[v0, verb]], [v0]), structure(quit, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(run, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]), structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [movies, [v0, v1, v3]]), structure(show, , [[v0, verb]], [v0]), structure(stop, , [[v0, verb]], [movies, [v0]])], s2))  1026  []
delete(value_of(s2, val2, metroliner))  689  []
delete(now(230))  1027  []
End of Step----------------------------------

step(232)
add(satisfiedallneeds(s2))  1037  [[204,1032]]
add(now(232))  1045  []
delete(now(231))  1030  []
End of Step----------------------------------

step(233)
add(now(233))  1063  []
add(distrusted(1044, 232))  1062  [[1028]]
add(contra(1044, 1028, 232))  1061  [[1044,1028]]
add(distrusted(1043, 232))  1060  [[1028]]
add(contra(1043, 1028, 232))  1059  [[1043,1028]]
add(distrusted(1042, 232))  1058  [[1028]]
add(contra(1042, 1028, 232))  1057  [[1042,1028]]
add(distrusted(1041, 232))  1056  [[1028]]
add(contra(1041, 1028, 232))  1055  [[1041,1028]]
add(distrusted(1040, 232))  1054  [[1028]]
add(contra(1040, 1028, 232))  1053  [[1040,1028]]
add(distrusted(1039, 232))  1052  [[1028]]
add(contra(1039, 1028, 232))  1051  [[1039,1028]]
add(distrusted(1038, 232))  1050  [[1028]]
add(contra(1038, 1028, 232))  1049  [[1038,1028]]
add(contra(1037, 1028, 232))  1046  [[1037,1028]]
add(distrusted(1037, 232))  1048  [[1028]]
add(distrusted(1028, 232))  1047  [[1037]]
delete(now(232))  1045  []
End of Step----------------------------------

step(234)
add(now(234))  1072  []
add(satisfiedallneeds(s2))  1064  [[233,1046]]
delete(now(233))  1063  []
End of Step----------------------------------

step(235)
add(now(235))  1074  []
add(call(ac_find_intention(s2, domain, send), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains]), structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]), structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]), link(s2, val0, val1, Wi), link(s2, val1, val3, MVp), link(s2, val1, val2, Os), link(s2, val3, val4, Jp), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val3, to), value_of(s2, val5, RIGHT-WALL), value_of(s2, val2, Metroliner), value_of(s2, val4, Baltimore), verb(s2, val1)], s2))  1073  [[195,1064,721]]
delete(now(234))  1072  []
End of Step----------------------------------

step(236)
add(now(236))  1076  []
add(doing(ac_find_intention(s2, domain, send), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains]), structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]), structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]), link(s2, val0, val1, Wi), link(s2, val1, val3, MVp), link(s2, val1, val2, Os), link(s2, val3, val4, Jp), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val3, to), value_of(s2, val5, RIGHT-WALL), value_of(s2, val2, Metroliner), value_of(s2, val4, Baltimore), verb(s2, val1)], s2))  1075  []
delete(now(235))  1074  []
End of Step----------------------------------

step(237)
add(done(ac_find_intention(s2, domain, send), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains]), structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]), structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]), link(s2, val0, val1, Wi), link(s2, val1, val3, MVp), link(s2, val1, val2, Os), link(s2, val3, val4, Jp), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val3, to), value_of(s2, val5, RIGHT-WALL), value_of(s2, val2, Metroliner), value_of(s2, val4, Baltimore), verb(s2, val1)], s2))  1081  []
add(intention(s2, domain, [trains, [send, Metroliner, Baltimore]]))  1080  []
add(type(s2, v3, city))  1079  []
add(val(s2, v3, val4))  1078  []
add(now(237))  1077  []
delete(doing(ac_find_intention(s2, domain, send), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains]), structure(send, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, train], [v2, end], [v3, city]], [trains, [v0, v1, v3]]), structure(send, [[v0, v2, O], [v1, v2, A]], [[v0, verb], [v1, train], [v2, city]], [trains, [v0, v1, v2]]), link(s2, val0, val1, Wi), link(s2, val1, val3, MVp), link(s2, val1, val2, Os), link(s2, val3, val4, Jp), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, send), value_of(s2, val3, to), value_of(s2, val5, RIGHT-WALL), value_of(s2, val2, Metroliner), value_of(s2, val4, Baltimore), verb(s2, val1)], s2))  1075  []
delete(now(236))  1076  []
End of Step----------------------------------

step(238)
add(now(238))  1084  []
add(call(ac_action(s2, domain, [5, [trains, [send, Metroliner, Baltimore]]]), , s2))  1083  [[211,1080]]
add(belief(domain, [trains, [send, Metroliner, Baltimore]]))  1082  [[206,1080]]
delete(now(237))  1077  []
End of Step----------------------------------

step(239)
add(now(239))  1086  []
add(doing(ac_action(s2, domain, [5, [trains, [send, Metroliner, Baltimore]]]), , s2))  1085  []
delete(now(238))  1084  []
End of Step----------------------------------

step(240)
add(done(ac_action(s2, domain, [5, [trains, [send, Metroliner, Baltimore]]]), , s2))  1089  []
add(send_to_domain(s2, 5, [[trains, [send, Metroliner, Baltimore]]]))  1088  []
add(now(240))  1087  []
delete(doing(ac_action(s2, domain, [5, [trains, [send, Metroliner, Baltimore]]]), , s2))  1085  []
delete(now(239))  1086  []
End of Step----------------------------------

step(241)
add(now(241))  1091  []
add(sent_to_domain(s2, 5, [[trains, [send, Metroliner, Baltimore]]]))  1090  [[215,1088]]
delete(now(240))  1087  []
End of Step----------------------------------

step(242)
add(now(242))  1094  []
add(call(ac_report_action([[trains, [send, Metroliner, Baltimore]]]), , s2))  1093  [[217,1090]]
add(call(ac_post_process(s2, [[trains, [send, Metroliner, Baltimore]]]), [result(find, location), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains])], s2))  1092  [[216,1090]]
delete(now(241))  1091  []
End of Step----------------------------------

step(243)
add(now(243))  1097  []
add(doing(ac_post_process(s2, [[trains, [send, Metroliner, Baltimore]]]), [result(find, location), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains])], s2))  1096  []
add(doing(ac_report_action([[trains, [send, Metroliner, Baltimore]]]), , s2))  1095  []
delete(now(242))  1094  []
End of Step----------------------------------

step(244)
add(domain_list([trains]))  1099  []
add(now(244))  1098  []
delete(domain_list([trains]))  372  []
delete(now(243))  1097  []
End of Step----------------------------------

step(245)
add(done(ac_report_action([[trains, [send, Metroliner, Baltimore]]]), , s2))  1102  []
add(done(ac_post_process(s2, [[trains, [send, Metroliner, Baltimore]]]), [result(find, location), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains])], s2))  1101  []
add(now(245))  1100  []
delete(doing(ac_report_action([[trains, [send, Metroliner, Baltimore]]]), , s2))  1095  []
delete(doing(ac_post_process(s2, [[trains, [send, Metroliner, Baltimore]]]), [result(find, location), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains])], s2))  1096  []
delete(now(244))  1098  []
End of Step----------------------------------

step(246)
add(idling(246))  1104  []
add(now(246))  1103  []
delete(now(245))  1100  []
End of Step----------------------------------

step(247)
add(idling(247))  1106  []
add(now(247))  1105  []
delete(now(246))  1103  []
End of Step----------------------------------

step(248)
add(idling(248))  1108  []
add(now(248))  1107  []
delete(now(247))  1105  []
End of Step----------------------------------

step(249)
add(idling(249))  1110  []
add(now(249))  1109  []
delete(now(248))  1107  []
End of Step----------------------------------

step(250)
add(idling(250))  1112  []
add(now(250))  1111  []
delete(now(249))  1109  []
End of Step----------------------------------

step(251)
add(idling(251))  1114  []
add(now(251))  1113  []
delete(now(250))  1111  []
End of Step----------------------------------

step(252)
add(idling(252))  1116  []
add(now(252))  1115  []
delete(now(251))  1113  []
End of Step----------------------------------

step(253)
add(idling(253))  1118  []
add(now(253))  1117  []
delete(now(252))  1115  []
End of Step----------------------------------

step(254)
add(idling(254))  1120  []
add(now(254))  1119  []
delete(now(253))  1117  []
End of Step----------------------------------

step(255)
add(idling(255))  1122  []
add(now(255))  1121  []
delete(now(254))  1119  []
End of Step----------------------------------

step(256)
add(idling(256))  1124  []
add(now(256))  1123  []
delete(now(255))  1121  []
End of Step----------------------------------

step(257)
add(idling(257))  1126  []
add(now(257))  1125  []
delete(now(256))  1123  []
End of Step----------------------------------

step(258)
add(idling(258))  1128  []
add(now(258))  1127  []
delete(now(257))  1125  []
End of Step----------------------------------

step(259)
add(idling(259))  1130  []
add(now(259))  1129  []
delete(now(258))  1127  []
End of Step----------------------------------

step(260)
add(idling(260))  1132  []
add(now(260))  1131  []
delete(now(259))  1129  []
End of Step----------------------------------

step(261)
add(idling(261))  1134  []
add(now(261))  1133  []
delete(now(260))  1131  []
End of Step----------------------------------

step(262)
add(idling(262))  1136  []
add(now(262))  1135  []
delete(now(261))  1133  []
End of Step----------------------------------

step(263)
add(idling(263))  1138  []
add(now(263))  1137  []
delete(now(262))  1135  []
End of Step----------------------------------

step(264)
add(idling(264))  1140  []
add(now(264))  1139  []
delete(now(263))  1137  []
End of Step----------------------------------

step(265)
add(idling(265))  1142  []
add(now(265))  1141  []
delete(now(264))  1139  []
End of Step----------------------------------

step(266)
add(idling(266))  1144  []
add(now(266))  1143  []
delete(now(265))  1141  []
End of Step----------------------------------

step(267)
add(idling(267))  1146  []
add(now(267))  1145  []
delete(now(266))  1143  []
End of Step----------------------------------

step(268)
add(idling(268))  1148  []
add(now(268))  1147  []
delete(now(267))  1145  []
End of Step----------------------------------

step(269)
add(idling(269))  1150  []
add(now(269))  1149  []
delete(now(268))  1147  []
End of Step----------------------------------

step(270)
add(idling(270))  1152  []
add(now(270))  1151  []
delete(now(269))  1149  []
End of Step----------------------------------

step(271)
add(idling(271))  1154  []
add(now(271))  1153  []
delete(now(270))  1151  []
End of Step----------------------------------

step(272)
add(idling(272))  1156  []
add(now(272))  1155  []
delete(now(271))  1153  []
End of Step----------------------------------

step(273)
add(idling(273))  1158  []
add(now(273))  1157  []
delete(now(272))  1155  []
End of Step----------------------------------

step(274)
add(idling(274))  1160  []
add(now(274))  1159  []
delete(now(273))  1157  []
End of Step----------------------------------

step(275)
add(idling(275))  1162  []
add(now(275))  1161  []
delete(now(274))  1159  []
End of Step----------------------------------

step(276)
add(idling(276))  1164  []
add(now(276))  1163  []
delete(now(275))  1161  []
End of Step----------------------------------

step(277)
add(idling(277))  1166  []
add(now(277))  1165  []
delete(now(276))  1163  []
End of Step----------------------------------

step(278)
add(idling(278))  1168  []
add(now(278))  1167  []
delete(now(277))  1165  []
End of Step----------------------------------

step(279)
add(idling(279))  1170  []
add(now(279))  1169  []
delete(now(278))  1167  []
End of Step----------------------------------

step(280)
add(idling(280))  1172  []
add(now(280))  1171  []
delete(now(279))  1169  []
End of Step----------------------------------

step(281)
add(idling(281))  1174  []
add(now(281))  1173  []
delete(now(280))  1171  []
End of Step----------------------------------

step(282)
add(idling(282))  1176  []
add(now(282))  1175  []
delete(now(281))  1173  []
End of Step----------------------------------

step(283)
add(idling(283))  1178  []
add(now(283))  1177  []
delete(now(282))  1175  []
End of Step----------------------------------

step(284)
add(idling(284))  1180  []
add(now(284))  1179  []
delete(now(283))  1177  []
End of Step----------------------------------

step(285)
add(end_of_parse(s3))  1192  []
add(verb(s3, val1))  1191  []
add(links(s3, l0, val1, val2, Op))  1190  []
add(links(s3, l0, val0, val1, Wi))  1189  []
add(links(s3, l0, val0, val3, RW))  1188  []
add(value_of(s3, val3, RIGHT-WALL))  1187  []
add(value_of(s3, val2, trains))  1186  []
add(value_of(s3, val1, quit))  1185  []
add(value_of(s3, val0, LEFT-WALL))  1184  []
add(unused_cost(s3, l0, 0))  1183  []
add(utterance(s3))  1182  []
add(now(285))  1181  []
delete(now(284))  1179  []
End of Step----------------------------------

step(286)
add(now(286))  1196  []
add(call(ac_find_links(s3), [links(s3, l0, val0, val3, RW), links(s3, l0, val0, val1, Wi), links(s3, l0, val1, val2, Op), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, quit), value_of(s3, val2, trains), value_of(s3, val3, RIGHT-WALL)], s3))  1195  [[179,1192]]
add(parsed(s3))  1194  [[188,1183]]
add(update_utt_list(s3, [s2, s1]))  1193  [[176,1182,684]]
delete(utt_list([s2, s1]))  684  [[177,682]]
delete(now(285))  1181  []
End of Step----------------------------------

step(287)
add(now(287))  1200  []
add(call(ac_main_verb(s3), [verb(s3, val1), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, quit), value_of(s3, val2, trains), value_of(s3, val3, RIGHT-WALL)], s3))  1199  [[189,1194,1191]]
add(utt_list([s3, s2, s1]))  1198  [[177,1193]]
add(doing(ac_find_links(s3), [links(s3, l0, val0, val3, RW), links(s3, l0, val0, val1, Wi), links(s3, l0, val1, val2, Op), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, quit), value_of(s3, val2, trains), value_of(s3, val3, RIGHT-WALL)], s3))  1197  []
delete(now(286))  1196  []
End of Step----------------------------------

step(288)
add(done(ac_find_links(s3), [links(s3, l0, val0, val3, RW), links(s3, l0, val0, val1, Wi), links(s3, l0, val1, val2, Op), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, quit), value_of(s3, val2, trains), value_of(s3, val3, RIGHT-WALL)], s3))  1205  []
add(link(s3, val1, val2, Op))  1204  []
add(link(s3, val0, val1, Wi))  1203  []
add(now(288))  1202  []
add(doing(ac_main_verb(s3), [verb(s3, val1), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, quit), value_of(s3, val2, trains), value_of(s3, val3, RIGHT-WALL)], s3))  1201  []
delete(doing(ac_find_links(s3), [links(s3, l0, val0, val3, RW), links(s3, l0, val0, val1, Wi), links(s3, l0, val1, val2, Op), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, quit), value_of(s3, val2, trains), value_of(s3, val3, RIGHT-WALL)], s3))  1197  []
delete(now(287))  1200  []
End of Step----------------------------------

step(289)
add(main_verb(s3, quit))  1207  []
add(now(289))  1206  []
delete(now(288))  1202  []
End of Step----------------------------------

step(290)
add(now(290))  1209  []
add(call(ac_find_command(s3), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, quit), value_of(s3, val2, trains), value_of(s3, val3, RIGHT-WALL), main_verb(s3, quit)], s3))  1208  [[191,1207]]
delete(now(289))  1206  []
End of Step----------------------------------

step(291)
add(done(ac_main_verb(s3), [verb(s3, val1), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, quit), value_of(s3, val2, trains), value_of(s3, val3, RIGHT-WALL)], s3))  1212  []
add(now(291))  1211  []
add(doing(ac_find_command(s3), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, quit), value_of(s3, val2, trains), value_of(s3, val3, RIGHT-WALL), main_verb(s3, quit)], s3))  1210  []
delete(doing(ac_main_verb(s3), [verb(s3, val1), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, quit), value_of(s3, val2, trains), value_of(s3, val3, RIGHT-WALL)], s3))  1201  []
delete(now(290))  1209  []
End of Step----------------------------------

step(292)
add(domain_command(s3, quit, quit))  1214  []
add(now(292))  1213  []
delete(now(291))  1211  []
End of Step----------------------------------

step(293)
add(done(ac_find_command(s3), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, quit), value_of(s3, val2, trains), value_of(s3, val3, RIGHT-WALL), main_verb(s3, quit)], s3))  1216  []
add(now(293))  1215  []
delete(doing(ac_find_command(s3), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, quit), value_of(s3, val2, trains), value_of(s3, val3, RIGHT-WALL), main_verb(s3, quit)], s3))  1210  []
delete(now(292))  1213  []
End of Step----------------------------------

step(294)
add(now(294))  1218  []
add(satisfiedallneeds(s3))  1217  [[193,1216]]
delete(now(293))  1215  []
End of Step----------------------------------

step(295)
add(now(295))  1220  []
add(call(ac_find_intention(s3, domain, quit), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains]), structure(quit, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(quit, , [[v0, verb]], [v0]), link(s3, val0, val1, Wi), link(s3, val1, val2, Op), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, quit), value_of(s3, val2, trains), value_of(s3, val3, RIGHT-WALL), verb(s3, val1)], s3))  1219  [[195,1217,1214]]
delete(now(294))  1218  []
End of Step----------------------------------

step(296)
add(now(296))  1222  []
add(doing(ac_find_intention(s3, domain, quit), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains]), structure(quit, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(quit, , [[v0, verb]], [v0]), link(s3, val0, val1, Wi), link(s3, val1, val2, Op), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, quit), value_of(s3, val2, trains), value_of(s3, val3, RIGHT-WALL), verb(s3, val1)], s3))  1221  []
delete(now(295))  1220  []
End of Step----------------------------------

step(297)
add(done(ac_find_intention(s3, domain, quit), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains]), structure(quit, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(quit, , [[v0, verb]], [v0]), link(s3, val0, val1, Wi), link(s3, val1, val2, Op), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, quit), value_of(s3, val2, trains), value_of(s3, val3, RIGHT-WALL), verb(s3, val1)], s3))  1227  []
add(intention(s3, domain, [quit, trains]))  1226  []
add(type(s3, v0, verb))  1225  []
add(val(s3, v0, val1))  1224  []
add(now(297))  1223  []
delete(doing(ac_find_intention(s3, domain, quit), [isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains]), structure(quit, [[v0, v1, O]], [[v0, verb], [v1, domain]], [v0, v1]), structure(quit, , [[v0, verb]], [v0]), link(s3, val0, val1, Wi), link(s3, val1, val2, Op), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, quit), value_of(s3, val2, trains), value_of(s3, val3, RIGHT-WALL), verb(s3, val1)], s3))  1221  []
delete(now(296))  1222  []
End of Step----------------------------------

step(298)
add(now(298))  1230  []
add(call(ac_action(s3, domain, [5, [quit, trains]]), , s3))  1229  [[211,1226]]
add(belief(domain, [quit, trains]))  1228  [[206,1226]]
delete(now(297))  1223  []
End of Step----------------------------------

step(299)
add(now(299))  1232  []
add(doing(ac_action(s3, domain, [5, [quit, trains]]), , s3))  1231  []
delete(now(298))  1230  []
End of Step----------------------------------

step(300)
add(done(ac_action(s3, domain, [5, [quit, trains]]), , s3))  1235  []
add(send_to_domain(s3, 5, [[quit, trains]]))  1234  []
add(now(300))  1233  []
delete(doing(ac_action(s3, domain, [5, [quit, trains]]), , s3))  1231  []
delete(now(299))  1232  []
End of Step----------------------------------

step(301)
add(now(301))  1237  []
add(sent_to_domain(s3, 5, [[quit, trains]]))  1236  [[215,1234]]
delete(now(300))  1233  []
End of Step----------------------------------

step(302)
add(now(302))  1240  []
add(call(ac_report_action([[quit, trains]]), , s3))  1239  [[217,1236]]
add(call(ac_post_process(s3, [[quit, trains]]), [result(find, location), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains])], s3))  1238  [[216,1236]]
delete(now(301))  1237  []
End of Step----------------------------------

step(303)
add(now(303))  1243  []
add(doing(ac_post_process(s3, [[quit, trains]]), [result(find, location), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains])], s3))  1242  []
add(doing(ac_report_action([[quit, trains]]), , s3))  1241  []
delete(now(302))  1240  []
End of Step----------------------------------

step(304)
add(domain_list([trains]))  1245  []
add(now(304))  1244  []
delete(domain_list([trains]))  1099  []
delete(now(303))  1243  []
End of Step----------------------------------

step(305)
add(done(ac_report_action([[quit, trains]]), , s3))  1248  []
add(done(ac_post_process(s3, [[quit, trains]]), [result(find, location), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains])], s3))  1247  []
add(now(305))  1246  []
delete(doing(ac_report_action([[quit, trains]]), , s3))  1241  []
delete(doing(ac_post_process(s3, [[quit, trains]]), [result(find, location), isa(movie, bad.asx), isa(movie, rome.avi), isa(movie, swat.mov), isa(movie, traider.mov), isa(movie, David.asf), isa(movie, Kenshin.ogm), isa(start, from), isa(city, Baltimore), isa(city, Buffalo), isa(city, Richmond), isa(city, Pittsburgh), isa(city, Washington), isa(city, Newark), isa(city, Atlanta), isa(train, Metroliner), isa(train, Bullet), isa(train, NorthStar), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(mail, email), isa(mail, mail), isa(end, to), isa(position, a1), isa(position, a2), isa(position, a3), isa(position, a4), isa(position, a5), isa(position, a6), isa(position, a7), isa(position, a8), isa(position, b1), isa(position, b2), isa(position, b5), isa(position, b6), isa(position, b7), isa(position, b8), isa(position, c1), isa(position, c2), isa(position, c3), isa(position, c4), isa(position, c5), isa(position, c6), isa(position, c7), isa(position, c8), isa(position, d1), isa(position, d2), isa(position, d3), isa(position, d4), isa(position, d5), isa(position, d6), isa(position, d7), isa(position, d8), isa(position, e1), isa(position, e2), isa(position, e3), isa(position, e4), isa(position, e5), isa(position, e6), isa(position, e7), isa(position, e8), isa(position, f1), isa(position, f2), isa(position, f3), isa(position, f4), isa(position, f5), isa(position, f6), isa(position, f7), isa(position, f8), isa(position, g1), isa(position, g2), isa(position, g3), isa(position, g4), isa(position, g5), isa(position, g6), isa(position, g7), isa(position, g8), isa(position, h1), isa(position, h2), isa(position, h3), isa(position, h4), isa(position, h5), isa(position, h6), isa(position, h7), isa(position, h8), isa(room, room1), isa(room, master), isa(room, room2), isa(room, room3), isa(room, corridor), isa(room, pantry), isa(room, kitchen), isa(room, living), isa(direction, nw), isa(direction, w), isa(direction, desk), isa(direction, toilet), isa(direction, e), isa(direction, ne), isa(direction, se), isa(direction, sw), isa(parameter, volume), isa(parameter, height), isa(parameter, width), isa(status, on), isa(status, off), isa(domain, house), isa(domain, chess), isa(domain, draughts), isa(domain, popkorn), isa(domain, restaurant), isa(domain, trains), isa(domain, movies), isa(observation, location), isa(dcommand, run), isa(dcommand, show), isa(dcommand, hide), isa(dcommand, quit), isa(dcommand, display), isa(dcommand, move), isa(dcommand, check), isa(dcommand, light), isa(dcommand, play), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, send), isa(dcommand, find), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), domain_list([trains])], s3))  1242  []
delete(now(304))  1244  []
End of Step----------------------------------

step(306)
add(idling(306))  1250  []
add(now(306))  1249  []
delete(now(305))  1246  []
End of Step----------------------------------

step(307)
add(idling(307))  1252  []
add(now(307))  1251  []
delete(now(306))  1249  []
End of Step----------------------------------

step(308)
add(idling(308))  1254  []
add(now(308))  1253  []
delete(now(307))  1251  []
End of Step----------------------------------

step(309)
add(idling(309))  1256  []
add(now(309))  1255  []
delete(now(308))  1253  []
End of Step----------------------------------

step(310)
add(idling(310))  1258  []
add(now(310))  1257  []
delete(now(309))  1255  []
End of Step----------------------------------

step(311)
add(idling(311))  1260  []
add(now(311))  1259  []
delete(now(310))  1257  []
End of Step----------------------------------

step(312)
add(idling(312))  1262  []
add(now(312))  1261  []
delete(now(311))  1259  []
End of Step----------------------------------

step(313)
add(idling(313))  1264  []
add(now(313))  1263  []
delete(now(312))  1261  []
End of Step----------------------------------

step(314)
add(idling(314))  1266  []
add(now(314))  1265  []
delete(now(313))  1263  []
End of Step----------------------------------

step(315)
add(idling(315))  1268  []
add(now(315))  1267  []
delete(now(314))  1265  []
End of Step----------------------------------

step(316)
add(idling(316))  1270  []
add(now(316))  1269  []
delete(now(315))  1267  []
End of Step----------------------------------

step(317)
add(idling(317))  1272  []
add(now(317))  1271  []
delete(now(316))  1269  []
End of Step----------------------------------

step(318)
add(idling(318))  1274  []
add(now(318))  1273  []
delete(now(317))  1271  []
End of Step----------------------------------

step(319)
add(idling(319))  1276  []
add(now(319))  1275  []
delete(now(318))  1273  []
End of Step----------------------------------

step(320)
add(idling(320))  1278  []
add(now(320))  1277  []
delete(now(319))  1275  []
End of Step----------------------------------

step(321)
add(idling(321))  1280  []
add(now(321))  1279  []
delete(now(320))  1277  []
End of Step----------------------------------

step(322)
add(idling(322))  1282  []
add(now(322))  1281  []
delete(now(321))  1279  []
End of Step----------------------------------

step(323)
add(idling(323))  1284  []
add(now(323))  1283  []
delete(now(322))  1281  []
End of Step----------------------------------

step(324)
add(idling(324))  1286  []
add(now(324))  1285  []
delete(now(323))  1283  []
End of Step----------------------------------

step(325)
add(idling(325))  1288  []
add(now(325))  1287  []
delete(now(324))  1285  []
End of Step----------------------------------

step(326)
add(idling(326))  1290  []
add(now(326))  1289  []
delete(now(325))  1287  []
End of Step----------------------------------

step(327)
add(idling(327))  1292  []
add(now(327))  1291  []
delete(now(326))  1289  []
End of Step----------------------------------

step(328)
add(idling(328))  1294  []
add(now(328))  1293  []
delete(now(327))  1291  []
End of Step----------------------------------

step(329)
add(idling(329))  1296  []
add(now(329))  1295  []
delete(now(328))  1293  []
End of Step----------------------------------

step(330)
add(idling(330))  1298  []
add(now(330))  1297  []
delete(now(329))  1295  []
End of Step----------------------------------

step(331)
add(idling(331))  1300  []
add(now(331))  1299  []
delete(now(330))  1297  []
End of Step----------------------------------

step(332)
add(idling(332))  1302  []
add(now(332))  1301  []
delete(now(331))  1299  []
End of Step----------------------------------

step(333)
add(idling(333))  1304  []
add(now(333))  1303  []
delete(now(332))  1301  []
End of Step----------------------------------

step(334)
add(idling(334))  1306  []
add(now(334))  1305  []
delete(now(333))  1303  []
End of Step----------------------------------

step(335)
add(idling(335))  1308  []
add(now(335))  1307  []
delete(now(334))  1305  []
End of Step----------------------------------

step(336)
add(idling(336))  1310  []
add(now(336))  1309  []
delete(now(335))  1307  []
End of Step----------------------------------

step(337)
add(idling(337))  1312  []
add(now(337))  1311  []
delete(now(336))  1309  []
End of Step----------------------------------

step(338)
add(idling(338))  1314  []
add(now(338))  1313  []
delete(now(337))  1311  []
End of Step----------------------------------

step(339)
add(idling(339))  1316  []
add(now(339))  1315  []
delete(now(338))  1313  []
End of Step----------------------------------

step(340)
add(idling(340))  1318  []
add(now(340))  1317  []
delete(now(339))  1315  []
End of Step----------------------------------

step(341)
add(idling(341))  1320  []
add(now(341))  1319  []
delete(now(340))  1317  []
End of Step----------------------------------

step(342)
add(idling(342))  1322  []
add(now(342))  1321  []
delete(now(341))  1319  []
End of Step----------------------------------

step(343)
add(idling(343))  1324  []
add(now(343))  1323  []
delete(now(342))  1321  []
End of Step----------------------------------

step(344)
add(idling(344))  1326  []
add(now(344))  1325  []
delete(now(343))  1323  []
End of Step----------------------------------

step(345)
add(idling(345))  1328  []
add(now(345))  1327  []
delete(now(344))  1325  []
End of Step----------------------------------

step(346)
add(idling(346))  1330  []
add(now(346))  1329  []
delete(now(345))  1327  []
End of Step----------------------------------

step(347)
add(idling(347))  1332  []
add(now(347))  1331  []
delete(now(346))  1329  []
End of Step----------------------------------

step(348)
add(idling(348))  1334  []
add(now(348))  1333  []
delete(now(347))  1331  []
End of Step----------------------------------

step(349)
add(idling(349))  1336  []
add(now(349))  1335  []
delete(now(348))  1333  []
End of Step----------------------------------

step(350)
add(idling(350))  1338  []
add(now(350))  1337  []
delete(now(349))  1335  []
End of Step----------------------------------

step(351)
add(idling(351))  1340  []
add(now(351))  1339  []
delete(now(350))  1337  []
End of Step----------------------------------

step(352)
add(idling(352))  1342  []
add(now(352))  1341  []
delete(now(351))  1339  []
End of Step----------------------------------

step(353)
add(idling(353))  1344  []
add(now(353))  1343  []
delete(now(352))  1341  []
End of Step----------------------------------

step(354)
add(idling(354))  1346  []
add(now(354))  1345  []
delete(now(353))  1343  []
End of Step----------------------------------

step(355)
add(idling(355))  1348  []
add(now(355))  1347  []
delete(now(354))  1345  []
End of Step----------------------------------

step(356)
add(idling(356))  1350  []
add(now(356))  1349  []
delete(now(355))  1347  []
End of Step----------------------------------

step(357)
add(idling(357))  1352  []
add(now(357))  1351  []
delete(now(356))  1349  []
End of Step----------------------------------

step(358)
add(idling(358))  1354  []
add(now(358))  1353  []
delete(now(357))  1351  []
End of Step----------------------------------

step(359)
add(idling(359))  1356  []
add(now(359))  1355  []
delete(now(358))  1353  []
End of Step----------------------------------

step(360)
add(idling(360))  1358  []
add(now(360))  1357  []
delete(now(359))  1355  []
End of Step----------------------------------

step(361)
add(idling(361))  1360  []
add(now(361))  1359  []
delete(now(360))  1357  []
End of Step----------------------------------

step(362)
add(idling(362))  1362  []
add(now(362))  1361  []
delete(now(361))  1359  []
End of Step----------------------------------

step(363)
add(idling(363))  1364  []
add(now(363))  1363  []
delete(now(362))  1361  []
End of Step----------------------------------

step(364)
add(idling(364))  1366  []
add(now(364))  1365  []
delete(now(363))  1363  []
End of Step----------------------------------

step(365)
add(idling(365))  1368  []
add(now(365))  1367  []
delete(now(364))  1365  []
End of Step----------------------------------

step(366)
add(idling(366))  1370  []
add(now(366))  1369  []
delete(now(365))  1367  []
End of Step----------------------------------

step(367)
add(idling(367))  1372  []
add(now(367))  1371  []
delete(now(366))  1369  []
End of Step----------------------------------

step(368)
add(idling(368))  1374  []
add(now(368))  1373  []
delete(now(367))  1371  []
End of Step----------------------------------

step(369)
add(idling(369))  1376  []
add(now(369))  1375  []
delete(now(368))  1373  []
End of Step----------------------------------

step(370)
add(idling(370))  1378  []
add(now(370))  1377  []
delete(now(369))  1375  []
End of Step----------------------------------

step(371)
add(idling(371))  1380  []
add(now(371))  1379  []
delete(now(370))  1377  []
End of Step----------------------------------

step(372)
add(idling(372))  1382  []
add(now(372))  1381  []
delete(now(371))  1379  []
End of Step----------------------------------

step(373)
add(idling(373))  1384  []
add(now(373))  1383  []
delete(now(372))  1381  []
End of Step----------------------------------

step(374)
add(idling(374))  1386  []
add(now(374))  1385  []
delete(now(373))  1383  []
End of Step----------------------------------

step(375)
add(idling(375))  1388  []
add(now(375))  1387  []
delete(now(374))  1385  []
End of Step----------------------------------
