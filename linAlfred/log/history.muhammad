
step(1)
add(now(1))  97  []
add(contra(X1, X2, X3) & eval_bound(name_to_time(X2, X4), [X2]) & eval_bound(name_to_time(X1, X5), [X1]) & eval_bound(;(->(>(X4, X5), =(X6, X1)), =(X6, X2)), [X5, X4, X1, X2]) -f-> conclusion(reinstate(X6)))  96  []
add(done(ac_think(X7, X8), X9, X7) & eval_bound(member(equil(X10, X11), X9), [X9, X11, X10]) & eval_bound(=(X8, [equil, X11, X12]), [X8]) & eval_bound(\+(matchwords(X10, X13, X14)), [X10]) & eval_bound(\+(pos_int(satisfied(X7, X8))), [X7, X8]) & equil(X10, X11) -f-> conclusion(need(X7, [equil, X10, X12])))  95  []
add(done(ac_think(X15, X16), X17, X15) & eval_bound(member(equil(X18, X19), X17), [X17, X18, X19]) & eval_bound(=(X16, [equil, X18, X20]), [X16]) & eval_bound(\+(matchwords(X19, X21, X22)), [X19]) & eval_bound(\+(pos_int(satisfied(X15, X16))), [X15, X16]) & equil(X18, X19) -f-> conclusion(need(X15, [equil, X19, X20])))  94  []
add(update_expect_list(X23, X24) & eval_bound(df(update_expect_list(X23, X24)), [X23, X24]) & eval_bound(delete_expect_lists(X23), [X23]) -f-> conclusion(expect_list(X24)))  93  []
add(eval_bound(union(X25, X26, X27), [X25, X26]) & eval_bound(\==(X25, X26), [X25, X26]) & expect_list(X26) & expect_list(X25) -f-> conclusion(update_expect_lists([X25, X26], X27)))  92  []
add(satisfied(X28, X29) & expect(X28, X29) & eval_bound(delete(X30, [X28, X29], X31), [X28, X29, X30]) & eval_bound(member([X28, X29], X30), [X28, X29, X30]) & expect_list(X30) -f-> conclusion(update_expect_list([X30], X31)))  91  []
add(expect(X32, X33) & eval_bound(\+(member([X32, X33], X34)), [X32, X33, X34]) & eval_bound(\+(pos_int_u(update_expect_list(X35, X36))), ) & eval_bound(\+(pos_int_u(satisfied(X32, X33))), [X32, X33]) & expect_list(X34) -f-> conclusion(update_expect_list([X34], [[X32, X33], X34])))  90  []
add(done(ac_ask(X37, X38), X39, X40) -f-> conclusion(expect(X37, X38)))  89  []
add(failed(ac_ask(X41, X42), X43, X44) -f-> conclusion(call(ac_report_fail(X41, [ask, X42]), , X41)))  88  []
add(eval_bound(idling_for_steps(100), ) & eval_bound(\+(asking(X45, X46, )), [X45, X46]) & idling(X47) & expect_list([[X45, X46], X48]) -f-> conclusion(call(ac_ask(X45, X46), , X45)))  87  []
add(done(ac_think(X49, X50), X51, X49) & eval_bound(=(X50, [equil, X52]), [X50]) & eval_bound(\+(asking(X49, X50, )), [X49, X50]) & eval_bound(\+(pos_int_u(satisfied(X53, X50))), [X50]) & eval_bound(\+(pos_int_u(expect(X54, X50))), [X50]) -f-> conclusion(call(ac_ask(X49, X50), , X49)))  86  []
add(done(ac_think(X55, X56), X57, X55) & eval_bound(=(X56, [disambiguate, X59, X58]), [X56]) & eval_bound(\+(pos_int(satisfied(X55, X56))), [X55, X56]) -f-> conclusion(need(X55, [equil, X59, X58])))  85  []
add(failed(ac_think(X60, X61), X62, X60) -f-> conclusion(call(ac_report_fail(X60, [think, X61]), , X60)))  84  []
add(need(X63, X64) & eval_bound(sort(X65, X66), [X65]) & eval_bound(mult_gather_all([equil(X83, X84), isa(X81, X82), structure(X77, X78, X79, X80), value_of(X63, X75, X76), verb(X63, X74), val(X63, X72, X73), link(X63, X69, X70, X71), type(X63, X67, X68)], X65), [X63]) & eval_bound(\+(thought(X63, X64, X66)), [X63, X64, X66]) & eval_bound(\+(thinking(X63, X64, X66)), [X63, X64, X66]) & eval_bound(\+(pos_int_u(satisfied(X63, X64))), [X63, X64]) & equil(X85, X86) -f-> conclusion(call(ac_think(X63, X64), X66, X63)))  83  []
add(need(X87, X88) & isa(X89, X90) & eval_bound(sort(X91, X92), [X91]) & eval_bound(mult_gather_all([equil(X109, X110), isa(X107, X108), structure(X103, X104, X105, X106), value_of(X87, X101, X102), verb(X87, X100), val(X87, X98, X99), link(X87, X95, X96, X97), type(X87, X93, X94)], X91), [X87]) & eval_bound(\+(thought(X87, X88, X92)), [X87, X88, X92]) & eval_bound(\+(thinking(X87, X88, X92)), [X87, X88, X92]) & eval_bound(\+(pos_int_u(satisfied(X87, X88))), [X87, X88]) -f-> conclusion(call(ac_think(X87, X88), X92, X87)))  82  []
add(done(ac_think(X111, X112), X113, X111) & need(X111, X114) & eval_bound(sort(X115, X116), [X115]) & eval_bound(mult_gather_all([equil(X133, X134), isa(X131, X132), structure(X127, X128, X129, X130), value_of(X111, X125, X126), verb(X111, X124), val(X111, X122, X123), link(X111, X119, X120, X121), type(X111, X117, X118)], X115), [X111]) & eval_bound(\+(thought(X111, X114, X116)), [X111, X114, X116]) & eval_bound(\+(thinking(X111, X114, X116)), [X111, X114, X116]) & eval_bound(\+(pos_int_u(satisfied(X111, X114))), [X111, X114]) -f-> conclusion(call(ac_think(X111, X114), X116, X111)))  81  []
add(sent_to_domain(X135, X136, X137) -f-> conclusion(call(ac_report_action(X137), , X135)))  80  []
add(sent_to_domain(X138, X139, X140) & eval_bound(mult_gather_all([result(X141, X142)], X143), ) -f-> conclusion(call(ac_post_process(X138, X140), X143, X138)))  79  []
add(send_to_domain(X144, X145, X146) & eval_bound(sending_to_domain(X145, X146), [X145, X146]) -f-> conclusion(sent_to_domain(X144, X145, X146)))  78  []
add(failed(ac_action(X147, X148, X149), X150, X147) -f-> conclusion(call(ac_report_fail(X147, [action, X149]), , X147)))  77  []
add(desire(update, X151, X152) & eval_bound(mult_gather_all([equil(X159, X160), isa(X157, X158), structure(X153, X154, X155, X156)], X161), ) & equil(X162, X152) -f-> conclusion(call(ac_action(a, alfred, [update, X151, X152, X162]), X161, a)))  76  []
add(desire(update, X163, X164) & eval_bound(mult_gather_all([equil(X171, X172), isa(X169, X170), structure(X165, X166, X167, X168)], X173), ) & equil(X164, X174) -f-> conclusion(call(ac_action(a, alfred, [update, X163, X164, X174]), X173, a)))  75  []
add(intention(X175, domain, X176) & eval_bound(domain_tag(X177), ) -f-> conclusion(call(ac_action(X175, domain, [X177, X176]), , X175)))  74  []
add(intention(X178, alfred, X179) & eval_bound(mult_gather_all([equil(X186, X187), isa(X184, X185), structure(X180, X181, X182, X183)], X188), ) & eval_bound(clause(step_number(X189), true), ) & eval_bound(\==(X179, [undo]), [X179]) -f-> conclusion(call(ac_action(X178, alfred, X179, X189), X188, X178)))  73  []
add(intention(X190, alfred, [undo]) & eval_bound(pos_int_u(intention(X191, domain, X192)), [X191]) & eval_bound(pos_int_u(belief(domain, X192)), [X192]) & eval_bound(domain_tag(X193), ) & utt_list([X190, X191, X194]) -f-> conclusion(call(ac_action(X190, domain, [X193, undo, X192]), , X190)))  72  []
add(intention(X195, alfred, [undo]) & eval_bound(pos_int_u(intention(X196, alfred, X197)), [X196]) & eval_bound(pos_int_u(belief(alfred, X197)), [X197]) & utt_list([X195, X196, X198]) -f-> conclusion(call(ac_action(X195, alfred, [undo, X197]), , X195)))  71  []
add(intention(X199, X200, X201) | conclusion(not(belief(X200, X201))))  70  []
add(intention(X202, X203, X204) -f-> conclusion(belief(X203, X204)))  69  []
add(need(X205, X206) & eval_bound(\+(pos_int_u(satisfied(X205, X206))), [X205, X206]) & satisfiedallneeds(X205) -f-> conclusion(not(satisfiedallneeds(X205))))  68  []
add(satisfied(X207, X208) & eval_bound(satisfied_needs(X207), [X207]) & eval_bound(pos_int_u(done(ac_think(X207, X209), X210, X207)), [X207]) & eval_bound(\+(pos_int_u(doing(ac_think(X207, X211), X212, X207))), [X207]) -f-> conclusion(satisfiedallneeds(X207)))  67  []
add(done(ac_think(X213, X214), X215, X213) & eval_bound(satisfied_needs(X213), [X213]) & eval_bound(pos_int_u(done(ac_think(X213, X216), X217, X213)), [X213]) & eval_bound(\+(pos_int_u(doing(ac_think(X213, X218), X219, X213))), [X213]) -f-> conclusion(satisfiedallneeds(X213)))  66  []
add(error(X220, EXTRA_LINK, [X223, X222, X221]) -f-> conclusion(need(X220, [fix_xlink, X223, X222, X221])))  65  []
add(error(X224, LINK_NF, [X225]) -f-> conclusion(need(X224, [fix_mlink, X225])))  64  []
add(error(X226, Item_NF, [X228, X227]) -f-> conclusion(need(X226, [disambiguate, X227, X228])))  63  []
add(error(X229, Verb_NF_in_DD, [X230]) -f-> conclusion(need(X229, [equil, X230, dcommand])))  62  []
add(failed(ac_find_intention(X231, X232, X233), X234, X231) -f-> conclusion(call(ac_report_fail(X231, [find_intention]), , X231)))  61  []
add(complex_command(X235, X236, X237) & eval_bound(mult_gather_all([isa(X246, X247), structure(X237, X243, X244, X245), link(X235, X240, X241, X242), value_of(X235, X238, X239)], X248), [X235, X237]) & eval_bound(\+(pos_int_u(intention(X235, X249, X250))), [X235]) & eval_bound(\+(pos_int_u(doing(ac_think(X235, X251), X252, X235))), [X235]) & satisfiedallneeds(X235) -f-> conclusion(call(ac_find_intention(X235, complex, X237), X248, X235)))  60  []
add(alfred_command(X253, X254, X255) & eval_bound(mult_gather_all([isa(X265, X266), structure(X255, X262, X263, X264), link(X253, X259, X260, X261), value_of(X253, X257, X258), verb(X253, X256)], X267), [X253, X255]) & eval_bound(\+(pos_int_u(intention(X253, X268, X269))), [X253]) & eval_bound(\+(pos_int_u(doing(ac_think(X253, X270), X271, X253))), [X253]) & satisfiedallneeds(X253) -f-> conclusion(call(ac_find_intention(X253, alfred, X255), X267, X253)))  59  []
add(domain_command(X272, X273, X274) & eval_bound(mult_gather_all([isa(X284, X285), structure(X274, X281, X282, X283), link(X272, X278, X279, X280), value_of(X272, X276, X277), verb(X272, X275)], X286), [X272, X274]) & eval_bound(\+(pos_int_u(intention(X272, X287, X288))), [X272]) & eval_bound(\+(pos_int_u(doing(ac_think(X272, X289), X290, X272))), [X272]) & satisfiedallneeds(X272) -f-> conclusion(call(ac_find_intention(X272, domain, X274), X286, X272)))  58  []
add(failed(ac_find_command(X291), X292, X291) -f-> conclusion(call(ac_report_fail(X291, [find_command]), , X291)))  57  []
add(done(ac_find_command(X293), X294, X293) -f-> conclusion(satisfiedallneeds(X293)))  56  []
add(eval_bound(mult_gather_all([isa(X301, X302), value_of(X295, X299, X300), equil(X297, X298), main_verb(X295, X296)], X303), [X295]) & eval_bound(\+(pos_int_u(domain_command(X295, X304, X305))), [X295]) & eval_bound(\+(pos_int_u(doing(ac_think(X295, X306), X307, X295))), [X295]) & eval_bound(\+(pos_int_u(complex_command(X295, X308, X309))), [X295]) & eval_bound(\+(pos_int_u(alfred_command(X295, X310, X311))), [X295]) & satisfiedallneeds(X295) -f-> conclusion(call(ac_find_command(X295), X303, X295)))  55  []
add(main_verb(X312, X313) & eval_bound(mult_gather_all([isa(X319, X320), value_of(X312, X317, X318), equil(X315, X316), main_verb(X312, X314)], X321), [X312]) & eval_bound(\+(pos_int_u(domain_command(X312, X322, X323))), [X312]) & eval_bound(\+(pos_int_u(doing(ac_think(X312, X324), X325, X312))), [X312]) & eval_bound(\+(pos_int_u(complex_command(X312, X326, X327))), [X312]) & eval_bound(\+(pos_int_u(alfred_command(X312, X328, X329))), [X312]) -f-> conclusion(call(ac_find_command(X312), X321, X312)))  54  []
add(failed(ac_main_verb(X330), X331, X330) -f-> conclusion(call(ac_report_fail(X330, [main_verb]), , X330)))  53  []
add(verb(X332, X333) & eval_bound(mult_gather_all([verb(X332, X336), value_of(X332, X334, X335)], X337), [X332]) & parsed(X332) -f-> conclusion(call(ac_main_verb(X332), X337, X332)))  52  []
add(unused_cost(X338, X339, 0) -f-> conclusion(parsed(X338)))  51  []
add(done(ac_fix_linkage(X340, X341), X342, X340) & eval_bound(mult_gather_all([value_of(X340, X348, X349), link(X340, X345, X346, X347), unused_cost(X340, X343, X344)], X350), [X340]) -f-> conclusion(call(ac_find_unused_cost(X340), X350, X340)))  50  []
add(failed(ac_fix_linkage(X351, 5), X352, X351) -f-> conclusion(call(ac_report_fail(X351, [fix_linkage]), , X351)))  49  []
add(failed(ac_fix_linkage(X353, X354), X355, X353) & fix_link_length(X353, X354) & eval_bound(is(X356, +(X354, 1)), [X354]) & eval_bound(\==(X354, 5), [X354]) & eval_bound(df(fix_link_length(X353, X354)), [X353, X354]) -f-> conclusion(fix_link_length(X353, X356)))  48  []
add(fix_link_length(X357, X358) & eval_bound(mult_gather_all([value_of(X357, X369, X370), verb(X357, X368), isa(X366, X367), structure(X362, X363, X364, X365), link(X357, X359, X360, X361)], X371), [X357]) & eval_bound(\+(pos_int_u(done(ac_fix_linkage(X357, X358), X372, X357))), [X357, X358]) & eval_bound(\+(pos_int_u(doing(ac_fix_linkage(X357, X358), X373, X357))), [X357, X358]) -f-> conclusion(call(ac_fix_linkage(X357, X358), X371, X357)))  47  []
add(link(X374, X375, X376, X377) & unused_cost(X374, X378, X379) & done(ac_find_links(X374), X380, X374) & eval_bound(\==(X379, 0), [X379]) & eval_bound(\+(pos_int_u(fix_link_length(X374, X381))), [X374]) -f-> conclusion(fix_link_length(X374, 2)))  46  []
add(failed(ac_parse_phrase(X382, X383), X384, X382) -f-> conclusion(fix_link_length(X382, 2)))  45  []
add(done(ac_find_links(X385), X386, X385) & eval_bound(mult_gather_all([value_of(X385, X391, X392), isa(X389, X390), equil(X387, X388)], X393), [X385]) & eval_bound(\+(pos_int_u(link(X385, X394, X395, X396))), [X385]) & eval_bound(\+(pos_int_u(response(X397, X398, X385))), [X385]) -f-> conclusion(call(ac_parse_phrase(X385, ), X393, X385)))  44  []
add(response(X399, X400, X401) & done(ac_find_links(X401), X402, X401) & eval_bound(mult_gather_all([value_of(X401, X407, X408), isa(X405, X406), equil(X403, X404)], X409), [X401]) & eval_bound(\+(pos_int_u(link(X401, X410, X411, X412))), [X401]) -f-> conclusion(call(ac_parse_phrase(X401, X400), X409, X401)))  43  []
add(eval_bound(mult_gather_all([links(X413, X416, X417, X418, X419), value_of(X413, X414, X415)], X420), [X413]) & end_of_parse(X413) -f-> conclusion(call(ac_find_links(X413), X420, X413)))  42  []
add(expect(X421, X422) & eval_bound(compare(>, X423, X421), [X423, X421]) & eval_bound(\+(pos_int_u(response(X421, X422, X424))), [X421, X422]) & utterance(X423) -f-> conclusion(response(X421, X422, X423)))  41  []
add(update_utt_list(X425, X426) & eval_bound(df(utt_list(X426)), [X426]) -f-> conclusion(utt_list([X425, X426])))  40  []
add(eval_bound(\+(member(X427, X428)), [X427, X428]) & utterance(X427) & utt_list(X428) -f-> conclusion(update_utt_list(X427, X428)))  39  []
add(done(ac_report_observation(X429, X430, X431), X432, X429) & desire(X429, [inform, X430, X433]) -f-> conclusion(satisfied(X429, [inform, X430, X433])))  38  []
add(observation(X434, X435, X436) & eval_bound(mult_gather_all([observation(X434, X441, X442), isa(X439, X440), equil(X437, X438)], X443), [X434]) & eval_bound(\+(pos_int_u(satisfied(X444, [inform, X434, X445]))), [X444, X434, X445]) & desire(X444, [inform, X434, X445]) -f-> conclusion(call(ac_report_observation(X444, X434, X445), X443, X444)))  37  []
add(observation(X446, X447, X448) & eval_bound(\+(pos_int_u(satisfied(X449, [observation, X446]))), [X449, X446]) & domain_expect(X449, [observation, X446]) -f-> conclusion(satisfied(X449, [observation, X446])))  36  []
add(observation(X450, X451) & eval_bound(pos_int_u(now(X452)), ) & eval_bound(df(observation(X450, X451)), [X450, X451]) -f-> conclusion(observation(X450, X451, X452)))  35  []
add(eval_bound(idling_for_steps(350), ) & idling(X453) -f-> conclusion(call(ac_prompt(X453), , X453)))  34  []
add(utt_list())  33  []
add(expect_list())  32  []
add(isa(all, all))  31  []
add(isa(display_type, cuisines))  30  []
add(isa(display_type, restaurants))  29  []
add(isa(item_name, pizza))  28  []
add(isa(cuisine, chinese))  27  []
add(isa(food_type, chicken))  26  []
add(structure(mute, , [[v0, verb]], [v0]))  25  []
add(isa(dcommand, mute))  24  []
add(structure(list, [[v0, v1, O]], [[v0, verb]], [v0]))  23  []
add(structure(list, , [[v0, verb]], [v0]))  22  []
add(isa(dcommand, list))  21  []
add(structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]))  20  []
add(isa(dcommand, set))  19  []
add(structure(stop, , [[v0, verb]], [v0]))  18  []
add(isa(dcommand, stop))  17  []
add(structure(fullscreen, , [[v0, verb]], [v0]))  16  []
add(isa(dcommand, fullscreen))  15  []
add(structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]))  14  []
add(structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]))  13  []
add(structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]))  12  []
add(structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]))  11  []
add(isa(dcommand, display))  10  []
add(structure(no, , , [undo]))  9  []
add(isa(conjunct, and))  8  []
add(isa(acommand, no))  7  []
add(isa(lw, LEFT-WALL))  6  []
add(isa(qnmark, ?))  5  []
add(isa(qnword, what))  4  []
add(structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]))  3  []
add(structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]))  2  []
add(structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]))  1  []
add(isa(acommand, is))  0  []
End of Step----------------------------------

step(2)
add(idling(2))  99  []
add(now(2))  98  []
delete(now(1))  97  []
End of Step----------------------------------

step(3)
add(idling(3))  101  []
add(now(3))  100  []
delete(now(2))  98  []
End of Step----------------------------------

step(4)
add(idling(4))  103  []
add(now(4))  102  []
delete(now(3))  100  []
End of Step----------------------------------

step(5)
add(idling(5))  105  []
add(now(5))  104  []
delete(now(4))  102  []
End of Step----------------------------------

step(6)
add(idling(6))  107  []
add(now(6))  106  []
delete(now(5))  104  []
End of Step----------------------------------

step(7)
add(idling(7))  109  []
add(now(7))  108  []
delete(now(6))  106  []
End of Step----------------------------------

step(8)
add(idling(8))  111  []
add(now(8))  110  []
delete(now(7))  108  []
End of Step----------------------------------

step(9)
add(idling(9))  113  []
add(now(9))  112  []
delete(now(8))  110  []
End of Step----------------------------------

step(10)
add(idling(10))  115  []
add(now(10))  114  []
delete(now(9))  112  []
End of Step----------------------------------

step(11)
add(idling(11))  117  []
add(now(11))  116  []
delete(now(10))  114  []
End of Step----------------------------------

step(12)
add(idling(12))  119  []
add(now(12))  118  []
delete(now(11))  116  []
End of Step----------------------------------

step(13)
add(idling(13))  121  []
add(now(13))  120  []
delete(now(12))  118  []
End of Step----------------------------------

step(14)
add(idling(14))  123  []
add(now(14))  122  []
delete(now(13))  120  []
End of Step----------------------------------

step(15)
add(idling(15))  125  []
add(now(15))  124  []
delete(now(14))  122  []
End of Step----------------------------------

step(16)
add(idling(16))  127  []
add(now(16))  126  []
delete(now(15))  124  []
End of Step----------------------------------

step(17)
add(idling(17))  129  []
add(now(17))  128  []
delete(now(16))  126  []
End of Step----------------------------------

step(18)
add(idling(18))  131  []
add(now(18))  130  []
delete(now(17))  128  []
End of Step----------------------------------

step(19)
add(idling(19))  133  []
add(now(19))  132  []
delete(now(18))  130  []
End of Step----------------------------------

step(20)
add(idling(20))  135  []
add(now(20))  134  []
delete(now(19))  132  []
End of Step----------------------------------

step(21)
add(idling(21))  137  []
add(now(21))  136  []
delete(now(20))  134  []
End of Step----------------------------------

step(22)
add(idling(22))  139  []
add(now(22))  138  []
delete(now(21))  136  []
End of Step----------------------------------

step(23)
add(idling(23))  141  []
add(now(23))  140  []
delete(now(22))  138  []
End of Step----------------------------------

step(24)
add(idling(24))  143  []
add(now(24))  142  []
delete(now(23))  140  []
End of Step----------------------------------

step(25)
add(idling(25))  145  []
add(now(25))  144  []
delete(now(24))  142  []
End of Step----------------------------------

step(26)
add(idling(26))  147  []
add(now(26))  146  []
delete(now(25))  144  []
End of Step----------------------------------

step(27)
add(idling(27))  149  []
add(now(27))  148  []
delete(now(26))  146  []
End of Step----------------------------------

step(28)
add(idling(28))  151  []
add(now(28))  150  []
delete(now(27))  148  []
End of Step----------------------------------

step(29)
add(idling(29))  153  []
add(now(29))  152  []
delete(now(28))  150  []
End of Step----------------------------------

step(30)
add(idling(30))  155  []
add(now(30))  154  []
delete(now(29))  152  []
End of Step----------------------------------

step(31)
add(idling(31))  157  []
add(now(31))  156  []
delete(now(30))  154  []
End of Step----------------------------------

step(32)
add(idling(32))  159  []
add(now(32))  158  []
delete(now(31))  156  []
End of Step----------------------------------

step(33)
add(idling(33))  161  []
add(now(33))  160  []
delete(now(32))  158  []
End of Step----------------------------------

step(34)
add(idling(34))  163  []
add(now(34))  162  []
delete(now(33))  160  []
End of Step----------------------------------

step(35)
add(idling(35))  165  []
add(now(35))  164  []
delete(now(34))  162  []
End of Step----------------------------------

step(36)
add(idling(36))  167  []
add(now(36))  166  []
delete(now(35))  164  []
End of Step----------------------------------

step(37)
add(idling(37))  169  []
add(now(37))  168  []
delete(now(36))  166  []
End of Step----------------------------------

step(38)
add(idling(38))  171  []
add(now(38))  170  []
delete(now(37))  168  []
End of Step----------------------------------

step(39)
add(idling(39))  173  []
add(now(39))  172  []
delete(now(38))  170  []
End of Step----------------------------------

step(40)
add(idling(40))  175  []
add(now(40))  174  []
delete(now(39))  172  []
End of Step----------------------------------

step(41)
add(idling(41))  177  []
add(now(41))  176  []
delete(now(40))  174  []
End of Step----------------------------------

step(42)
add(idling(42))  179  []
add(now(42))  178  []
delete(now(41))  176  []
End of Step----------------------------------

step(43)
add(idling(43))  181  []
add(now(43))  180  []
delete(now(42))  178  []
End of Step----------------------------------

step(44)
add(idling(44))  183  []
add(now(44))  182  []
delete(now(43))  180  []
End of Step----------------------------------

step(45)
add(idling(45))  185  []
add(now(45))  184  []
delete(now(44))  182  []
End of Step----------------------------------

step(46)
add(idling(46))  187  []
add(now(46))  186  []
delete(now(45))  184  []
End of Step----------------------------------

step(47)
add(idling(47))  189  []
add(now(47))  188  []
delete(now(46))  186  []
End of Step----------------------------------

step(48)
add(idling(48))  191  []
add(now(48))  190  []
delete(now(47))  188  []
End of Step----------------------------------

step(49)
add(idling(49))  193  []
add(now(49))  192  []
delete(now(48))  190  []
End of Step----------------------------------

step(50)
add(idling(50))  195  []
add(now(50))  194  []
delete(now(49))  192  []
End of Step----------------------------------

step(51)
add(idling(51))  197  []
add(now(51))  196  []
delete(now(50))  194  []
End of Step----------------------------------

step(52)
add(idling(52))  199  []
add(now(52))  198  []
delete(now(51))  196  []
End of Step----------------------------------

step(53)
add(idling(53))  201  []
add(now(53))  200  []
delete(now(52))  198  []
End of Step----------------------------------

step(54)
add(idling(54))  203  []
add(now(54))  202  []
delete(now(53))  200  []
End of Step----------------------------------

step(55)
add(idling(55))  205  []
add(now(55))  204  []
delete(now(54))  202  []
End of Step----------------------------------

step(56)
add(idling(56))  207  []
add(now(56))  206  []
delete(now(55))  204  []
End of Step----------------------------------

step(57)
add(idling(57))  209  []
add(now(57))  208  []
delete(now(56))  206  []
End of Step----------------------------------

step(58)
add(idling(58))  211  []
add(now(58))  210  []
delete(now(57))  208  []
End of Step----------------------------------

step(59)
add(idling(59))  213  []
add(now(59))  212  []
delete(now(58))  210  []
End of Step----------------------------------

step(60)
add(idling(60))  215  []
add(now(60))  214  []
delete(now(59))  212  []
End of Step----------------------------------

step(61)
add(idling(61))  217  []
add(now(61))  216  []
delete(now(60))  214  []
End of Step----------------------------------

step(62)
add(idling(62))  219  []
add(now(62))  218  []
delete(now(61))  216  []
End of Step----------------------------------

step(63)
add(idling(63))  221  []
add(now(63))  220  []
delete(now(62))  218  []
End of Step----------------------------------

step(64)
add(idling(64))  223  []
add(now(64))  222  []
delete(now(63))  220  []
End of Step----------------------------------

step(65)
add(idling(65))  225  []
add(now(65))  224  []
delete(now(64))  222  []
End of Step----------------------------------

step(66)
add(idling(66))  227  []
add(now(66))  226  []
delete(now(65))  224  []
End of Step----------------------------------

step(67)
add(idling(67))  229  []
add(now(67))  228  []
delete(now(66))  226  []
End of Step----------------------------------

step(68)
add(idling(68))  231  []
add(now(68))  230  []
delete(now(67))  228  []
End of Step----------------------------------

step(69)
add(idling(69))  233  []
add(now(69))  232  []
delete(now(68))  230  []
End of Step----------------------------------

step(70)
add(idling(70))  235  []
add(now(70))  234  []
delete(now(69))  232  []
End of Step----------------------------------

step(71)
add(idling(71))  237  []
add(now(71))  236  []
delete(now(70))  234  []
End of Step----------------------------------

step(72)
add(idling(72))  239  []
add(now(72))  238  []
delete(now(71))  236  []
End of Step----------------------------------

step(73)
add(idling(73))  241  []
add(now(73))  240  []
delete(now(72))  238  []
End of Step----------------------------------

step(74)
add(idling(74))  243  []
add(now(74))  242  []
delete(now(73))  240  []
End of Step----------------------------------

step(75)
add(idling(75))  245  []
add(now(75))  244  []
delete(now(74))  242  []
End of Step----------------------------------

step(76)
add(idling(76))  247  []
add(now(76))  246  []
delete(now(75))  244  []
End of Step----------------------------------

step(77)
add(idling(77))  249  []
add(now(77))  248  []
delete(now(76))  246  []
End of Step----------------------------------

step(78)
add(idling(78))  251  []
add(now(78))  250  []
delete(now(77))  248  []
End of Step----------------------------------

step(79)
add(idling(79))  253  []
add(now(79))  252  []
delete(now(78))  250  []
End of Step----------------------------------

step(80)
add(idling(80))  255  []
add(now(80))  254  []
delete(now(79))  252  []
End of Step----------------------------------

step(81)
add(idling(81))  257  []
add(now(81))  256  []
delete(now(80))  254  []
End of Step----------------------------------

step(82)
add(idling(82))  259  []
add(now(82))  258  []
delete(now(81))  256  []
End of Step----------------------------------

step(83)
add(utterance(s1))  261  []
add(now(83))  260  []
delete(now(82))  258  []
End of Step----------------------------------

step(84)
add(now(84))  263  []
add(update_utt_list(s1, ))  262  [[39,261,33]]
delete(utt_list())  33  []
delete(now(83))  260  []
End of Step----------------------------------

step(85)
add(now(85))  265  []
add(utt_list([s1]))  264  [[40,262]]
delete(now(84))  263  []
End of Step----------------------------------

step(86)
add(unused_cost(s1, l0, 0))  267  []
add(now(86))  266  []
delete(now(85))  265  []
End of Step----------------------------------

step(87)
add(now(87))  269  []
add(parsed(s1))  268  [[51,267]]
delete(now(86))  266  []
End of Step----------------------------------

step(88)
add(end_of_parse(s1))  281  []
add(verb(s1, val1))  280  []
add(links(s1, l0, val2, val3, Dmc))  279  []
add(links(s1, l0, val1, val3, Op))  278  []
add(links(s1, l0, val0, val1, Wi))  277  []
add(links(s1, l0, val0, val4, RW))  276  []
add(value_of(s1, val4, RIGHT-WALL))  275  []
add(value_of(s1, val3, restaurants))  274  []
add(value_of(s1, val2, all))  273  []
add(value_of(s1, val1, display))  272  []
add(value_of(s1, val0, LEFT-WALL))  271  []
add(now(88))  270  []
delete(now(87))  269  []
End of Step----------------------------------

step(89)
add(now(89))  284  []
add(call(ac_find_links(s1), [links(s1, l0, val0, val4, RW), links(s1, l0, val0, val1, Wi), links(s1, l0, val1, val3, Op), links(s1, l0, val2, val3, Dmc), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, display), value_of(s1, val2, all), value_of(s1, val3, restaurants), value_of(s1, val4, RIGHT-WALL)], s1))  283  [[42,281]]
add(call(ac_main_verb(s1), [verb(s1, val1), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, display), value_of(s1, val2, all), value_of(s1, val3, restaurants), value_of(s1, val4, RIGHT-WALL)], s1))  282  [[52,280,268]]
delete(now(88))  270  []
End of Step----------------------------------

step(90)
add(now(90))  287  []
add(doing(ac_main_verb(s1), [verb(s1, val1), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, display), value_of(s1, val2, all), value_of(s1, val3, restaurants), value_of(s1, val4, RIGHT-WALL)], s1))  286  []
add(doing(ac_find_links(s1), [links(s1, l0, val0, val4, RW), links(s1, l0, val0, val1, Wi), links(s1, l0, val1, val3, Op), links(s1, l0, val2, val3, Dmc), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, display), value_of(s1, val2, all), value_of(s1, val3, restaurants), value_of(s1, val4, RIGHT-WALL)], s1))  285  []
delete(now(89))  284  []
End of Step----------------------------------

step(91)
add(link(s1, val0, val1, Wi))  291  []
add(done(ac_main_verb(s1), [verb(s1, val1), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, display), value_of(s1, val2, all), value_of(s1, val3, restaurants), value_of(s1, val4, RIGHT-WALL)], s1))  290  []
add(main_verb(s1, display))  289  []
add(now(91))  288  []
delete(doing(ac_main_verb(s1), [verb(s1, val1), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, display), value_of(s1, val2, all), value_of(s1, val3, restaurants), value_of(s1, val4, RIGHT-WALL)], s1))  286  []
delete(now(90))  287  []
End of Step----------------------------------

step(92)
add(now(92))  293  []
add(call(ac_find_command(s1), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, display), value_of(s1, val2, all), value_of(s1, val3, restaurants), value_of(s1, val4, RIGHT-WALL), main_verb(s1, display)], s1))  292  [[54,289]]
delete(now(91))  288  []
End of Step----------------------------------

step(93)
add(now(93))  295  []
add(doing(ac_find_command(s1), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, display), value_of(s1, val2, all), value_of(s1, val3, restaurants), value_of(s1, val4, RIGHT-WALL), main_verb(s1, display)], s1))  294  []
delete(now(92))  293  []
End of Step----------------------------------

step(94)
add(done(ac_find_links(s1), [links(s1, l0, val0, val4, RW), links(s1, l0, val0, val1, Wi), links(s1, l0, val1, val3, Op), links(s1, l0, val2, val3, Dmc), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, display), value_of(s1, val2, all), value_of(s1, val3, restaurants), value_of(s1, val4, RIGHT-WALL)], s1))  299  []
add(link(s1, val2, val3, Dmc))  298  []
add(link(s1, val1, val3, Op))  297  []
add(now(94))  296  []
delete(doing(ac_find_links(s1), [links(s1, l0, val0, val4, RW), links(s1, l0, val0, val1, Wi), links(s1, l0, val1, val3, Op), links(s1, l0, val2, val3, Dmc), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, display), value_of(s1, val2, all), value_of(s1, val3, restaurants), value_of(s1, val4, RIGHT-WALL)], s1))  285  []
delete(now(93))  295  []
End of Step----------------------------------

step(95)
add(done(ac_find_command(s1), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, display), value_of(s1, val2, all), value_of(s1, val3, restaurants), value_of(s1, val4, RIGHT-WALL), main_verb(s1, display)], s1))  302  []
add(domain_command(s1, display, display))  301  []
add(now(95))  300  []
delete(doing(ac_find_command(s1), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, display), value_of(s1, val2, all), value_of(s1, val3, restaurants), value_of(s1, val4, RIGHT-WALL), main_verb(s1, display)], s1))  294  []
delete(now(94))  296  []
End of Step----------------------------------

step(96)
add(now(96))  304  []
add(satisfiedallneeds(s1))  303  [[56,302]]
delete(now(95))  300  []
End of Step----------------------------------

step(97)
add(now(97))  306  []
add(call(ac_find_intention(s1, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s1, val0, val1, Wi), link(s1, val1, val3, Op), link(s1, val2, val3, Dmc), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, display), value_of(s1, val2, all), value_of(s1, val3, restaurants), value_of(s1, val4, RIGHT-WALL), verb(s1, val1)], s1))  305  [[58,303,301]]
delete(now(96))  304  []
End of Step----------------------------------

step(98)
add(now(98))  308  []
add(doing(ac_find_intention(s1, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s1, val0, val1, Wi), link(s1, val1, val3, Op), link(s1, val2, val3, Dmc), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, display), value_of(s1, val2, all), value_of(s1, val3, restaurants), value_of(s1, val4, RIGHT-WALL), verb(s1, val1)], s1))  307  []
delete(now(97))  306  []
End of Step----------------------------------

step(99)
add(val(s1, v0, val1))  310  []
add(now(99))  309  []
delete(now(98))  308  []
End of Step----------------------------------

step(100)
add(done(ac_find_intention(s1, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s1, val0, val1, Wi), link(s1, val1, val3, Op), link(s1, val2, val3, Dmc), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, display), value_of(s1, val2, all), value_of(s1, val3, restaurants), value_of(s1, val4, RIGHT-WALL), verb(s1, val1)], s1))  314  []
add(intention(s1, domain, [display, restaurants, all]))  313  []
add(type(s1, v0, verb))  312  []
add(now(100))  311  []
delete(doing(ac_find_intention(s1, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s1, val0, val1, Wi), link(s1, val1, val3, Op), link(s1, val2, val3, Dmc), value_of(s1, val0, LEFT-WALL), value_of(s1, val1, display), value_of(s1, val2, all), value_of(s1, val3, restaurants), value_of(s1, val4, RIGHT-WALL), verb(s1, val1)], s1))  307  []
delete(now(99))  309  []
End of Step----------------------------------

step(101)
add(now(101))  317  []
add(call(ac_action(s1, domain, [5, [display, restaurants, all]]), , s1))  316  [[74,313]]
add(belief(domain, [display, restaurants, all]))  315  [[69,313]]
delete(now(100))  311  []
End of Step----------------------------------

step(102)
add(now(102))  319  []
add(doing(ac_action(s1, domain, [5, [display, restaurants, all]]), , s1))  318  []
delete(now(101))  317  []
End of Step----------------------------------

step(103)
add(send_to_domain(s1, 5, [[display, restaurants, all]]))  321  []
add(now(103))  320  []
delete(now(102))  319  []
End of Step----------------------------------

step(104)
add(done(ac_action(s1, domain, [5, [display, restaurants, all]]), , s1))  324  []
add(now(104))  323  []
add(sent_to_domain(s1, 5, [[display, restaurants, all]]))  322  [[78,321]]
delete(doing(ac_action(s1, domain, [5, [display, restaurants, all]]), , s1))  318  []
delete(now(103))  320  []
End of Step----------------------------------

step(105)
add(now(105))  327  []
add(call(ac_report_action([[display, restaurants, all]]), , s1))  326  [[80,322]]
add(call(ac_post_process(s1, [[display, restaurants, all]]), , s1))  325  [[79,322]]
delete(now(104))  323  []
End of Step----------------------------------

step(106)
add(now(106))  330  []
add(doing(ac_post_process(s1, [[display, restaurants, all]]), , s1))  329  []
add(doing(ac_report_action([[display, restaurants, all]]), , s1))  328  []
delete(now(105))  327  []
End of Step----------------------------------

step(107)
add(done(ac_report_action([[display, restaurants, all]]), , s1))  333  []
add(done(ac_post_process(s1, [[display, restaurants, all]]), , s1))  332  []
add(now(107))  331  []
delete(doing(ac_report_action([[display, restaurants, all]]), , s1))  328  []
delete(doing(ac_post_process(s1, [[display, restaurants, all]]), , s1))  329  []
delete(now(106))  330  []
End of Step----------------------------------

step(108)
add(idling(108))  335  []
add(now(108))  334  []
delete(now(107))  331  []
End of Step----------------------------------

step(109)
add(idling(109))  337  []
add(now(109))  336  []
delete(now(108))  334  []
End of Step----------------------------------

step(110)
add(idling(110))  339  []
add(now(110))  338  []
delete(now(109))  336  []
End of Step----------------------------------

step(111)
add(idling(111))  341  []
add(now(111))  340  []
delete(now(110))  338  []
End of Step----------------------------------

step(112)
add(idling(112))  343  []
add(now(112))  342  []
delete(now(111))  340  []
End of Step----------------------------------

step(113)
add(idling(113))  345  []
add(now(113))  344  []
delete(now(112))  342  []
End of Step----------------------------------

step(114)
add(idling(114))  347  []
add(now(114))  346  []
delete(now(113))  344  []
End of Step----------------------------------

step(115)
add(idling(115))  349  []
add(now(115))  348  []
delete(now(114))  346  []
End of Step----------------------------------

step(116)
add(idling(116))  351  []
add(now(116))  350  []
delete(now(115))  348  []
End of Step----------------------------------

step(117)
add(idling(117))  353  []
add(now(117))  352  []
delete(now(116))  350  []
End of Step----------------------------------

step(118)
add(idling(118))  355  []
add(now(118))  354  []
delete(now(117))  352  []
End of Step----------------------------------

step(119)
add(idling(119))  357  []
add(now(119))  356  []
delete(now(118))  354  []
End of Step----------------------------------

step(120)
add(idling(120))  359  []
add(now(120))  358  []
delete(now(119))  356  []
End of Step----------------------------------

step(121)
add(idling(121))  361  []
add(now(121))  360  []
delete(now(120))  358  []
End of Step----------------------------------

step(122)
add(idling(122))  363  []
add(now(122))  362  []
delete(now(121))  360  []
End of Step----------------------------------

step(123)
add(idling(123))  365  []
add(now(123))  364  []
delete(now(122))  362  []
End of Step----------------------------------

step(124)
add(idling(124))  367  []
add(now(124))  366  []
delete(now(123))  364  []
End of Step----------------------------------

step(125)
add(idling(125))  369  []
add(now(125))  368  []
delete(now(124))  366  []
End of Step----------------------------------

step(126)
add(idling(126))  371  []
add(now(126))  370  []
delete(now(125))  368  []
End of Step----------------------------------

step(127)
add(idling(127))  373  []
add(now(127))  372  []
delete(now(126))  370  []
End of Step----------------------------------

step(128)
add(idling(128))  375  []
add(now(128))  374  []
delete(now(127))  372  []
End of Step----------------------------------

step(129)
add(idling(129))  377  []
add(now(129))  376  []
delete(now(128))  374  []
End of Step----------------------------------

step(130)
add(idling(130))  379  []
add(now(130))  378  []
delete(now(129))  376  []
End of Step----------------------------------

step(131)
add(idling(131))  381  []
add(now(131))  380  []
delete(now(130))  378  []
End of Step----------------------------------

step(132)
add(idling(132))  383  []
add(now(132))  382  []
delete(now(131))  380  []
End of Step----------------------------------

step(133)
add(idling(133))  385  []
add(now(133))  384  []
delete(now(132))  382  []
End of Step----------------------------------

step(134)
add(idling(134))  387  []
add(now(134))  386  []
delete(now(133))  384  []
End of Step----------------------------------

step(135)
add(idling(135))  389  []
add(now(135))  388  []
delete(now(134))  386  []
End of Step----------------------------------

step(136)
add(idling(136))  391  []
add(now(136))  390  []
delete(now(135))  388  []
End of Step----------------------------------

step(137)
add(idling(137))  393  []
add(now(137))  392  []
delete(now(136))  390  []
End of Step----------------------------------

step(138)
add(idling(138))  395  []
add(now(138))  394  []
delete(now(137))  392  []
End of Step----------------------------------

step(139)
add(idling(139))  397  []
add(now(139))  396  []
delete(now(138))  394  []
End of Step----------------------------------

step(140)
add(idling(140))  399  []
add(now(140))  398  []
delete(now(139))  396  []
End of Step----------------------------------

step(141)
add(idling(141))  401  []
add(now(141))  400  []
delete(now(140))  398  []
End of Step----------------------------------

step(142)
add(idling(142))  403  []
add(now(142))  402  []
delete(now(141))  400  []
End of Step----------------------------------

step(143)
add(idling(143))  405  []
add(now(143))  404  []
delete(now(142))  402  []
End of Step----------------------------------

step(144)
add(idling(144))  407  []
add(now(144))  406  []
delete(now(143))  404  []
End of Step----------------------------------

step(145)
add(idling(145))  409  []
add(now(145))  408  []
delete(now(144))  406  []
End of Step----------------------------------

step(146)
add(idling(146))  411  []
add(now(146))  410  []
delete(now(145))  408  []
End of Step----------------------------------

step(147)
add(idling(147))  413  []
add(now(147))  412  []
delete(now(146))  410  []
End of Step----------------------------------

step(148)
add(idling(148))  415  []
add(now(148))  414  []
delete(now(147))  412  []
End of Step----------------------------------

step(149)
add(idling(149))  417  []
add(now(149))  416  []
delete(now(148))  414  []
End of Step----------------------------------

step(150)
add(idling(150))  419  []
add(now(150))  418  []
delete(now(149))  416  []
End of Step----------------------------------

step(151)
add(idling(151))  421  []
add(now(151))  420  []
delete(now(150))  418  []
End of Step----------------------------------

step(152)
add(idling(152))  423  []
add(now(152))  422  []
delete(now(151))  420  []
End of Step----------------------------------

step(153)
add(idling(153))  425  []
add(now(153))  424  []
delete(now(152))  422  []
End of Step----------------------------------

step(154)
add(idling(154))  427  []
add(now(154))  426  []
delete(now(153))  424  []
End of Step----------------------------------

step(155)
add(idling(155))  429  []
add(now(155))  428  []
delete(now(154))  426  []
End of Step----------------------------------

step(156)
add(idling(156))  431  []
add(now(156))  430  []
delete(now(155))  428  []
End of Step----------------------------------

step(157)
add(idling(157))  433  []
add(now(157))  432  []
delete(now(156))  430  []
End of Step----------------------------------

step(158)
add(idling(158))  435  []
add(now(158))  434  []
delete(now(157))  432  []
End of Step----------------------------------

step(159)
add(idling(159))  437  []
add(now(159))  436  []
delete(now(158))  434  []
End of Step----------------------------------

step(160)
add(idling(160))  439  []
add(now(160))  438  []
delete(now(159))  436  []
End of Step----------------------------------

step(161)
add(idling(161))  441  []
add(now(161))  440  []
delete(now(160))  438  []
End of Step----------------------------------

step(162)
add(idling(162))  443  []
add(now(162))  442  []
delete(now(161))  440  []
End of Step----------------------------------

step(163)
add(idling(163))  445  []
add(now(163))  444  []
delete(now(162))  442  []
End of Step----------------------------------

step(164)
add(idling(164))  447  []
add(now(164))  446  []
delete(now(163))  444  []
End of Step----------------------------------

step(165)
add(idling(165))  449  []
add(now(165))  448  []
delete(now(164))  446  []
End of Step----------------------------------

step(166)
add(idling(166))  451  []
add(now(166))  450  []
delete(now(165))  448  []
End of Step----------------------------------

step(167)
add(idling(167))  453  []
add(now(167))  452  []
delete(now(166))  450  []
End of Step----------------------------------

step(168)
add(idling(168))  455  []
add(now(168))  454  []
delete(now(167))  452  []
End of Step----------------------------------

step(169)
add(idling(169))  457  []
add(now(169))  456  []
delete(now(168))  454  []
End of Step----------------------------------

step(170)
add(idling(170))  459  []
add(now(170))  458  []
delete(now(169))  456  []
End of Step----------------------------------

step(171)
add(idling(171))  461  []
add(now(171))  460  []
delete(now(170))  458  []
End of Step----------------------------------

step(172)
add(idling(172))  463  []
add(now(172))  462  []
delete(now(171))  460  []
End of Step----------------------------------

step(173)
add(idling(173))  465  []
add(now(173))  464  []
delete(now(172))  462  []
End of Step----------------------------------

step(174)
add(idling(174))  467  []
add(now(174))  466  []
delete(now(173))  464  []
End of Step----------------------------------

step(175)
add(idling(175))  469  []
add(now(175))  468  []
delete(now(174))  466  []
End of Step----------------------------------

step(176)
add(idling(176))  471  []
add(now(176))  470  []
delete(now(175))  468  []
End of Step----------------------------------

step(177)
add(idling(177))  473  []
add(now(177))  472  []
delete(now(176))  470  []
End of Step----------------------------------

step(178)
add(idling(178))  475  []
add(now(178))  474  []
delete(now(177))  472  []
End of Step----------------------------------

step(179)
add(idling(179))  477  []
add(now(179))  476  []
delete(now(178))  474  []
End of Step----------------------------------

step(180)
add(idling(180))  479  []
add(now(180))  478  []
delete(now(179))  476  []
End of Step----------------------------------

step(181)
add(idling(181))  481  []
add(now(181))  480  []
delete(now(180))  478  []
End of Step----------------------------------

step(182)
add(idling(182))  483  []
add(now(182))  482  []
delete(now(181))  480  []
End of Step----------------------------------

step(183)
add(idling(183))  485  []
add(now(183))  484  []
delete(now(182))  482  []
End of Step----------------------------------

step(184)
add(idling(184))  487  []
add(now(184))  486  []
delete(now(183))  484  []
End of Step----------------------------------

step(185)
add(idling(185))  489  []
add(now(185))  488  []
delete(now(184))  486  []
End of Step----------------------------------

step(186)
add(idling(186))  491  []
add(now(186))  490  []
delete(now(185))  488  []
End of Step----------------------------------

step(187)
add(idling(187))  493  []
add(now(187))  492  []
delete(now(186))  490  []
End of Step----------------------------------

step(188)
add(idling(188))  495  []
add(now(188))  494  []
delete(now(187))  492  []
End of Step----------------------------------

step(189)
add(idling(189))  497  []
add(now(189))  496  []
delete(now(188))  494  []
End of Step----------------------------------

step(190)
add(idling(190))  499  []
add(now(190))  498  []
delete(now(189))  496  []
End of Step----------------------------------

step(191)
add(idling(191))  501  []
add(now(191))  500  []
delete(now(190))  498  []
End of Step----------------------------------

step(192)
add(idling(192))  503  []
add(now(192))  502  []
delete(now(191))  500  []
End of Step----------------------------------

step(193)
add(idling(193))  505  []
add(now(193))  504  []
delete(now(192))  502  []
End of Step----------------------------------

step(194)
add(idling(194))  507  []
add(now(194))  506  []
delete(now(193))  504  []
End of Step----------------------------------

step(195)
add(idling(195))  509  []
add(now(195))  508  []
delete(now(194))  506  []
End of Step----------------------------------

step(196)
add(idling(196))  511  []
add(now(196))  510  []
delete(now(195))  508  []
End of Step----------------------------------

step(197)
add(idling(197))  513  []
add(now(197))  512  []
delete(now(196))  510  []
End of Step----------------------------------

step(198)
add(idling(198))  515  []
add(now(198))  514  []
delete(now(197))  512  []
End of Step----------------------------------

step(199)
add(idling(199))  517  []
add(now(199))  516  []
delete(now(198))  514  []
End of Step----------------------------------

step(200)
add(idling(200))  519  []
add(now(200))  518  []
delete(now(199))  516  []
End of Step----------------------------------

step(201)
add(idling(201))  521  []
add(now(201))  520  []
delete(now(200))  518  []
End of Step----------------------------------

step(202)
add(idling(202))  523  []
add(now(202))  522  []
delete(now(201))  520  []
End of Step----------------------------------

step(203)
add(idling(203))  525  []
add(now(203))  524  []
delete(now(202))  522  []
End of Step----------------------------------

step(204)
add(idling(204))  527  []
add(now(204))  526  []
delete(now(203))  524  []
End of Step----------------------------------

step(205)
add(idling(205))  529  []
add(now(205))  528  []
delete(now(204))  526  []
End of Step----------------------------------

step(206)
add(idling(206))  531  []
add(now(206))  530  []
delete(now(205))  528  []
End of Step----------------------------------

step(207)
add(idling(207))  533  []
add(now(207))  532  []
delete(now(206))  530  []
End of Step----------------------------------

step(208)
add(idling(208))  535  []
add(now(208))  534  []
delete(now(207))  532  []
End of Step----------------------------------

step(209)
add(idling(209))  537  []
add(now(209))  536  []
delete(now(208))  534  []
End of Step----------------------------------

step(210)
add(idling(210))  539  []
add(now(210))  538  []
delete(now(209))  536  []
End of Step----------------------------------

step(211)
add(idling(211))  541  []
add(now(211))  540  []
delete(now(210))  538  []
End of Step----------------------------------

step(212)
add(idling(212))  543  []
add(now(212))  542  []
delete(now(211))  540  []
End of Step----------------------------------

step(213)
add(idling(213))  545  []
add(now(213))  544  []
delete(now(212))  542  []
End of Step----------------------------------

step(214)
add(idling(214))  547  []
add(now(214))  546  []
delete(now(213))  544  []
End of Step----------------------------------

step(215)
add(idling(215))  549  []
add(now(215))  548  []
delete(now(214))  546  []
End of Step----------------------------------

step(216)
add(idling(216))  551  []
add(now(216))  550  []
delete(now(215))  548  []
End of Step----------------------------------

step(217)
add(idling(217))  553  []
add(now(217))  552  []
delete(now(216))  550  []
End of Step----------------------------------

step(218)
add(idling(218))  555  []
add(now(218))  554  []
delete(now(217))  552  []
End of Step----------------------------------

step(219)
add(idling(219))  557  []
add(now(219))  556  []
delete(now(218))  554  []
End of Step----------------------------------

step(220)
add(idling(220))  559  []
add(now(220))  558  []
delete(now(219))  556  []
End of Step----------------------------------

step(221)
add(idling(221))  561  []
add(now(221))  560  []
delete(now(220))  558  []
End of Step----------------------------------

step(222)
add(idling(222))  563  []
add(now(222))  562  []
delete(now(221))  560  []
End of Step----------------------------------

step(223)
add(idling(223))  565  []
add(now(223))  564  []
delete(now(222))  562  []
End of Step----------------------------------

step(224)
add(idling(224))  567  []
add(now(224))  566  []
delete(now(223))  564  []
End of Step----------------------------------

step(225)
add(idling(225))  569  []
add(now(225))  568  []
delete(now(224))  566  []
End of Step----------------------------------

step(226)
add(idling(226))  571  []
add(now(226))  570  []
delete(now(225))  568  []
End of Step----------------------------------

step(227)
add(idling(227))  573  []
add(now(227))  572  []
delete(now(226))  570  []
End of Step----------------------------------

step(228)
add(idling(228))  575  []
add(now(228))  574  []
delete(now(227))  572  []
End of Step----------------------------------

step(229)
add(idling(229))  577  []
add(now(229))  576  []
delete(now(228))  574  []
End of Step----------------------------------

step(230)
add(idling(230))  579  []
add(now(230))  578  []
delete(now(229))  576  []
End of Step----------------------------------

step(231)
add(idling(231))  581  []
add(now(231))  580  []
delete(now(230))  578  []
End of Step----------------------------------

step(232)
add(idling(232))  583  []
add(now(232))  582  []
delete(now(231))  580  []
End of Step----------------------------------

step(233)
add(idling(233))  585  []
add(now(233))  584  []
delete(now(232))  582  []
End of Step----------------------------------

step(234)
add(idling(234))  587  []
add(now(234))  586  []
delete(now(233))  584  []
End of Step----------------------------------

step(235)
add(idling(235))  589  []
add(now(235))  588  []
delete(now(234))  586  []
End of Step----------------------------------

step(236)
add(idling(236))  591  []
add(now(236))  590  []
delete(now(235))  588  []
End of Step----------------------------------

step(237)
add(idling(237))  593  []
add(now(237))  592  []
delete(now(236))  590  []
End of Step----------------------------------

step(238)
add(idling(238))  595  []
add(now(238))  594  []
delete(now(237))  592  []
End of Step----------------------------------

step(239)
add(idling(239))  597  []
add(now(239))  596  []
delete(now(238))  594  []
End of Step----------------------------------

step(240)
add(idling(240))  599  []
add(now(240))  598  []
delete(now(239))  596  []
End of Step----------------------------------

step(241)
add(idling(241))  601  []
add(now(241))  600  []
delete(now(240))  598  []
End of Step----------------------------------

step(242)
add(idling(242))  603  []
add(now(242))  602  []
delete(now(241))  600  []
End of Step----------------------------------

step(243)
add(idling(243))  605  []
add(now(243))  604  []
delete(now(242))  602  []
End of Step----------------------------------

step(244)
add(idling(244))  607  []
add(now(244))  606  []
delete(now(243))  604  []
End of Step----------------------------------

step(245)
add(idling(245))  609  []
add(now(245))  608  []
delete(now(244))  606  []
End of Step----------------------------------

step(246)
add(idling(246))  611  []
add(now(246))  610  []
delete(now(245))  608  []
End of Step----------------------------------

step(247)
add(idling(247))  613  []
add(now(247))  612  []
delete(now(246))  610  []
End of Step----------------------------------

step(248)
add(idling(248))  615  []
add(now(248))  614  []
delete(now(247))  612  []
End of Step----------------------------------

step(249)
add(idling(249))  617  []
add(now(249))  616  []
delete(now(248))  614  []
End of Step----------------------------------

step(250)
add(idling(250))  619  []
add(now(250))  618  []
delete(now(249))  616  []
End of Step----------------------------------

step(251)
add(idling(251))  621  []
add(now(251))  620  []
delete(now(250))  618  []
End of Step----------------------------------

step(252)
add(idling(252))  623  []
add(now(252))  622  []
delete(now(251))  620  []
End of Step----------------------------------

step(253)
add(idling(253))  625  []
add(now(253))  624  []
delete(now(252))  622  []
End of Step----------------------------------

step(254)
add(idling(254))  627  []
add(now(254))  626  []
delete(now(253))  624  []
End of Step----------------------------------

step(255)
add(idling(255))  629  []
add(now(255))  628  []
delete(now(254))  626  []
End of Step----------------------------------

step(256)
add(idling(256))  631  []
add(now(256))  630  []
delete(now(255))  628  []
End of Step----------------------------------

step(257)
add(idling(257))  633  []
add(now(257))  632  []
delete(now(256))  630  []
End of Step----------------------------------

step(258)
add(idling(258))  635  []
add(now(258))  634  []
delete(now(257))  632  []
End of Step----------------------------------

step(259)
add(idling(259))  637  []
add(now(259))  636  []
delete(now(258))  634  []
End of Step----------------------------------

step(260)
add(idling(260))  639  []
add(now(260))  638  []
delete(now(259))  636  []
End of Step----------------------------------

step(261)
add(idling(261))  641  []
add(now(261))  640  []
delete(now(260))  638  []
End of Step----------------------------------

step(262)
add(idling(262))  643  []
add(now(262))  642  []
delete(now(261))  640  []
End of Step----------------------------------

step(263)
add(idling(263))  645  []
add(now(263))  644  []
delete(now(262))  642  []
End of Step----------------------------------

step(264)
add(idling(264))  647  []
add(now(264))  646  []
delete(now(263))  644  []
End of Step----------------------------------

step(265)
add(idling(265))  649  []
add(now(265))  648  []
delete(now(264))  646  []
End of Step----------------------------------

step(266)
add(idling(266))  651  []
add(now(266))  650  []
delete(now(265))  648  []
End of Step----------------------------------

step(267)
add(idling(267))  653  []
add(now(267))  652  []
delete(now(266))  650  []
End of Step----------------------------------

step(268)
add(idling(268))  655  []
add(now(268))  654  []
delete(now(267))  652  []
End of Step----------------------------------

step(269)
add(idling(269))  657  []
add(now(269))  656  []
delete(now(268))  654  []
End of Step----------------------------------

step(270)
add(idling(270))  659  []
add(now(270))  658  []
delete(now(269))  656  []
End of Step----------------------------------

step(271)
add(utterance(s2))  661  []
add(now(271))  660  []
delete(now(270))  658  []
End of Step----------------------------------

step(272)
add(now(272))  663  []
add(update_utt_list(s2, [s1]))  662  [[39,661,264]]
delete(utt_list([s1]))  264  [[40,262]]
delete(now(271))  660  []
End of Step----------------------------------

step(273)
add(now(273))  665  []
add(utt_list([s2, s1]))  664  [[40,662]]
delete(now(272))  663  []
End of Step----------------------------------

step(274)
add(end_of_parse(s2))  677  []
add(verb(s2, val1))  676  []
add(links(s2, l0, val1, val2, Os))  675  []
add(links(s2, l0, val0, val1, Wi))  674  []
add(links(s2, l0, val0, val4, RW))  673  []
add(value_of(s2, val4, RIGHT-WALL))  672  []
add(value_of(s2, val3, menu))  671  []
add(value_of(s2, val2, chinese))  670  []
add(value_of(s2, val1, display))  669  []
add(value_of(s2, val0, LEFT-WALL))  668  []
add(unused_cost(s2, l0, 1))  667  []
add(now(274))  666  []
delete(now(273))  665  []
End of Step----------------------------------

step(275)
add(now(275))  679  []
add(call(ac_find_links(s2), [links(s2, l0, val0, val4, RW), links(s2, l0, val0, val1, Wi), links(s2, l0, val1, val2, Os), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL)], s2))  678  [[42,677]]
delete(now(274))  666  []
End of Step----------------------------------

step(276)
add(now(276))  681  []
add(doing(ac_find_links(s2), [links(s2, l0, val0, val4, RW), links(s2, l0, val0, val1, Wi), links(s2, l0, val1, val2, Os), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL)], s2))  680  []
delete(now(275))  679  []
End of Step----------------------------------

step(277)
add(link(s2, val0, val1, Wi))  683  []
add(now(277))  682  []
delete(now(276))  681  []
End of Step----------------------------------

step(278)
add(done(ac_find_links(s2), [links(s2, l0, val0, val4, RW), links(s2, l0, val0, val1, Wi), links(s2, l0, val1, val2, Os), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL)], s2))  686  []
add(link(s2, val1, val2, Os))  685  []
add(now(278))  684  []
delete(doing(ac_find_links(s2), [links(s2, l0, val0, val4, RW), links(s2, l0, val0, val1, Wi), links(s2, l0, val1, val2, Os), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL)], s2))  680  []
delete(now(277))  682  []
End of Step----------------------------------

step(279)
add(now(279))  690  []
add(fix_link_length(s2, 2))  687  [[46,685,667,686]]
delete(now(278))  684  []
End of Step----------------------------------

step(280)
add(now(280))  692  []
add(call(ac_fix_linkage(s2, 2), [value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), verb(s2, val1), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(mute, , [[v0, verb]], [v0]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0]), structure(fullscreen, , [[v0, verb]], [v0]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(no, , , [undo]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), link(s2, val0, val1, Wi), link(s2, val1, val2, Os)], s2))  691  [[47,687]]
delete(now(279))  690  []
End of Step----------------------------------

step(281)
add(now(281))  694  []
add(doing(ac_fix_linkage(s2, 2), [value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), verb(s2, val1), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(mute, , [[v0, verb]], [v0]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0]), structure(fullscreen, , [[v0, verb]], [v0]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(no, , , [undo]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), link(s2, val0, val1, Wi), link(s2, val1, val2, Os)], s2))  693  []
delete(now(280))  692  []
End of Step----------------------------------

step(282)
add(link(s2, val3, val2, D))  696  []
add(now(282))  695  []
delete(now(281))  694  []
End of Step----------------------------------

step(283)
add(done(ac_fix_linkage(s2, 2), [value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), verb(s2, val1), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(mute, , [[v0, verb]], [v0]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0]), structure(fullscreen, , [[v0, verb]], [v0]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(no, , , [undo]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), link(s2, val0, val1, Wi), link(s2, val1, val2, Os)], s2))  698  []
add(now(283))  697  []
delete(doing(ac_fix_linkage(s2, 2), [value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), verb(s2, val1), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(mute, , [[v0, verb]], [v0]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0]), structure(fullscreen, , [[v0, verb]], [v0]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(no, , , [undo]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), link(s2, val0, val1, Wi), link(s2, val1, val2, Os)], s2))  693  []
delete(link(s2, val0, val1, Wi))  683  []
delete(now(282))  695  []
End of Step----------------------------------

step(284)
add(now(284))  700  []
add(call(ac_find_unused_cost(s2), [value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), unused_cost(s2, l0, 1)], s2))  699  [[50,698]]
delete(now(283))  697  []
End of Step----------------------------------

step(285)
add(now(285))  702  []
add(doing(ac_find_unused_cost(s2), [value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), unused_cost(s2, l0, 1)], s2))  701  []
delete(now(284))  700  []
End of Step----------------------------------

step(286)
add(idling(286))  704  []
add(now(286))  703  []
delete(unused_cost(s2, l0, 1))  667  []
delete(now(285))  702  []
End of Step----------------------------------

step(287)
add(done(ac_find_unused_cost(s2), [value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), unused_cost(s2, l0, 1)], s2))  707  []
add(unused_cost(s2, l0, 0))  706  []
add(now(287))  705  []
delete(doing(ac_find_unused_cost(s2), [value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), unused_cost(s2, l0, 1)], s2))  701  []
delete(now(286))  703  []
End of Step----------------------------------

step(288)
add(now(288))  709  []
add(parsed(s2))  708  [[51,706]]
delete(now(287))  705  []
End of Step----------------------------------

step(289)
add(now(289))  711  []
add(call(ac_main_verb(s2), [verb(s2, val1), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL)], s2))  710  [[52,708,676]]
delete(now(288))  709  []
End of Step----------------------------------

step(290)
add(now(290))  713  []
add(doing(ac_main_verb(s2), [verb(s2, val1), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL)], s2))  712  []
delete(now(289))  711  []
End of Step----------------------------------

step(291)
add(main_verb(s2, display))  715  []
add(now(291))  714  []
delete(now(290))  713  []
End of Step----------------------------------

step(292)
add(now(292))  717  []
add(call(ac_find_command(s2), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), main_verb(s2, display)], s2))  716  [[54,715]]
delete(now(291))  714  []
End of Step----------------------------------

step(293)
add(now(293))  719  []
add(doing(ac_find_command(s2), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), main_verb(s2, display)], s2))  718  []
delete(now(292))  717  []
End of Step----------------------------------

step(294)
add(done(ac_main_verb(s2), [verb(s2, val1), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL)], s2))  721  []
add(now(294))  720  []
delete(doing(ac_main_verb(s2), [verb(s2, val1), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL)], s2))  712  []
delete(now(293))  719  []
End of Step----------------------------------

step(295)
add(done(ac_find_command(s2), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), main_verb(s2, display)], s2))  724  []
add(domain_command(s2, display, display))  723  []
add(now(295))  722  []
delete(doing(ac_find_command(s2), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), main_verb(s2, display)], s2))  718  []
delete(now(294))  720  []
End of Step----------------------------------

step(296)
add(now(296))  726  []
add(satisfiedallneeds(s2))  725  [[56,724]]
delete(now(295))  722  []
End of Step----------------------------------

step(297)
add(now(297))  728  []
add(call(ac_find_intention(s2, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s2, val1, val2, Os), link(s2, val3, val2, D), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), verb(s2, val1)], s2))  727  [[58,725,723]]
delete(now(296))  726  []
End of Step----------------------------------

step(298)
add(now(298))  730  []
add(doing(ac_find_intention(s2, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s2, val1, val2, Os), link(s2, val3, val2, D), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), verb(s2, val1)], s2))  729  []
delete(now(297))  728  []
End of Step----------------------------------

step(299)
add(error(s2, Item_NF, [display_type, chinese]))  732  []
add(now(299))  731  []
delete(now(298))  730  []
End of Step----------------------------------

step(300)
add(now(300))  734  []
add(need(s2, [disambiguate, chinese, display_type]))  733  [[63,732]]
delete(now(299))  731  []
End of Step----------------------------------

step(301)
add(not(satisfiedallneeds(s2)))  735  [[68,733,725]]
add(done(ac_find_intention(s2, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s2, val1, val2, Os), link(s2, val3, val2, D), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), verb(s2, val1)], s2))  759  []
add(type(s2, v2, display_type))  758  []
add(val(s2, v2, val2))  757  []
add(error(s2, Item_NF, [all, menu]))  755  []
add(now(301))  754  []
add(call(ac_think(s2, [disambiguate, chinese, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  736  [[82,733,31]]
delete(doing(ac_find_intention(s2, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s2, val1, val2, Os), link(s2, val3, val2, D), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), verb(s2, val1)], s2))  729  []
delete(now(300))  734  []
End of Step----------------------------------

step(302)
add(now(302))  765  []
add(need(s2, [disambiguate, menu, all]))  764  [[63,755]]
add(doing(ac_think(s2, [disambiguate, chinese, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  763  []
add(contra(735, 725, 301))  760  [[735,725]]
add(distrusted(735, 301))  762  [[725]]
add(distrusted(725, 301))  761  [[735]]
delete(now(301))  754  []
End of Step----------------------------------

step(303)
add(done(ac_think(s2, [disambiguate, chinese, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  786  []
add(now(303))  785  []
add(call(ac_think(s2, [disambiguate, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  767  [[82,764,31]]
add(not(satisfiedallneeds(s2)))  766  [[96,760]]
delete(doing(ac_think(s2, [disambiguate, chinese, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  763  []
delete(now(302))  765  []
End of Step----------------------------------

step(304)
add(now(304))  791  []
add(need(s2, [equil, chinese, display_type]))  790  [[85,786]]
add(call(ac_think(s2, [disambiguate, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  789  [[81,786,764]]
add(call(ac_think(s2, [disambiguate, chinese, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  788  [[81,786,733]]
add(doing(ac_think(s2, [disambiguate, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  787  []
delete(now(303))  785  []
End of Step----------------------------------

step(305)
add(done(ac_think(s2, [disambiguate, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  814  []
add(now(305))  813  []
add(call(ac_think(s2, [equil, chinese, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  794  [[81,790,786]]
add(doing(ac_think(s2, [disambiguate, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  793  []
add(doing(ac_think(s2, [disambiguate, chinese, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  792  []
delete(doing(ac_think(s2, [disambiguate, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  787  []
delete(now(304))  791  []
End of Step----------------------------------

step(306)
add(done(ac_think(s2, [disambiguate, chinese, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  820  []
add(now(306))  818  []
add(need(s2, [equil, menu, all]))  817  [[85,814]]
add(call(ac_think(s2, [equil, chinese, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  816  [[81,814,790]]
add(doing(ac_think(s2, [equil, chinese, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  815  []
delete(doing(ac_think(s2, [disambiguate, chinese, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  792  []
delete(doing(ac_think(s2, [disambiguate, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  793  []
delete(now(305))  813  []
End of Step----------------------------------

step(307)
add(done(ac_think(s2, [equil, chinese, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  846  []
add(now(307))  845  []
add(call(ac_think(s2, [equil, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  822  [[81,817,786]]
add(doing(ac_think(s2, [equil, chinese, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  821  []
delete(doing(ac_think(s2, [equil, chinese, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  815  []
delete(now(306))  818  []
End of Step----------------------------------

step(308)
add(now(308))  850  []
add(call(ac_ask(s2, [equil, chinese, display_type]), , s2))  849  [[86,846]]
add(call(ac_think(s2, [equil, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  848  [[81,846,817]]
add(doing(ac_think(s2, [equil, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  847  []
delete(doing(ac_think(s2, [equil, chinese, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  821  []
delete(now(307))  845  []
End of Step----------------------------------

step(309)
add(done(ac_think(s2, [equil, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  855  []
add(now(309))  854  []
add(doing(ac_think(s2, [equil, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  853  []
add(doing(ac_ask(s2, [equil, chinese, display_type]), , s2))  852  []
delete(doing(ac_think(s2, [equil, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  847  []
delete(now(308))  850  []
End of Step----------------------------------

step(310)
add(done(ac_ask(s2, [equil, chinese, display_type]), , s2))  859  []
add(now(310))  857  []
add(call(ac_ask(s2, [equil, menu, all]), , s2))  856  [[86,855]]
delete(doing(ac_ask(s2, [equil, chinese, display_type]), , s2))  852  []
delete(doing(ac_think(s2, [equil, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s2, val1), type(s2, v2, display_type), val(s2, v2, val2), value_of(s2, val0, LEFT-WALL), value_of(s2, val1, display), value_of(s2, val2, chinese), value_of(s2, val3, menu), value_of(s2, val4, RIGHT-WALL), link(s2, val1, val2, Os), link(s2, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s2))  853  []
delete(now(309))  854  []
End of Step----------------------------------

step(311)
add(now(311))  862  []
add(expect(s2, [equil, chinese, display_type]))  861  [[89,859]]
add(doing(ac_ask(s2, [equil, menu, all]), , s2))  860  []
delete(now(310))  857  []
End of Step----------------------------------

step(312)
add(done(ac_ask(s2, [equil, menu, all]), , s2))  865  []
add(now(312))  864  []
add(update_expect_list([], [[s2, [equil, chinese, display_type]]]))  863  [[90,861,32]]
delete(expect_list())  32  []
delete(update_expect_list([], [[s2, [equil, chinese, display_type]]]))  863  [[90,861,32]]
delete(doing(ac_ask(s2, [equil, menu, all]), , s2))  860  []
delete(now(311))  862  []
End of Step----------------------------------

step(313)
add(now(313))  868  []
add(expect(s2, [equil, menu, all]))  867  [[89,865]]
add(expect_list([[s2, [equil, chinese, display_type]]]))  866  [[93,863]]
delete(now(312))  864  []
End of Step----------------------------------

step(314)
add(now(314))  871  []
add(update_expect_list([[[s2, [equil, chinese, display_type]]]], [[s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]))  869  [[90,866,867]]
delete(expect_list([[s2, [equil, chinese, display_type]]]))  866  [[93,863]]
delete(update_expect_list([[[s2, [equil, chinese, display_type]]]], [[s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]))  869  [[90,867,866],[90,866,867]]
delete(now(313))  868  []
End of Step----------------------------------

step(315)
add(now(315))  873  []
add(expect_list([[s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]))  872  [[93,869]]
delete(now(314))  871  []
End of Step----------------------------------

step(316)
add(idling(316))  875  []
add(now(316))  874  []
delete(now(315))  873  []
End of Step----------------------------------

step(317)
add(idling(317))  877  []
add(now(317))  876  []
delete(now(316))  874  []
End of Step----------------------------------

step(318)
add(idling(318))  879  []
add(now(318))  878  []
delete(now(317))  876  []
End of Step----------------------------------

step(319)
add(idling(319))  881  []
add(now(319))  880  []
delete(now(318))  878  []
End of Step----------------------------------

step(320)
add(idling(320))  883  []
add(now(320))  882  []
delete(now(319))  880  []
End of Step----------------------------------

step(321)
add(idling(321))  885  []
add(now(321))  884  []
delete(now(320))  882  []
End of Step----------------------------------

step(322)
add(idling(322))  887  []
add(now(322))  886  []
delete(now(321))  884  []
End of Step----------------------------------

step(323)
add(idling(323))  889  []
add(now(323))  888  []
delete(now(322))  886  []
End of Step----------------------------------

step(324)
add(idling(324))  891  []
add(now(324))  890  []
delete(now(323))  888  []
End of Step----------------------------------

step(325)
add(idling(325))  893  []
add(now(325))  892  []
delete(now(324))  890  []
End of Step----------------------------------

step(326)
add(idling(326))  895  []
add(now(326))  894  []
delete(now(325))  892  []
End of Step----------------------------------

step(327)
add(idling(327))  897  []
add(now(327))  896  []
delete(now(326))  894  []
End of Step----------------------------------

step(328)
add(idling(328))  899  []
add(now(328))  898  []
delete(now(327))  896  []
End of Step----------------------------------

step(329)
add(idling(329))  901  []
add(now(329))  900  []
delete(now(328))  898  []
End of Step----------------------------------

step(330)
add(idling(330))  903  []
add(now(330))  902  []
delete(now(329))  900  []
End of Step----------------------------------

step(331)
add(idling(331))  905  []
add(now(331))  904  []
delete(now(330))  902  []
End of Step----------------------------------

step(332)
add(idling(332))  907  []
add(now(332))  906  []
delete(now(331))  904  []
End of Step----------------------------------

step(333)
add(idling(333))  909  []
add(now(333))  908  []
delete(now(332))  906  []
End of Step----------------------------------

step(334)
add(idling(334))  911  []
add(now(334))  910  []
delete(now(333))  908  []
End of Step----------------------------------

step(335)
add(idling(335))  913  []
add(now(335))  912  []
delete(now(334))  910  []
End of Step----------------------------------

step(336)
add(idling(336))  915  []
add(now(336))  914  []
delete(now(335))  912  []
End of Step----------------------------------

step(337)
add(idling(337))  917  []
add(now(337))  916  []
delete(now(336))  914  []
End of Step----------------------------------

step(338)
add(idling(338))  919  []
add(now(338))  918  []
delete(now(337))  916  []
End of Step----------------------------------

step(339)
add(idling(339))  921  []
add(now(339))  920  []
delete(now(338))  918  []
End of Step----------------------------------

step(340)
add(idling(340))  923  []
add(now(340))  922  []
delete(now(339))  920  []
End of Step----------------------------------

step(341)
add(idling(341))  925  []
add(now(341))  924  []
delete(now(340))  922  []
End of Step----------------------------------

step(342)
add(idling(342))  927  []
add(now(342))  926  []
delete(now(341))  924  []
End of Step----------------------------------

step(343)
add(idling(343))  929  []
add(now(343))  928  []
delete(now(342))  926  []
End of Step----------------------------------

step(344)
add(idling(344))  931  []
add(now(344))  930  []
delete(now(343))  928  []
End of Step----------------------------------

step(345)
add(idling(345))  933  []
add(now(345))  932  []
delete(now(344))  930  []
End of Step----------------------------------

step(346)
add(idling(346))  935  []
add(now(346))  934  []
delete(now(345))  932  []
End of Step----------------------------------

step(347)
add(idling(347))  937  []
add(now(347))  936  []
delete(now(346))  934  []
End of Step----------------------------------

step(348)
add(idling(348))  939  []
add(now(348))  938  []
delete(now(347))  936  []
End of Step----------------------------------

step(349)
add(idling(349))  941  []
add(now(349))  940  []
delete(now(348))  938  []
End of Step----------------------------------

step(350)
add(idling(350))  943  []
add(now(350))  942  []
delete(now(349))  940  []
End of Step----------------------------------

step(351)
add(idling(351))  945  []
add(now(351))  944  []
delete(now(350))  942  []
End of Step----------------------------------

step(352)
add(idling(352))  947  []
add(now(352))  946  []
delete(now(351))  944  []
End of Step----------------------------------

step(353)
add(idling(353))  949  []
add(now(353))  948  []
delete(now(352))  946  []
End of Step----------------------------------

step(354)
add(idling(354))  951  []
add(now(354))  950  []
delete(now(353))  948  []
End of Step----------------------------------

step(355)
add(idling(355))  953  []
add(now(355))  952  []
delete(now(354))  950  []
End of Step----------------------------------

step(356)
add(idling(356))  955  []
add(now(356))  954  []
delete(now(355))  952  []
End of Step----------------------------------

step(357)
add(idling(357))  957  []
add(now(357))  956  []
delete(now(356))  954  []
End of Step----------------------------------

step(358)
add(idling(358))  959  []
add(now(358))  958  []
delete(now(357))  956  []
End of Step----------------------------------

step(359)
add(idling(359))  961  []
add(now(359))  960  []
delete(now(358))  958  []
End of Step----------------------------------

step(360)
add(idling(360))  963  []
add(now(360))  962  []
delete(now(359))  960  []
End of Step----------------------------------

step(361)
add(idling(361))  965  []
add(now(361))  964  []
delete(now(360))  962  []
End of Step----------------------------------

step(362)
add(idling(362))  967  []
add(now(362))  966  []
delete(now(361))  964  []
End of Step----------------------------------

step(363)
add(idling(363))  969  []
add(now(363))  968  []
delete(now(362))  966  []
End of Step----------------------------------

step(364)
add(utterance(s3))  971  []
add(now(364))  970  []
delete(now(363))  968  []
End of Step----------------------------------

step(365)
add(now(365))  975  []
add(response(s2, [equil, menu, all], s3))  974  [[41,971,867]]
add(response(s2, [equil, chinese, display_type], s3))  973  [[41,971,861]]
add(update_utt_list(s3, [s2, s1]))  972  [[39,971,664]]
delete(utt_list([s2, s1]))  664  [[40,662]]
delete(now(364))  970  []
End of Step----------------------------------

step(366)
add(now(366))  977  []
add(utt_list([s3, s2, s1]))  976  [[40,972]]
delete(now(365))  975  []
End of Step----------------------------------

step(367)
add(end_of_parse(s3))  989  []
add(verb(s3, val1))  988  []
add(links(s3, l0, val1, val2, Os))  987  []
add(links(s3, l0, val0, val1, Wi))  986  []
add(links(s3, l0, val0, val4, RW))  985  []
add(value_of(s3, val4, RIGHT-WALL))  984  []
add(value_of(s3, val3, menu))  983  []
add(value_of(s3, val2, chipotle))  982  []
add(value_of(s3, val1, display))  981  []
add(value_of(s3, val0, LEFT-WALL))  980  []
add(unused_cost(s3, l0, 1))  979  []
add(now(367))  978  []
delete(now(366))  977  []
End of Step----------------------------------

step(368)
add(now(368))  991  []
add(call(ac_find_links(s3), [links(s3, l0, val0, val4, RW), links(s3, l0, val0, val1, Wi), links(s3, l0, val1, val2, Os), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL)], s3))  990  [[42,989]]
delete(now(367))  978  []
End of Step----------------------------------

step(369)
add(now(369))  993  []
add(doing(ac_find_links(s3), [links(s3, l0, val0, val4, RW), links(s3, l0, val0, val1, Wi), links(s3, l0, val1, val2, Os), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL)], s3))  992  []
delete(now(368))  991  []
End of Step----------------------------------

step(370)
add(link(s3, val0, val1, Wi))  995  []
add(now(370))  994  []
delete(now(369))  993  []
End of Step----------------------------------

step(371)
add(done(ac_find_links(s3), [links(s3, l0, val0, val4, RW), links(s3, l0, val0, val1, Wi), links(s3, l0, val1, val2, Os), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL)], s3))  998  []
add(link(s3, val1, val2, Os))  997  []
add(now(371))  996  []
delete(doing(ac_find_links(s3), [links(s3, l0, val0, val4, RW), links(s3, l0, val0, val1, Wi), links(s3, l0, val1, val2, Os), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL)], s3))  992  []
delete(now(370))  994  []
End of Step----------------------------------

step(372)
add(now(372))  1002  []
add(fix_link_length(s3, 2))  999  [[46,997,979,998]]
delete(now(371))  996  []
End of Step----------------------------------

step(373)
add(now(373))  1004  []
add(call(ac_fix_linkage(s3, 2), [value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), verb(s3, val1), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(mute, , [[v0, verb]], [v0]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0]), structure(fullscreen, , [[v0, verb]], [v0]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(no, , , [undo]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), link(s3, val0, val1, Wi), link(s3, val1, val2, Os)], s3))  1003  [[47,999]]
delete(now(372))  1002  []
End of Step----------------------------------

step(374)
add(now(374))  1006  []
add(doing(ac_fix_linkage(s3, 2), [value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), verb(s3, val1), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(mute, , [[v0, verb]], [v0]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0]), structure(fullscreen, , [[v0, verb]], [v0]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(no, , , [undo]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), link(s3, val0, val1, Wi), link(s3, val1, val2, Os)], s3))  1005  []
delete(now(373))  1004  []
End of Step----------------------------------

step(375)
add(link(s3, val3, val2, D))  1008  []
add(now(375))  1007  []
delete(now(374))  1006  []
End of Step----------------------------------

step(376)
add(done(ac_fix_linkage(s3, 2), [value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), verb(s3, val1), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(mute, , [[v0, verb]], [v0]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0]), structure(fullscreen, , [[v0, verb]], [v0]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(no, , , [undo]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), link(s3, val0, val1, Wi), link(s3, val1, val2, Os)], s3))  1010  []
add(now(376))  1009  []
delete(doing(ac_fix_linkage(s3, 2), [value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), verb(s3, val1), isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(mute, , [[v0, verb]], [v0]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0]), structure(fullscreen, , [[v0, verb]], [v0]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(no, , , [undo]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), link(s3, val0, val1, Wi), link(s3, val1, val2, Os)], s3))  1005  []
delete(link(s3, val0, val1, Wi))  995  []
delete(now(375))  1007  []
End of Step----------------------------------

step(377)
add(now(377))  1012  []
add(call(ac_find_unused_cost(s3), [value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), unused_cost(s3, l0, 1)], s3))  1011  [[50,1010]]
delete(now(376))  1009  []
End of Step----------------------------------

step(378)
add(now(378))  1014  []
add(doing(ac_find_unused_cost(s3), [value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), unused_cost(s3, l0, 1)], s3))  1013  []
delete(now(377))  1012  []
End of Step----------------------------------

step(379)
add(idling(379))  1016  []
add(now(379))  1015  []
delete(unused_cost(s3, l0, 1))  979  []
delete(now(378))  1014  []
End of Step----------------------------------

step(380)
add(done(ac_find_unused_cost(s3), [value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), unused_cost(s3, l0, 1)], s3))  1019  []
add(unused_cost(s3, l0, 0))  1018  []
add(now(380))  1017  []
delete(doing(ac_find_unused_cost(s3), [value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), unused_cost(s3, l0, 1)], s3))  1013  []
delete(now(379))  1015  []
End of Step----------------------------------

step(381)
add(now(381))  1021  []
add(parsed(s3))  1020  [[51,1018]]
delete(now(380))  1017  []
End of Step----------------------------------

step(382)
add(now(382))  1023  []
add(call(ac_main_verb(s3), [verb(s3, val1), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL)], s3))  1022  [[52,1020,988]]
delete(now(381))  1021  []
End of Step----------------------------------

step(383)
add(now(383))  1025  []
add(doing(ac_main_verb(s3), [verb(s3, val1), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL)], s3))  1024  []
delete(now(382))  1023  []
End of Step----------------------------------

step(384)
add(main_verb(s3, display))  1027  []
add(now(384))  1026  []
delete(now(383))  1025  []
End of Step----------------------------------

step(385)
add(now(385))  1029  []
add(call(ac_find_command(s3), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), main_verb(s3, display)], s3))  1028  [[54,1027]]
delete(now(384))  1026  []
End of Step----------------------------------

step(386)
add(now(386))  1031  []
add(doing(ac_find_command(s3), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), main_verb(s3, display)], s3))  1030  []
delete(now(385))  1029  []
End of Step----------------------------------

step(387)
add(done(ac_main_verb(s3), [verb(s3, val1), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL)], s3))  1033  []
add(now(387))  1032  []
delete(doing(ac_main_verb(s3), [verb(s3, val1), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL)], s3))  1024  []
delete(now(386))  1031  []
End of Step----------------------------------

step(388)
add(done(ac_find_command(s3), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), main_verb(s3, display)], s3))  1036  []
add(domain_command(s3, display, display))  1035  []
add(now(388))  1034  []
delete(doing(ac_find_command(s3), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), main_verb(s3, display)], s3))  1030  []
delete(now(387))  1032  []
End of Step----------------------------------

step(389)
add(now(389))  1038  []
add(satisfiedallneeds(s3))  1037  [[56,1036]]
delete(now(388))  1034  []
End of Step----------------------------------

step(390)
add(now(390))  1040  []
add(call(ac_find_intention(s3, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s3, val1, val2, Os), link(s3, val3, val2, D), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), verb(s3, val1)], s3))  1039  [[58,1037,1035]]
delete(now(389))  1038  []
End of Step----------------------------------

step(391)
add(now(391))  1042  []
add(doing(ac_find_intention(s3, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s3, val1, val2, Os), link(s3, val3, val2, D), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), verb(s3, val1)], s3))  1041  []
delete(now(390))  1040  []
End of Step----------------------------------

step(392)
add(error(s3, Item_NF, [display_type, chipotle]))  1044  []
add(now(392))  1043  []
delete(now(391))  1042  []
End of Step----------------------------------

step(393)
add(now(393))  1046  []
add(need(s3, [disambiguate, chipotle, display_type]))  1045  [[63,1044]]
delete(now(392))  1043  []
End of Step----------------------------------

step(394)
add(not(satisfiedallneeds(s3)))  1047  [[68,1045,1037]]
add(done(ac_find_intention(s3, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s3, val1, val2, Os), link(s3, val3, val2, D), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), verb(s3, val1)], s3))  1071  []
add(type(s3, v2, display_type))  1070  []
add(val(s3, v2, val2))  1069  []
add(error(s3, Item_NF, [all, menu]))  1067  []
add(now(394))  1066  []
add(call(ac_think(s3, [disambiguate, chipotle, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1048  [[82,1045,31]]
delete(doing(ac_find_intention(s3, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s3, val1, val2, Os), link(s3, val3, val2, D), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), verb(s3, val1)], s3))  1041  []
delete(now(393))  1046  []
End of Step----------------------------------

step(395)
add(now(395))  1077  []
add(need(s3, [disambiguate, menu, all]))  1076  [[63,1067]]
add(doing(ac_think(s3, [disambiguate, chipotle, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1075  []
add(contra(1047, 1037, 394))  1072  [[1047,1037]]
add(distrusted(1047, 394))  1074  [[1037]]
add(distrusted(1037, 394))  1073  [[1047]]
delete(now(394))  1066  []
End of Step----------------------------------

step(396)
add(done(ac_think(s3, [disambiguate, chipotle, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1098  []
add(now(396))  1097  []
add(call(ac_think(s3, [disambiguate, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1079  [[82,1076,31]]
add(not(satisfiedallneeds(s3)))  1078  [[96,1072]]
delete(doing(ac_think(s3, [disambiguate, chipotle, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1075  []
delete(now(395))  1077  []
End of Step----------------------------------

step(397)
add(now(397))  1103  []
add(need(s3, [equil, chipotle, display_type]))  1102  [[85,1098]]
add(call(ac_think(s3, [disambiguate, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1101  [[81,1098,1076]]
add(call(ac_think(s3, [disambiguate, chipotle, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1100  [[81,1098,1045]]
add(doing(ac_think(s3, [disambiguate, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1099  []
delete(now(396))  1097  []
End of Step----------------------------------

step(398)
add(done(ac_think(s3, [disambiguate, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1126  []
add(now(398))  1125  []
add(call(ac_think(s3, [equil, chipotle, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1106  [[81,1102,1098]]
add(doing(ac_think(s3, [disambiguate, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1105  []
add(doing(ac_think(s3, [disambiguate, chipotle, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1104  []
delete(doing(ac_think(s3, [disambiguate, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1099  []
delete(now(397))  1103  []
End of Step----------------------------------

step(399)
add(done(ac_think(s3, [disambiguate, chipotle, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1132  []
add(now(399))  1130  []
add(need(s3, [equil, menu, all]))  1129  [[85,1126]]
add(call(ac_think(s3, [equil, chipotle, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1128  [[81,1126,1102]]
add(doing(ac_think(s3, [equil, chipotle, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1127  []
delete(doing(ac_think(s3, [disambiguate, chipotle, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1104  []
delete(doing(ac_think(s3, [disambiguate, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1105  []
delete(now(398))  1125  []
End of Step----------------------------------

step(400)
add(done(ac_think(s3, [equil, chipotle, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1158  []
add(now(400))  1157  []
add(call(ac_think(s3, [equil, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1134  [[81,1129,1098]]
add(doing(ac_think(s3, [equil, chipotle, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1133  []
delete(doing(ac_think(s3, [equil, chipotle, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1127  []
delete(now(399))  1130  []
End of Step----------------------------------

step(401)
add(now(401))  1162  []
add(call(ac_ask(s3, [equil, chipotle, display_type]), , s3))  1161  [[86,1158]]
add(call(ac_think(s3, [equil, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1160  [[81,1158,1129]]
add(doing(ac_think(s3, [equil, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1159  []
delete(doing(ac_think(s3, [equil, chipotle, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1133  []
delete(now(400))  1157  []
End of Step----------------------------------

step(402)
add(done(ac_think(s3, [equil, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1167  []
add(now(402))  1166  []
add(doing(ac_think(s3, [equil, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1165  []
add(doing(ac_ask(s3, [equil, chipotle, display_type]), , s3))  1164  []
delete(doing(ac_think(s3, [equil, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1159  []
delete(now(401))  1162  []
End of Step----------------------------------

step(403)
add(done(ac_ask(s3, [equil, chipotle, display_type]), , s3))  1170  []
add(now(403))  1168  []
delete(doing(ac_ask(s3, [equil, chipotle, display_type]), , s3))  1164  []
delete(doing(ac_think(s3, [equil, menu, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s3, val1), type(s3, v2, display_type), val(s3, v2, val2), value_of(s3, val0, LEFT-WALL), value_of(s3, val1, display), value_of(s3, val2, chipotle), value_of(s3, val3, menu), value_of(s3, val4, RIGHT-WALL), link(s3, val1, val2, Os), link(s3, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s3))  1165  []
delete(now(402))  1166  []
End of Step----------------------------------

step(404)
add(now(404))  1172  []
add(expect(s3, [equil, chipotle, display_type]))  1171  [[89,1170]]
delete(now(403))  1168  []
End of Step----------------------------------

step(405)
add(now(405))  1174  []
add(update_expect_list([[[s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]], [[s3, [equil, chipotle, display_type]], [s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]))  1173  [[90,1171,872]]
delete(expect_list([[s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]))  872  [[93,869]]
delete(update_expect_list([[[s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]], [[s3, [equil, chipotle, display_type]], [s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]))  1173  [[90,1171,872]]
delete(now(404))  1172  []
End of Step----------------------------------

step(406)
add(now(406))  1176  []
add(expect_list([[s3, [equil, chipotle, display_type]], [s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]))  1175  [[93,1173]]
delete(now(405))  1174  []
End of Step----------------------------------

step(407)
add(idling(407))  1178  []
add(now(407))  1177  []
delete(now(406))  1176  []
End of Step----------------------------------

step(408)
add(idling(408))  1180  []
add(now(408))  1179  []
delete(now(407))  1177  []
End of Step----------------------------------

step(409)
add(idling(409))  1182  []
add(now(409))  1181  []
delete(now(408))  1179  []
End of Step----------------------------------

step(410)
add(idling(410))  1184  []
add(now(410))  1183  []
delete(now(409))  1181  []
End of Step----------------------------------

step(411)
add(idling(411))  1186  []
add(now(411))  1185  []
delete(now(410))  1183  []
End of Step----------------------------------

step(412)
add(idling(412))  1188  []
add(now(412))  1187  []
delete(now(411))  1185  []
End of Step----------------------------------

step(413)
add(idling(413))  1190  []
add(now(413))  1189  []
delete(now(412))  1187  []
End of Step----------------------------------

step(414)
add(idling(414))  1192  []
add(now(414))  1191  []
delete(now(413))  1189  []
End of Step----------------------------------

step(415)
add(idling(415))  1194  []
add(now(415))  1193  []
delete(now(414))  1191  []
End of Step----------------------------------

step(416)
add(idling(416))  1196  []
add(now(416))  1195  []
delete(now(415))  1193  []
End of Step----------------------------------

step(417)
add(idling(417))  1198  []
add(now(417))  1197  []
delete(now(416))  1195  []
End of Step----------------------------------

step(418)
add(idling(418))  1200  []
add(now(418))  1199  []
delete(now(417))  1197  []
End of Step----------------------------------

step(419)
add(idling(419))  1202  []
add(now(419))  1201  []
delete(now(418))  1199  []
End of Step----------------------------------

step(420)
add(idling(420))  1204  []
add(now(420))  1203  []
delete(now(419))  1201  []
End of Step----------------------------------

step(421)
add(idling(421))  1206  []
add(now(421))  1205  []
delete(now(420))  1203  []
End of Step----------------------------------

step(422)
add(idling(422))  1208  []
add(now(422))  1207  []
delete(now(421))  1205  []
End of Step----------------------------------

step(423)
add(idling(423))  1210  []
add(now(423))  1209  []
delete(now(422))  1207  []
End of Step----------------------------------

step(424)
add(idling(424))  1212  []
add(now(424))  1211  []
delete(now(423))  1209  []
End of Step----------------------------------

step(425)
add(idling(425))  1214  []
add(now(425))  1213  []
delete(now(424))  1211  []
End of Step----------------------------------

step(426)
add(idling(426))  1216  []
add(now(426))  1215  []
delete(now(425))  1213  []
End of Step----------------------------------

step(427)
add(idling(427))  1218  []
add(now(427))  1217  []
delete(now(426))  1215  []
End of Step----------------------------------

step(428)
add(idling(428))  1220  []
add(now(428))  1219  []
delete(now(427))  1217  []
End of Step----------------------------------

step(429)
add(idling(429))  1222  []
add(now(429))  1221  []
delete(now(428))  1219  []
End of Step----------------------------------

step(430)
add(idling(430))  1224  []
add(now(430))  1223  []
delete(now(429))  1221  []
End of Step----------------------------------

step(431)
add(idling(431))  1226  []
add(now(431))  1225  []
delete(now(430))  1223  []
End of Step----------------------------------

step(432)
add(idling(432))  1228  []
add(now(432))  1227  []
delete(now(431))  1225  []
End of Step----------------------------------

step(433)
add(idling(433))  1230  []
add(now(433))  1229  []
delete(now(432))  1227  []
End of Step----------------------------------

step(434)
add(idling(434))  1232  []
add(now(434))  1231  []
delete(now(433))  1229  []
End of Step----------------------------------

step(435)
add(idling(435))  1234  []
add(now(435))  1233  []
delete(now(434))  1231  []
End of Step----------------------------------

step(436)
add(idling(436))  1236  []
add(now(436))  1235  []
delete(now(435))  1233  []
End of Step----------------------------------

step(437)
add(idling(437))  1238  []
add(now(437))  1237  []
delete(now(436))  1235  []
End of Step----------------------------------

step(438)
add(idling(438))  1240  []
add(now(438))  1239  []
delete(now(437))  1237  []
End of Step----------------------------------

step(439)
add(idling(439))  1242  []
add(now(439))  1241  []
delete(now(438))  1239  []
End of Step----------------------------------

step(440)
add(idling(440))  1244  []
add(now(440))  1243  []
delete(now(439))  1241  []
End of Step----------------------------------

step(441)
add(idling(441))  1246  []
add(now(441))  1245  []
delete(now(440))  1243  []
End of Step----------------------------------

step(442)
add(utterance(s4))  1248  []
add(now(442))  1247  []
delete(now(441))  1245  []
End of Step----------------------------------

step(443)
add(now(443))  1251  []
add(response(s3, [equil, chipotle, display_type], s4))  1250  [[41,1248,1171]]
add(update_utt_list(s4, [s3, s2, s1]))  1249  [[39,1248,976]]
delete(utt_list([s3, s2, s1]))  976  [[40,972]]
delete(now(442))  1247  []
End of Step----------------------------------

step(444)
add(now(444))  1253  []
add(utt_list([s4, s3, s2, s1]))  1252  [[40,1249]]
delete(now(443))  1251  []
End of Step----------------------------------

step(445)
add(end_of_parse(s4))  1266  []
add(verb(s4, val1))  1265  []
add(links(s4, l0, val2, val3, AN))  1264  []
add(links(s4, l0, val1, val3, Os))  1263  []
add(links(s4, l0, val0, val1, Wi))  1262  []
add(links(s4, l0, val0, val4, RW))  1261  []
add(value_of(s4, val4, RIGHT-WALL))  1260  []
add(value_of(s4, val3, chipotle))  1259  []
add(value_of(s4, val2, menu))  1258  []
add(value_of(s4, val1, display))  1257  []
add(value_of(s4, val0, LEFT-WALL))  1256  []
add(unused_cost(s4, l0, 0))  1255  []
add(now(445))  1254  []
delete(now(444))  1253  []
End of Step----------------------------------

step(446)
add(now(446))  1269  []
add(call(ac_find_links(s4), [links(s4, l0, val0, val4, RW), links(s4, l0, val0, val1, Wi), links(s4, l0, val1, val3, Os), links(s4, l0, val2, val3, AN), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL)], s4))  1268  [[42,1266]]
add(parsed(s4))  1267  [[51,1255]]
delete(now(445))  1254  []
End of Step----------------------------------

step(447)
add(now(447))  1272  []
add(call(ac_main_verb(s4), [verb(s4, val1), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL)], s4))  1271  [[52,1267,1265]]
add(doing(ac_find_links(s4), [links(s4, l0, val0, val4, RW), links(s4, l0, val0, val1, Wi), links(s4, l0, val1, val3, Os), links(s4, l0, val2, val3, AN), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL)], s4))  1270  []
delete(now(446))  1269  []
End of Step----------------------------------

step(448)
add(link(s4, val0, val1, Wi))  1275  []
add(now(448))  1274  []
add(doing(ac_main_verb(s4), [verb(s4, val1), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL)], s4))  1273  []
delete(now(447))  1272  []
End of Step----------------------------------

step(449)
add(done(ac_find_links(s4), [links(s4, l0, val0, val4, RW), links(s4, l0, val0, val1, Wi), links(s4, l0, val1, val3, Os), links(s4, l0, val2, val3, AN), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL)], s4))  1279  []
add(link(s4, val2, val3, AN))  1278  []
add(link(s4, val1, val3, Os))  1277  []
add(now(449))  1276  []
delete(doing(ac_find_links(s4), [links(s4, l0, val0, val4, RW), links(s4, l0, val0, val1, Wi), links(s4, l0, val1, val3, Os), links(s4, l0, val2, val3, AN), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL)], s4))  1270  []
delete(now(448))  1274  []
End of Step----------------------------------

step(450)
add(done(ac_main_verb(s4), [verb(s4, val1), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL)], s4))  1282  []
add(main_verb(s4, display))  1281  []
add(now(450))  1280  []
delete(doing(ac_main_verb(s4), [verb(s4, val1), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL)], s4))  1273  []
delete(now(449))  1276  []
End of Step----------------------------------

step(451)
add(now(451))  1284  []
add(call(ac_find_command(s4), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), main_verb(s4, display)], s4))  1283  [[54,1281]]
delete(now(450))  1280  []
End of Step----------------------------------

step(452)
add(now(452))  1286  []
add(doing(ac_find_command(s4), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), main_verb(s4, display)], s4))  1285  []
delete(now(451))  1284  []
End of Step----------------------------------

step(453)
add(domain_command(s4, display, display))  1288  []
add(now(453))  1287  []
delete(now(452))  1286  []
End of Step----------------------------------

step(454)
add(done(ac_find_command(s4), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), main_verb(s4, display)], s4))  1290  []
add(now(454))  1289  []
delete(doing(ac_find_command(s4), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), main_verb(s4, display)], s4))  1285  []
delete(now(453))  1287  []
End of Step----------------------------------

step(455)
add(now(455))  1292  []
add(satisfiedallneeds(s4))  1291  [[56,1290]]
delete(now(454))  1289  []
End of Step----------------------------------

step(456)
add(now(456))  1294  []
add(call(ac_find_intention(s4, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s4, val0, val1, Wi), link(s4, val1, val3, Os), link(s4, val2, val3, AN), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), verb(s4, val1)], s4))  1293  [[58,1291,1288]]
delete(now(455))  1292  []
End of Step----------------------------------

step(457)
add(now(457))  1296  []
add(doing(ac_find_intention(s4, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s4, val0, val1, Wi), link(s4, val1, val3, Os), link(s4, val2, val3, AN), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), verb(s4, val1)], s4))  1295  []
delete(now(456))  1294  []
End of Step----------------------------------

step(458)
add(error(s4, EXTRA_LINK, [val2, val3, AN]))  1298  []
add(now(458))  1297  []
delete(now(457))  1296  []
End of Step----------------------------------

step(459)
add(now(459))  1300  []
add(need(s4, [fix_xlink, val2, val3, AN]))  1299  [[65,1298]]
delete(now(458))  1297  []
End of Step----------------------------------

step(460)
add(not(satisfiedallneeds(s4)))  1301  [[68,1299,1291]]
add(done(ac_find_intention(s4, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s4, val0, val1, Wi), link(s4, val1, val3, Os), link(s4, val2, val3, AN), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), verb(s4, val1)], s4))  1322  []
add(error(LINK_NF, s4, [D]))  1321  []
add(now(460))  1320  []
add(call(ac_think(s4, [fix_xlink, val2, val3, AN]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val0, val1, Wi), link(s4, val1, val3, Os), link(s4, val2, val3, AN), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1302  [[82,1299,31]]
delete(doing(ac_find_intention(s4, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s4, val0, val1, Wi), link(s4, val1, val3, Os), link(s4, val2, val3, AN), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), verb(s4, val1)], s4))  1295  []
delete(now(459))  1300  []
End of Step----------------------------------

step(461)
add(now(461))  1327  []
add(doing(ac_think(s4, [fix_xlink, val2, val3, AN]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val0, val1, Wi), link(s4, val1, val3, Os), link(s4, val2, val3, AN), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1326  []
add(contra(1301, 1291, 460))  1323  [[1301,1291]]
add(distrusted(1301, 460))  1325  [[1291]]
add(distrusted(1291, 460))  1324  [[1301]]
delete(now(460))  1320  []
End of Step----------------------------------

step(462)
add(link(s4, val1, val2, O))  1330  []
add(now(462))  1329  []
add(not(satisfiedallneeds(s4)))  1328  [[96,1323]]
delete(now(461))  1327  []
End of Step----------------------------------

step(463)
add(done(ac_think(s4, [fix_xlink, val2, val3, AN]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val0, val1, Wi), link(s4, val1, val3, Os), link(s4, val2, val3, AN), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1333  []
add(link(s4, val3, val2, D))  1332  []
add(now(463))  1331  []
delete(doing(ac_think(s4, [fix_xlink, val2, val3, AN]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val0, val1, Wi), link(s4, val1, val3, Os), link(s4, val2, val3, AN), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1326  []
delete(link(s4, val2, val3, AN))  1278  []
delete(link(s4, val1, val3, Os))  1277  []
delete(link(s4, val0, val1, Wi))  1275  []
delete(now(462))  1329  []
End of Step----------------------------------

step(464)
add(now(464))  1335  []
add(call(ac_think(s4, [fix_xlink, val2, val3, AN]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1334  [[81,1333,1299]]
delete(now(463))  1331  []
End of Step----------------------------------

step(465)
add(now(465))  1337  []
add(doing(ac_think(s4, [fix_xlink, val2, val3, AN]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1336  []
delete(now(464))  1335  []
End of Step----------------------------------

step(466)
add(satisfied(s4, [fix_xlink, val2, val3, AN]))  1339  []
add(now(466))  1338  []
delete(now(465))  1337  []
End of Step----------------------------------

step(467)
add(done(ac_think(s4, [fix_xlink, val2, val3, AN]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1341  []
add(now(467))  1340  []
delete(doing(ac_think(s4, [fix_xlink, val2, val3, AN]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1336  []
delete(now(466))  1338  []
End of Step----------------------------------

step(468)
add(satisfiedallneeds(s4))  1342  [[66,1341]]
add(now(468))  1344  []
delete(now(467))  1340  []
End of Step----------------------------------

step(469)
add(now(469))  1350  []
add(distrusted(1343, 468))  1349  [[1328]]
add(contra(1343, 1328, 468))  1348  [[1343,1328]]
add(contra(1342, 1328, 468))  1345  [[1342,1328]]
add(distrusted(1342, 468))  1347  [[1328]]
add(distrusted(1328, 468))  1346  [[1342]]
delete(now(468))  1344  []
End of Step----------------------------------

step(470)
add(now(470))  1353  []
add(satisfiedallneeds(s4))  1351  [[96,1345]]
delete(now(469))  1350  []
End of Step----------------------------------

step(471)
add(now(471))  1355  []
add(call(ac_find_intention(s4, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s4, val1, val2, O), link(s4, val3, val2, D), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), verb(s4, val1)], s4))  1354  [[58,1351,1288]]
delete(now(470))  1353  []
End of Step----------------------------------

step(472)
add(now(472))  1357  []
add(doing(ac_find_intention(s4, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s4, val1, val2, O), link(s4, val3, val2, D), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), verb(s4, val1)], s4))  1356  []
delete(now(471))  1355  []
End of Step----------------------------------

step(473)
add(error(s4, Item_NF, [display_type, menu]))  1359  []
add(now(473))  1358  []
delete(now(472))  1357  []
End of Step----------------------------------

step(474)
add(now(474))  1361  []
add(need(s4, [disambiguate, menu, display_type]))  1360  [[63,1359]]
delete(now(473))  1358  []
End of Step----------------------------------

step(475)
add(not(satisfiedallneeds(s4)))  1362  [[68,1360,1343]]
add(done(ac_find_intention(s4, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s4, val1, val2, O), link(s4, val3, val2, D), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), verb(s4, val1)], s4))  1389  []
add(type(s4, v2, display_type))  1388  []
add(val(s4, v2, val2))  1387  []
add(error(s4, Item_NF, [all, chipotle]))  1385  []
add(now(475))  1384  []
add(call(ac_think(s4, [disambiguate, menu, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1364  [[81,1360,1333]]
delete(doing(ac_find_intention(s4, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s4, val1, val2, O), link(s4, val3, val2, D), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), verb(s4, val1)], s4))  1356  []
delete(now(474))  1361  []
End of Step----------------------------------

step(476)
add(now(476))  1397  []
add(need(s4, [disambiguate, chipotle, all]))  1396  [[63,1385]]
add(doing(ac_think(s4, [disambiguate, menu, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1395  []
add(distrusted(1363, 475))  1394  [[1351]]
add(contra(1363, 1351, 475))  1393  [[1363,1351]]
add(contra(1362, 1351, 475))  1390  [[1362,1351]]
add(distrusted(1362, 475))  1392  [[1351]]
add(distrusted(1351, 475))  1391  [[1362]]
delete(now(475))  1384  []
End of Step----------------------------------

step(477)
add(done(ac_think(s4, [disambiguate, menu, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1422  []
add(now(477))  1421  []
add(call(ac_think(s4, [disambiguate, chipotle, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1401  [[81,1396,1333]]
add(not(satisfiedallneeds(s4)))  1398  [[96,1390]]
delete(doing(ac_think(s4, [disambiguate, menu, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1395  []
delete(now(476))  1397  []
End of Step----------------------------------

step(478)
add(now(478))  1427  []
add(need(s4, [equil, menu, display_type]))  1426  [[85,1422]]
add(call(ac_think(s4, [disambiguate, chipotle, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1425  [[81,1422,1396]]
add(call(ac_think(s4, [disambiguate, menu, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1424  [[81,1422,1360]]
add(doing(ac_think(s4, [disambiguate, chipotle, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1423  []
delete(now(477))  1421  []
End of Step----------------------------------

step(479)
add(done(ac_think(s4, [disambiguate, chipotle, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1453  []
add(now(479))  1452  []
add(call(ac_think(s4, [equil, menu, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1431  [[81,1426,1333]]
add(doing(ac_think(s4, [disambiguate, menu, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1429  []
add(doing(ac_think(s4, [disambiguate, chipotle, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1428  []
delete(doing(ac_think(s4, [disambiguate, chipotle, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1423  []
delete(now(478))  1427  []
End of Step----------------------------------

step(480)
add(done(ac_think(s4, [disambiguate, menu, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1458  []
add(now(480))  1457  []
add(need(s4, [equil, chipotle, all]))  1456  [[85,1453]]
add(call(ac_think(s4, [equil, menu, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1455  [[81,1453,1426]]
add(doing(ac_think(s4, [equil, menu, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1454  []
delete(doing(ac_think(s4, [disambiguate, chipotle, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1428  []
delete(doing(ac_think(s4, [disambiguate, menu, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1429  []
delete(now(479))  1452  []
End of Step----------------------------------

step(481)
add(done(ac_think(s4, [equil, menu, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1488  []
add(now(481))  1487  []
add(call(ac_think(s4, [equil, chipotle, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1462  [[81,1456,1333]]
add(doing(ac_think(s4, [equil, menu, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1460  []
delete(doing(ac_think(s4, [equil, menu, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1454  []
delete(now(480))  1457  []
End of Step----------------------------------

step(482)
add(now(482))  1492  []
add(call(ac_ask(s4, [equil, menu, display_type]), , s4))  1491  [[86,1488]]
add(call(ac_think(s4, [equil, chipotle, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1490  [[81,1488,1456]]
add(doing(ac_think(s4, [equil, chipotle, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1489  []
delete(doing(ac_think(s4, [equil, menu, display_type]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1460  []
delete(now(481))  1487  []
End of Step----------------------------------

step(483)
add(done(ac_think(s4, [equil, chipotle, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1497  []
add(now(483))  1496  []
add(doing(ac_think(s4, [equil, chipotle, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1495  []
add(doing(ac_ask(s4, [equil, menu, display_type]), , s4))  1494  []
delete(doing(ac_think(s4, [equil, chipotle, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1489  []
delete(now(482))  1492  []
End of Step----------------------------------

step(484)
add(done(ac_ask(s4, [equil, menu, display_type]), , s4))  1501  []
add(now(484))  1499  []
add(call(ac_ask(s4, [equil, chipotle, all]), , s4))  1498  [[86,1497]]
delete(doing(ac_ask(s4, [equil, menu, display_type]), , s4))  1494  []
delete(doing(ac_think(s4, [equil, chipotle, all]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s4, val1), type(s4, v2, display_type), val(s4, v2, val2), value_of(s4, val0, LEFT-WALL), value_of(s4, val1, display), value_of(s4, val2, menu), value_of(s4, val3, chipotle), value_of(s4, val4, RIGHT-WALL), link(s4, val1, val2, O), link(s4, val3, val2, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s4))  1495  []
delete(now(483))  1496  []
End of Step----------------------------------

step(485)
add(now(485))  1504  []
add(expect(s4, [equil, menu, display_type]))  1503  [[89,1501]]
add(doing(ac_ask(s4, [equil, chipotle, all]), , s4))  1502  []
delete(now(484))  1499  []
End of Step----------------------------------

step(486)
add(done(ac_ask(s4, [equil, chipotle, all]), , s4))  1507  []
add(now(486))  1506  []
add(update_expect_list([[[s3, [equil, chipotle, display_type]], [s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]], [[s4, [equil, menu, display_type]], [s3, [equil, chipotle, display_type]], [s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]))  1505  [[90,1503,1175]]
delete(expect_list([[s3, [equil, chipotle, display_type]], [s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]))  1175  [[93,1173]]
delete(update_expect_list([[[s3, [equil, chipotle, display_type]], [s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]], [[s4, [equil, menu, display_type]], [s3, [equil, chipotle, display_type]], [s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]))  1505  [[90,1503,1175]]
delete(doing(ac_ask(s4, [equil, chipotle, all]), , s4))  1502  []
delete(now(485))  1504  []
End of Step----------------------------------

step(487)
add(now(487))  1510  []
add(expect(s4, [equil, chipotle, all]))  1509  [[89,1507]]
add(expect_list([[s4, [equil, menu, display_type]], [s3, [equil, chipotle, display_type]], [s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]))  1508  [[93,1505]]
delete(now(486))  1506  []
End of Step----------------------------------

step(488)
add(now(488))  1513  []
add(update_expect_list([[[s4, [equil, menu, display_type]], [s3, [equil, chipotle, display_type]], [s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]], [[s4, [equil, chipotle, all]], [s4, [equil, menu, display_type]], [s3, [equil, chipotle, display_type]], [s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]))  1511  [[90,1508,1509]]
delete(expect_list([[s4, [equil, menu, display_type]], [s3, [equil, chipotle, display_type]], [s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]))  1508  [[93,1505]]
delete(update_expect_list([[[s4, [equil, menu, display_type]], [s3, [equil, chipotle, display_type]], [s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]], [[s4, [equil, chipotle, all]], [s4, [equil, menu, display_type]], [s3, [equil, chipotle, display_type]], [s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]))  1511  [[90,1509,1508],[90,1508,1509]]
delete(now(487))  1510  []
End of Step----------------------------------

step(489)
add(now(489))  1515  []
add(expect_list([[s4, [equil, chipotle, all]], [s4, [equil, menu, display_type]], [s3, [equil, chipotle, display_type]], [s2, [equil, menu, all]], [s2, [equil, chinese, display_type]]]))  1514  [[93,1511]]
delete(now(488))  1513  []
End of Step----------------------------------

step(490)
add(idling(490))  1517  []
add(now(490))  1516  []
delete(now(489))  1515  []
End of Step----------------------------------

step(491)
add(idling(491))  1519  []
add(now(491))  1518  []
delete(now(490))  1516  []
End of Step----------------------------------

step(492)
add(idling(492))  1521  []
add(now(492))  1520  []
delete(now(491))  1518  []
End of Step----------------------------------

step(493)
add(idling(493))  1523  []
add(now(493))  1522  []
delete(now(492))  1520  []
End of Step----------------------------------

step(494)
add(idling(494))  1525  []
add(now(494))  1524  []
delete(now(493))  1522  []
End of Step----------------------------------

step(495)
add(idling(495))  1527  []
add(now(495))  1526  []
delete(now(494))  1524  []
End of Step----------------------------------

step(496)
add(idling(496))  1529  []
add(now(496))  1528  []
delete(now(495))  1526  []
End of Step----------------------------------

step(497)
add(idling(497))  1531  []
add(now(497))  1530  []
delete(now(496))  1528  []
End of Step----------------------------------

step(498)
add(idling(498))  1533  []
add(now(498))  1532  []
delete(now(497))  1530  []
End of Step----------------------------------

step(499)
add(idling(499))  1535  []
add(now(499))  1534  []
delete(now(498))  1532  []
End of Step----------------------------------

step(500)
add(idling(500))  1537  []
add(now(500))  1536  []
delete(now(499))  1534  []
End of Step----------------------------------

step(501)
add(idling(501))  1539  []
add(now(501))  1538  []
delete(now(500))  1536  []
End of Step----------------------------------

step(502)
add(idling(502))  1541  []
add(now(502))  1540  []
delete(now(501))  1538  []
End of Step----------------------------------

step(503)
add(idling(503))  1543  []
add(now(503))  1542  []
delete(now(502))  1540  []
End of Step----------------------------------

step(504)
add(idling(504))  1545  []
add(now(504))  1544  []
delete(now(503))  1542  []
End of Step----------------------------------

step(505)
add(idling(505))  1547  []
add(now(505))  1546  []
delete(now(504))  1544  []
End of Step----------------------------------

step(506)
add(idling(506))  1549  []
add(now(506))  1548  []
delete(now(505))  1546  []
End of Step----------------------------------

step(507)
add(idling(507))  1551  []
add(now(507))  1550  []
delete(now(506))  1548  []
End of Step----------------------------------

step(508)
add(idling(508))  1553  []
add(now(508))  1552  []
delete(now(507))  1550  []
End of Step----------------------------------

step(509)
add(idling(509))  1555  []
add(now(509))  1554  []
delete(now(508))  1552  []
End of Step----------------------------------

step(510)
add(idling(510))  1557  []
add(now(510))  1556  []
delete(now(509))  1554  []
End of Step----------------------------------

step(511)
add(idling(511))  1559  []
add(now(511))  1558  []
delete(now(510))  1556  []
End of Step----------------------------------

step(512)
add(idling(512))  1561  []
add(now(512))  1560  []
delete(now(511))  1558  []
End of Step----------------------------------

step(513)
add(idling(513))  1563  []
add(now(513))  1562  []
delete(now(512))  1560  []
End of Step----------------------------------

step(514)
add(idling(514))  1565  []
add(now(514))  1564  []
delete(now(513))  1562  []
End of Step----------------------------------

step(515)
add(idling(515))  1567  []
add(now(515))  1566  []
delete(now(514))  1564  []
End of Step----------------------------------

step(516)
add(idling(516))  1569  []
add(now(516))  1568  []
delete(now(515))  1566  []
End of Step----------------------------------

step(517)
add(idling(517))  1571  []
add(now(517))  1570  []
delete(now(516))  1568  []
End of Step----------------------------------

step(518)
add(idling(518))  1573  []
add(now(518))  1572  []
delete(now(517))  1570  []
End of Step----------------------------------

step(519)
add(idling(519))  1575  []
add(now(519))  1574  []
delete(now(518))  1572  []
End of Step----------------------------------

step(520)
add(idling(520))  1577  []
add(now(520))  1576  []
delete(now(519))  1574  []
End of Step----------------------------------

step(521)
add(idling(521))  1579  []
add(now(521))  1578  []
delete(now(520))  1576  []
End of Step----------------------------------

step(522)
add(idling(522))  1581  []
add(now(522))  1580  []
delete(now(521))  1578  []
End of Step----------------------------------

step(523)
add(idling(523))  1583  []
add(now(523))  1582  []
delete(now(522))  1580  []
End of Step----------------------------------

step(524)
add(idling(524))  1585  []
add(now(524))  1584  []
delete(now(523))  1582  []
End of Step----------------------------------

step(525)
add(idling(525))  1587  []
add(now(525))  1586  []
delete(now(524))  1584  []
End of Step----------------------------------

step(526)
add(idling(526))  1589  []
add(now(526))  1588  []
delete(now(525))  1586  []
End of Step----------------------------------

step(527)
add(idling(527))  1591  []
add(now(527))  1590  []
delete(now(526))  1588  []
End of Step----------------------------------

step(528)
add(idling(528))  1593  []
add(now(528))  1592  []
delete(now(527))  1590  []
End of Step----------------------------------

step(529)
add(idling(529))  1595  []
add(now(529))  1594  []
delete(now(528))  1592  []
End of Step----------------------------------

step(530)
add(idling(530))  1597  []
add(now(530))  1596  []
delete(now(529))  1594  []
End of Step----------------------------------

step(531)
add(idling(531))  1599  []
add(now(531))  1598  []
delete(now(530))  1596  []
End of Step----------------------------------

step(532)
add(idling(532))  1601  []
add(now(532))  1600  []
delete(now(531))  1598  []
End of Step----------------------------------

step(533)
add(idling(533))  1603  []
add(now(533))  1602  []
delete(now(532))  1600  []
End of Step----------------------------------

step(534)
add(idling(534))  1605  []
add(now(534))  1604  []
delete(now(533))  1602  []
End of Step----------------------------------

step(535)
add(idling(535))  1607  []
add(now(535))  1606  []
delete(now(534))  1604  []
End of Step----------------------------------

step(536)
add(idling(536))  1609  []
add(now(536))  1608  []
delete(now(535))  1606  []
End of Step----------------------------------

step(537)
add(idling(537))  1611  []
add(now(537))  1610  []
delete(now(536))  1608  []
End of Step----------------------------------

step(538)
add(idling(538))  1613  []
add(now(538))  1612  []
delete(now(537))  1610  []
End of Step----------------------------------

step(539)
add(idling(539))  1615  []
add(now(539))  1614  []
delete(now(538))  1612  []
End of Step----------------------------------

step(540)
add(idling(540))  1617  []
add(now(540))  1616  []
delete(now(539))  1614  []
End of Step----------------------------------

step(541)
add(idling(541))  1619  []
add(now(541))  1618  []
delete(now(540))  1616  []
End of Step----------------------------------

step(542)
add(idling(542))  1621  []
add(now(542))  1620  []
delete(now(541))  1618  []
End of Step----------------------------------

step(543)
add(idling(543))  1623  []
add(now(543))  1622  []
delete(now(542))  1620  []
End of Step----------------------------------

step(544)
add(idling(544))  1625  []
add(now(544))  1624  []
delete(now(543))  1622  []
End of Step----------------------------------

step(545)
add(idling(545))  1627  []
add(now(545))  1626  []
delete(now(544))  1624  []
End of Step----------------------------------

step(546)
add(idling(546))  1629  []
add(now(546))  1628  []
delete(now(545))  1626  []
End of Step----------------------------------

step(547)
add(idling(547))  1631  []
add(now(547))  1630  []
delete(now(546))  1628  []
End of Step----------------------------------

step(548)
add(idling(548))  1633  []
add(now(548))  1632  []
delete(now(547))  1630  []
End of Step----------------------------------

step(549)
add(idling(549))  1635  []
add(now(549))  1634  []
delete(now(548))  1632  []
End of Step----------------------------------

step(550)
add(idling(550))  1637  []
add(now(550))  1636  []
delete(now(549))  1634  []
End of Step----------------------------------

step(551)
add(idling(551))  1639  []
add(now(551))  1638  []
delete(now(550))  1636  []
End of Step----------------------------------

step(552)
add(idling(552))  1641  []
add(now(552))  1640  []
delete(now(551))  1638  []
End of Step----------------------------------

step(553)
add(idling(553))  1643  []
add(now(553))  1642  []
delete(now(552))  1640  []
End of Step----------------------------------

step(554)
add(idling(554))  1645  []
add(now(554))  1644  []
delete(now(553))  1642  []
End of Step----------------------------------

step(555)
add(idling(555))  1647  []
add(now(555))  1646  []
delete(now(554))  1644  []
End of Step----------------------------------

step(556)
add(idling(556))  1649  []
add(now(556))  1648  []
delete(now(555))  1646  []
End of Step----------------------------------

step(557)
add(idling(557))  1651  []
add(now(557))  1650  []
delete(now(556))  1648  []
End of Step----------------------------------

step(558)
add(idling(558))  1653  []
add(now(558))  1652  []
delete(now(557))  1650  []
End of Step----------------------------------

step(559)
add(utterance(s5))  1655  []
add(now(559))  1654  []
delete(now(558))  1652  []
End of Step----------------------------------

step(560)
add(now(560))  1659  []
add(response(s4, [equil, chipotle, all], s5))  1658  [[41,1655,1509]]
add(response(s4, [equil, menu, display_type], s5))  1657  [[41,1655,1503]]
add(update_utt_list(s5, [s4, s3, s2, s1]))  1656  [[39,1655,1252]]
delete(utt_list([s4, s3, s2, s1]))  1252  [[40,1249]]
delete(now(559))  1654  []
End of Step----------------------------------

step(561)
add(now(561))  1661  []
add(utt_list([s5, s4, s3, s2, s1]))  1660  [[40,1656]]
delete(now(560))  1659  []
End of Step----------------------------------

step(562)
add(end_of_parse(s5))  1674  []
add(verb(s5, val1))  1673  []
add(links(s5, l0, val2, val3, A))  1672  []
add(links(s5, l0, val1, val3, Op))  1671  []
add(links(s5, l0, val0, val1, Wi))  1670  []
add(links(s5, l0, val0, val4, RW))  1669  []
add(value_of(s5, val4, RIGHT-WALL))  1668  []
add(value_of(s5, val3, restaurants))  1667  []
add(value_of(s5, val2, chinese))  1666  []
add(value_of(s5, val1, display))  1665  []
add(value_of(s5, val0, LEFT-WALL))  1664  []
add(unused_cost(s5, l0, 0))  1663  []
add(now(562))  1662  []
delete(now(561))  1661  []
End of Step----------------------------------

step(563)
add(now(563))  1677  []
add(call(ac_find_links(s5), [links(s5, l0, val0, val4, RW), links(s5, l0, val0, val1, Wi), links(s5, l0, val1, val3, Op), links(s5, l0, val2, val3, A), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL)], s5))  1676  [[42,1674]]
add(parsed(s5))  1675  [[51,1663]]
delete(now(562))  1662  []
End of Step----------------------------------

step(564)
add(now(564))  1680  []
add(call(ac_main_verb(s5), [verb(s5, val1), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL)], s5))  1679  [[52,1675,1673]]
add(doing(ac_find_links(s5), [links(s5, l0, val0, val4, RW), links(s5, l0, val0, val1, Wi), links(s5, l0, val1, val3, Op), links(s5, l0, val2, val3, A), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL)], s5))  1678  []
delete(now(563))  1677  []
End of Step----------------------------------

step(565)
add(link(s5, val0, val1, Wi))  1683  []
add(now(565))  1682  []
add(doing(ac_main_verb(s5), [verb(s5, val1), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL)], s5))  1681  []
delete(now(564))  1680  []
End of Step----------------------------------

step(566)
add(done(ac_find_links(s5), [links(s5, l0, val0, val4, RW), links(s5, l0, val0, val1, Wi), links(s5, l0, val1, val3, Op), links(s5, l0, val2, val3, A), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL)], s5))  1687  []
add(link(s5, val2, val3, A))  1686  []
add(link(s5, val1, val3, Op))  1685  []
add(now(566))  1684  []
delete(doing(ac_find_links(s5), [links(s5, l0, val0, val4, RW), links(s5, l0, val0, val1, Wi), links(s5, l0, val1, val3, Op), links(s5, l0, val2, val3, A), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL)], s5))  1678  []
delete(now(565))  1682  []
End of Step----------------------------------

step(567)
add(done(ac_main_verb(s5), [verb(s5, val1), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL)], s5))  1690  []
add(main_verb(s5, display))  1689  []
add(now(567))  1688  []
delete(doing(ac_main_verb(s5), [verb(s5, val1), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL)], s5))  1681  []
delete(now(566))  1684  []
End of Step----------------------------------

step(568)
add(now(568))  1692  []
add(call(ac_find_command(s5), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), main_verb(s5, display)], s5))  1691  [[54,1689]]
delete(now(567))  1688  []
End of Step----------------------------------

step(569)
add(now(569))  1694  []
add(doing(ac_find_command(s5), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), main_verb(s5, display)], s5))  1693  []
delete(now(568))  1692  []
End of Step----------------------------------

step(570)
add(domain_command(s5, display, display))  1696  []
add(now(570))  1695  []
delete(now(569))  1694  []
End of Step----------------------------------

step(571)
add(done(ac_find_command(s5), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), main_verb(s5, display)], s5))  1698  []
add(now(571))  1697  []
delete(doing(ac_find_command(s5), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), main_verb(s5, display)], s5))  1693  []
delete(now(570))  1695  []
End of Step----------------------------------

step(572)
add(now(572))  1700  []
add(satisfiedallneeds(s5))  1699  [[56,1698]]
delete(now(571))  1697  []
End of Step----------------------------------

step(573)
add(now(573))  1702  []
add(call(ac_find_intention(s5, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s5, val0, val1, Wi), link(s5, val1, val3, Op), link(s5, val2, val3, A), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), verb(s5, val1)], s5))  1701  [[58,1699,1696]]
delete(now(572))  1700  []
End of Step----------------------------------

step(574)
add(now(574))  1704  []
add(doing(ac_find_intention(s5, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s5, val0, val1, Wi), link(s5, val1, val3, Op), link(s5, val2, val3, A), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), verb(s5, val1)], s5))  1703  []
delete(now(573))  1702  []
End of Step----------------------------------

step(575)
add(error(s5, EXTRA_LINK, [val2, val3, A]))  1706  []
add(now(575))  1705  []
delete(now(574))  1704  []
End of Step----------------------------------

step(576)
add(now(576))  1708  []
add(need(s5, [fix_xlink, val2, val3, A]))  1707  [[65,1706]]
delete(now(575))  1705  []
End of Step----------------------------------

step(577)
add(not(satisfiedallneeds(s5)))  1709  [[68,1707,1699]]
add(done(ac_find_intention(s5, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s5, val0, val1, Wi), link(s5, val1, val3, Op), link(s5, val2, val3, A), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), verb(s5, val1)], s5))  1730  []
add(error(LINK_NF, s5, [D]))  1729  []
add(now(577))  1728  []
add(call(ac_think(s5, [fix_xlink, val2, val3, A]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s5, val1), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), link(s5, val0, val1, Wi), link(s5, val1, val3, Op), link(s5, val2, val3, A), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s5))  1710  [[82,1707,31]]
delete(doing(ac_find_intention(s5, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s5, val0, val1, Wi), link(s5, val1, val3, Op), link(s5, val2, val3, A), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), verb(s5, val1)], s5))  1703  []
delete(now(576))  1708  []
End of Step----------------------------------

step(578)
add(now(578))  1735  []
add(doing(ac_think(s5, [fix_xlink, val2, val3, A]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s5, val1), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), link(s5, val0, val1, Wi), link(s5, val1, val3, Op), link(s5, val2, val3, A), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s5))  1734  []
add(contra(1709, 1699, 577))  1731  [[1709,1699]]
add(distrusted(1709, 577))  1733  [[1699]]
add(distrusted(1699, 577))  1732  [[1709]]
delete(now(577))  1728  []
End of Step----------------------------------

step(579)
add(now(579))  1737  []
add(not(satisfiedallneeds(s5)))  1736  [[96,1731]]
delete(link(s5, val2, val3, A))  1686  []
delete(now(578))  1735  []
End of Step----------------------------------

step(580)
add(done(ac_think(s5, [fix_xlink, val2, val3, A]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s5, val1), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), link(s5, val0, val1, Wi), link(s5, val1, val3, Op), link(s5, val2, val3, A), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s5))  1740  []
add(link(s5, val2, val3, D))  1739  []
add(now(580))  1738  []
delete(doing(ac_think(s5, [fix_xlink, val2, val3, A]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s5, val1), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), link(s5, val0, val1, Wi), link(s5, val1, val3, Op), link(s5, val2, val3, A), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s5))  1734  []
delete(link(s5, val0, val1, Wi))  1683  []
delete(now(579))  1737  []
End of Step----------------------------------

step(581)
add(now(581))  1742  []
add(call(ac_think(s5, [fix_xlink, val2, val3, A]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s5, val1), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), link(s5, val1, val3, Op), link(s5, val2, val3, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s5))  1741  [[81,1740,1707]]
delete(now(580))  1738  []
End of Step----------------------------------

step(582)
add(now(582))  1744  []
add(doing(ac_think(s5, [fix_xlink, val2, val3, A]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s5, val1), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), link(s5, val1, val3, Op), link(s5, val2, val3, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s5))  1743  []
delete(now(581))  1742  []
End of Step----------------------------------

step(583)
add(satisfied(s5, [fix_xlink, val2, val3, A]))  1746  []
add(now(583))  1745  []
delete(now(582))  1744  []
End of Step----------------------------------

step(584)
add(done(ac_think(s5, [fix_xlink, val2, val3, A]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s5, val1), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), link(s5, val1, val3, Op), link(s5, val2, val3, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s5))  1748  []
add(now(584))  1747  []
delete(doing(ac_think(s5, [fix_xlink, val2, val3, A]), [isa(acommand, is), isa(acommand, no), isa(all, all), isa(conjunct, and), isa(cuisine, chinese), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, list), isa(dcommand, mute), isa(dcommand, set), isa(dcommand, stop), isa(display_type, cuisines), isa(display_type, restaurants), isa(food_type, chicken), isa(item_name, pizza), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), verb(s5, val1), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), link(s5, val1, val3, Op), link(s5, val2, val3, D), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), structure(fullscreen, , [[v0, verb]], [v0]), structure(is, [[v0, v1, S], [v1, v2, O]], [[v1, verb]], [equil, v0, v2]), structure(is, [[v0, v1, S], [v1, v3, O], [v2, v3, s^], [v3, v4, s^]], [[v1, verb], [v3, conjunct]], [compose, v0, v2, v4]), structure(is, [[v0, v4, X], [v0, v1, W], [v1, v2, S], [v2, v3, O]], [[v0, lw], [v1, qnword], [v2, verb], [v4, qnmark]], [what, v3]), structure(list, , [[v0, verb]], [v0]), structure(list, [[v0, v1, O]], [[v0, verb]], [v0]), structure(mute, , [[v0, verb]], [v0]), structure(no, , , [undo]), structure(play, [[v0, v1, O], [v0, v3, O]], [[v0, verb], [v1, movie], [v2, conjunct], [v3, movie]], [v0, v1, v3]), structure(set, [[v0, v1, O], [v0, v2, MV], [v2, v3, J]], [[v0, verb], [v1, parameter], [v2, end], [v3, number]], [v0, v1, v3]), structure(stop, , [[v0, verb]], [v0])], s5))  1743  []
delete(now(583))  1745  []
End of Step----------------------------------

step(585)
add(satisfiedallneeds(s5))  1749  [[66,1748]]
add(now(585))  1751  []
delete(now(584))  1747  []
End of Step----------------------------------

step(586)
add(now(586))  1757  []
add(distrusted(1750, 585))  1756  [[1736]]
add(contra(1750, 1736, 585))  1755  [[1750,1736]]
add(contra(1749, 1736, 585))  1752  [[1749,1736]]
add(distrusted(1749, 585))  1754  [[1736]]
add(distrusted(1736, 585))  1753  [[1749]]
delete(now(585))  1751  []
End of Step----------------------------------

step(587)
add(now(587))  1760  []
add(satisfiedallneeds(s5))  1758  [[96,1752]]
delete(now(586))  1757  []
End of Step----------------------------------

step(588)
add(now(588))  1762  []
add(call(ac_find_intention(s5, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s5, val1, val3, Op), link(s5, val2, val3, D), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), verb(s5, val1)], s5))  1761  [[58,1758,1696]]
delete(now(587))  1760  []
End of Step----------------------------------

step(589)
add(now(589))  1764  []
add(doing(ac_find_intention(s5, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s5, val1, val3, Op), link(s5, val2, val3, D), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), verb(s5, val1)], s5))  1763  []
delete(now(588))  1762  []
End of Step----------------------------------

step(590)
add(val(s5, v0, val1))  1766  []
add(now(590))  1765  []
delete(now(589))  1764  []
End of Step----------------------------------

step(591)
add(done(ac_find_intention(s5, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s5, val1, val3, Op), link(s5, val2, val3, D), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), verb(s5, val1)], s5))  1770  []
add(intention(s5, domain, [display, restaurants, chinese]))  1769  []
add(type(s5, v0, verb))  1768  []
add(now(591))  1767  []
delete(doing(ac_find_intention(s5, domain, display), [isa(all, all), isa(display_type, restaurants), isa(display_type, cuisines), isa(item_name, pizza), isa(cuisine, chinese), isa(food_type, chicken), isa(dcommand, display), isa(dcommand, fullscreen), isa(dcommand, stop), isa(dcommand, set), isa(dcommand, list), isa(dcommand, mute), isa(conjunct, and), isa(lw, LEFT-WALL), isa(qnmark, ?), isa(qnword, what), isa(acommand, is), isa(acommand, no), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, all], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, cuisine], [v2, display_type]], [v0, v2, v1]), structure(display, [[v0, v2, O], [v1, v2, D]], [[v0, verb], [v1, food_type], [v2, display_type]], [v0, v2, v1]), link(s5, val1, val3, Op), link(s5, val2, val3, D), value_of(s5, val0, LEFT-WALL), value_of(s5, val1, display), value_of(s5, val2, chinese), value_of(s5, val3, restaurants), value_of(s5, val4, RIGHT-WALL), verb(s5, val1)], s5))  1763  []
delete(now(590))  1765  []
End of Step----------------------------------

step(592)
add(now(592))  1773  []
add(call(ac_action(s5, domain, [5, [display, restaurants, chinese]]), , s5))  1772  [[74,1769]]
add(belief(domain, [display, restaurants, chinese]))  1771  [[69,1769]]
delete(now(591))  1767  []
End of Step----------------------------------

step(593)
add(now(593))  1775  []
add(doing(ac_action(s5, domain, [5, [display, restaurants, chinese]]), , s5))  1774  []
delete(now(592))  1773  []
End of Step----------------------------------

step(594)
add(send_to_domain(s5, 5, [[display, restaurants, chinese]]))  1777  []
add(now(594))  1776  []
delete(now(593))  1775  []
End of Step----------------------------------

step(595)
add(now(595))  1779  []
add(sent_to_domain(s5, 5, [[display, restaurants, chinese]]))  1778  [[78,1777]]
delete(now(594))  1776  []
End of Step----------------------------------

step(596)
add(done(ac_action(s5, domain, [5, [display, restaurants, chinese]]), , s5))  1783  []
add(now(596))  1782  []
add(call(ac_report_action([[display, restaurants, chinese]]), , s5))  1781  [[80,1778]]
add(call(ac_post_process(s5, [[display, restaurants, chinese]]), , s5))  1780  [[79,1778]]
delete(doing(ac_action(s5, domain, [5, [display, restaurants, chinese]]), , s5))  1774  []
delete(now(595))  1779  []
End of Step----------------------------------

step(597)
add(now(597))  1786  []
add(doing(ac_post_process(s5, [[display, restaurants, chinese]]), , s5))  1785  []
add(doing(ac_report_action([[display, restaurants, chinese]]), , s5))  1784  []
delete(now(596))  1782  []
End of Step----------------------------------

step(598)
add(done(ac_report_action([[display, restaurants, chinese]]), , s5))  1789  []
add(done(ac_post_process(s5, [[display, restaurants, chinese]]), , s5))  1788  []
add(now(598))  1787  []
delete(doing(ac_report_action([[display, restaurants, chinese]]), , s5))  1784  []
delete(doing(ac_post_process(s5, [[display, restaurants, chinese]]), , s5))  1785  []
delete(now(597))  1786  []
End of Step----------------------------------

step(599)
add(idling(599))  1791  []
add(now(599))  1790  []
delete(now(598))  1787  []
End of Step----------------------------------

step(600)
add(idling(600))  1793  []
add(now(600))  1792  []
delete(now(599))  1790  []
End of Step----------------------------------

step(601)
add(idling(601))  1795  []
add(now(601))  1794  []
delete(now(600))  1792  []
End of Step----------------------------------

step(602)
add(idling(602))  1797  []
add(now(602))  1796  []
delete(now(601))  1794  []
End of Step----------------------------------

step(603)
add(idling(603))  1799  []
add(now(603))  1798  []
delete(now(602))  1796  []
End of Step----------------------------------

step(604)
add(idling(604))  1801  []
add(now(604))  1800  []
delete(now(603))  1798  []
End of Step----------------------------------

step(605)
add(idling(605))  1803  []
add(now(605))  1802  []
delete(now(604))  1800  []
End of Step----------------------------------

step(606)
add(idling(606))  1805  []
add(now(606))  1804  []
delete(now(605))  1802  []
End of Step----------------------------------

step(607)
add(idling(607))  1807  []
add(now(607))  1806  []
delete(now(606))  1804  []
End of Step----------------------------------

step(608)
add(idling(608))  1809  []
add(now(608))  1808  []
delete(now(607))  1806  []
End of Step----------------------------------

step(609)
add(idling(609))  1811  []
add(now(609))  1810  []
delete(now(608))  1808  []
End of Step----------------------------------

step(610)
add(idling(610))  1813  []
add(now(610))  1812  []
delete(now(609))  1810  []
End of Step----------------------------------

step(611)
add(idling(611))  1815  []
add(now(611))  1814  []
delete(now(610))  1812  []
End of Step----------------------------------

step(612)
add(idling(612))  1817  []
add(now(612))  1816  []
delete(now(611))  1814  []
End of Step----------------------------------

step(613)
add(idling(613))  1819  []
add(now(613))  1818  []
delete(now(612))  1816  []
End of Step----------------------------------

step(614)
add(idling(614))  1821  []
add(now(614))  1820  []
delete(now(613))  1818  []
End of Step----------------------------------

step(615)
add(idling(615))  1823  []
add(now(615))  1822  []
delete(now(614))  1820  []
End of Step----------------------------------

step(616)
add(idling(616))  1825  []
add(now(616))  1824  []
delete(now(615))  1822  []
End of Step----------------------------------

step(617)
add(idling(617))  1827  []
add(now(617))  1826  []
delete(now(616))  1824  []
End of Step----------------------------------

step(618)
add(idling(618))  1829  []
add(now(618))  1828  []
delete(now(617))  1826  []
End of Step----------------------------------

step(619)
add(idling(619))  1831  []
add(now(619))  1830  []
delete(now(618))  1828  []
End of Step----------------------------------

step(620)
add(idling(620))  1833  []
add(now(620))  1832  []
delete(now(619))  1830  []
End of Step----------------------------------

step(621)
add(idling(621))  1835  []
add(now(621))  1834  []
delete(now(620))  1832  []
End of Step----------------------------------

step(622)
add(idling(622))  1837  []
add(now(622))  1836  []
delete(now(621))  1834  []
End of Step----------------------------------

step(623)
add(idling(623))  1839  []
add(now(623))  1838  []
delete(now(622))  1836  []
End of Step----------------------------------

step(624)
add(idling(624))  1841  []
add(now(624))  1840  []
delete(now(623))  1838  []
End of Step----------------------------------

step(625)
add(idling(625))  1843  []
add(now(625))  1842  []
delete(now(624))  1840  []
End of Step----------------------------------

step(626)
add(idling(626))  1845  []
add(now(626))  1844  []
delete(now(625))  1842  []
End of Step----------------------------------

step(627)
add(idling(627))  1847  []
add(now(627))  1846  []
delete(now(626))  1844  []
End of Step----------------------------------

step(628)
add(idling(628))  1849  []
add(now(628))  1848  []
delete(now(627))  1846  []
End of Step----------------------------------

step(629)
add(idling(629))  1851  []
add(now(629))  1850  []
delete(now(628))  1848  []
End of Step----------------------------------

step(630)
add(idling(630))  1853  []
add(now(630))  1852  []
delete(now(629))  1850  []
End of Step----------------------------------

step(631)
add(idling(631))  1855  []
add(now(631))  1854  []
delete(now(630))  1852  []
End of Step----------------------------------

step(632)
add(idling(632))  1857  []
add(now(632))  1856  []
delete(now(631))  1854  []
End of Step----------------------------------

step(633)
add(idling(633))  1859  []
add(now(633))  1858  []
delete(now(632))  1856  []
End of Step----------------------------------

step(634)
add(idling(634))  1861  []
add(now(634))  1860  []
delete(now(633))  1858  []
End of Step----------------------------------

step(635)
add(idling(635))  1863  []
add(now(635))  1862  []
delete(now(634))  1860  []
End of Step----------------------------------

step(636)
add(idling(636))  1865  []
add(now(636))  1864  []
delete(now(635))  1862  []
End of Step----------------------------------

step(637)
add(idling(637))  1867  []
add(now(637))  1866  []
delete(now(636))  1864  []
End of Step----------------------------------

step(638)
add(idling(638))  1869  []
add(now(638))  1868  []
delete(now(637))  1866  []
End of Step----------------------------------

step(639)
add(idling(639))  1871  []
add(now(639))  1870  []
delete(now(638))  1868  []
End of Step----------------------------------

step(640)
add(idling(640))  1873  []
add(now(640))  1872  []
delete(now(639))  1870  []
End of Step----------------------------------

step(641)
add(idling(641))  1875  []
add(now(641))  1874  []
delete(now(640))  1872  []
End of Step----------------------------------

step(642)
add(idling(642))  1877  []
add(now(642))  1876  []
delete(now(641))  1874  []
End of Step----------------------------------

step(643)
add(idling(643))  1879  []
add(now(643))  1878  []
delete(now(642))  1876  []
End of Step----------------------------------

step(644)
add(idling(644))  1881  []
add(now(644))  1880  []
delete(now(643))  1878  []
End of Step----------------------------------

step(645)
add(idling(645))  1883  []
add(now(645))  1882  []
delete(now(644))  1880  []
End of Step----------------------------------

step(646)
add(idling(646))  1885  []
add(now(646))  1884  []
delete(now(645))  1882  []
End of Step----------------------------------

step(647)
add(idling(647))  1887  []
add(now(647))  1886  []
delete(now(646))  1884  []
End of Step----------------------------------

step(648)
add(idling(648))  1889  []
add(now(648))  1888  []
delete(now(647))  1886  []
End of Step----------------------------------

step(649)
add(idling(649))  1891  []
add(now(649))  1890  []
delete(now(648))  1888  []
End of Step----------------------------------

step(650)
add(idling(650))  1893  []
add(now(650))  1892  []
delete(now(649))  1890  []
End of Step----------------------------------

step(651)
add(idling(651))  1895  []
add(now(651))  1894  []
delete(now(650))  1892  []
End of Step----------------------------------

step(652)
add(idling(652))  1897  []
add(now(652))  1896  []
delete(now(651))  1894  []
End of Step----------------------------------

step(653)
add(idling(653))  1899  []
add(now(653))  1898  []
delete(now(652))  1896  []
End of Step----------------------------------

step(654)
add(idling(654))  1901  []
add(now(654))  1900  []
delete(now(653))  1898  []
End of Step----------------------------------

step(655)
add(idling(655))  1903  []
add(now(655))  1902  []
delete(now(654))  1900  []
End of Step----------------------------------

step(656)
add(idling(656))  1905  []
add(now(656))  1904  []
delete(now(655))  1902  []
End of Step----------------------------------

step(657)
add(idling(657))  1907  []
add(now(657))  1906  []
delete(now(656))  1904  []
End of Step----------------------------------

step(658)
add(idling(658))  1909  []
add(now(658))  1908  []
delete(now(657))  1906  []
End of Step----------------------------------

step(659)
add(idling(659))  1911  []
add(now(659))  1910  []
delete(now(658))  1908  []
End of Step----------------------------------

step(660)
add(idling(660))  1913  []
add(now(660))  1912  []
delete(now(659))  1910  []
End of Step----------------------------------
