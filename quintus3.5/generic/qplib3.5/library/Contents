activeread	% allow input to be computed.
activeread	- ./activeread.pl
activeread	: active_read/1

add_portray	% let you define clauses for portray in modules.
add_portray	- ./addportray.pl
add_portray	: add_expansion/1
add_portray	: add_linking_clause/3
add_portray	: add_portray/1
add_portray	: del_expansion/1
add_portray	: del_linking_clause/3
add_portray	: del_portray/1

aggregate	% an aggregation operator for data-base-style queries
aggregate	- ./aggregate.pl
aggregate	: aggregate/3
aggregate	: aggregate/4
aggregate	: aggregate_all/3
aggregate	: aggregate_all/4

antiunify	% generalisation
antiunify	- ./antiunify.pl
antiunify	: anti_unify/3
antiunify	: anti_unify/5

arg	+ documented in manual
arg	% some generalisations of arg
arg	- ./arg.pl
arg	: arg0/3
arg	: args/3
arg	: args0/3
arg	: genarg/3
arg	: genarg0/3
arg	: path_arg/3
arg	: project/3

arity	% Support for Arity code translated by arity2quintus
arity	- ./arity.pl
arity	: arity_apology/1
arity	: arity_argrep/4
arity	: arity_command/2
arity	: arity_date/1
arity	: arity_date_day/2
arity	: arity_keys/1
arity	: arity_open/3
arity	: arity_random/1
arity	: arity_randomise/1
arity	: arity_ref/1
arity	: arity_seek/4
arity	: arity_system/1
arity	: arity_time/1
arity	: current_predicate/1
arity	: dec/2
arity	: inc/2
arity	: reset_op/0

aropen	% Reading UNIX archive entries.
aropen	- ./aropen.pl
aropen	: ar_open/3

arrays	% updatable arrays in Prolog.
arrays	- ./arrays.pl
arrays	: array_fetch/3
arrays	: array_length/2
arrays	: array_store/4
arrays	: array_to_list/2
arrays	: list_to_array/2
arrays	: list_to_array/3

ask	+ documented in manual
ask	% ask questions that have a one-character answer.
ask	- ./ask.pl
ask	: ask/2
ask	: ask/3
ask	: ask_between/4
ask	: ask_between/5
ask	: ask_chars/4
ask	: ask_default_character/2
ask	: ask_file/2
ask	: ask_file/3
ask	: ask_number/2
ask	: ask_number/3
ask	: ask_number/4
ask	: ask_number/5
ask	: ask_oneof/3
ask	: ask_oneof/4
ask	: yesno/1
ask	: yesno/2

assoc	% Binary tree implementation of "association lists".
assoc	- ./assoc.pl
assoc	: assoc_to_list/2
assoc	: gen_assoc/3
assoc	: get_assoc/3
assoc	: get_next_assoc/4
assoc	: get_prev_assoc/4
assoc	: is_assoc/1
assoc	: list_to_assoc/2
assoc	: map_assoc/2
assoc	: map_assoc/3
assoc	: max_assoc/3
assoc	: min_assoc/3
assoc	: ord_list_to_assoc/2
assoc	: portray_assoc/1
assoc	: put_assoc/4

avl	% AVL trees in Prolog
avl	- ./avl.pl
avl	: avl_change/5
avl	: avl_domain/2
avl	: avl_fetch/2
avl	: avl_fetch/3
avl	: avl_height/2
avl	: avl_incr/4
avl	: avl_max/2
avl	: avl_max/3
avl	: avl_member/2
avl	: avl_member/3
avl	: avl_min/2
avl	: avl_min/3
avl	: avl_next/3
avl	: avl_next/4
avl	: avl_prev/3
avl	: avl_prev/4
avl	: avl_range/2
avl	: avl_size/2
avl	: avl_store/4
avl	: avl_to_list/2
avl	: empty_avl/1
avl	: is_avl/1
avl	: list_to_avl/2
avl	: ord_list_to_avl/2
avl	: portray_avl/1

bags	% Bag Utilities
bags	- ./bags.pl
bags	: bag_add_element/3
bags	: bag_add_element/4
bags	: bag_del_element/3
bags	: bag_del_element/4
bags	: bag_intersect/2
bags	: bag_intersection/2
bags	: bag_intersection/3
bags	: bag_max/2
bags	: bag_max/3
bags	: bag_min/2
bags	: bag_min/3
bags	: bag_subtract/3
bags	: bag_to_list/2
bags	: bag_to_ord_set/2
bags	: bag_to_ord_set/3
bags	: bag_to_set/2
bags	: bag_to_set/3
bags	: bag_union/2
bags	: bag_union/3
bags	: checkbag/2
bags	: empty_bag/1
bags	: is_bag/1
bags	: length/3
bags	: list_to_bag/2
bags	: make_sub_bag/2
bags	: mapbag/2
bags	: mapbag/3
bags	: member/3
bags	: memberchk/3
bags	: portray_bag/1
bags	: somebag/2
bags	: somechkbag/2
bags	: test_sub_bag/2

basics	+ documented in manual
basics	% the basic list processing predicates
basics	- ./basics.pl
basics	: member/2
basics	: memberchk/2
basics	: nonmember/2

between	% Generate integers.
between	- ./between.pl
between	: between/3
between	: gen_int/1
between	: gen_nat/1
between	: numlist/3
between	: repeat/1

big_text	% handle much more text than Prolog can hold
big_text	- ./big_text.pl
big_text	: copy_texts/3
big_text	: edit_text/3
big_text	: edit_text/4
big_text	: have_emacs_edit/1
big_text	: have_emacs_edit/2
big_text	: is_big_text/1
big_text	: make_big_text/2
big_text	: make_big_text/3
big_text	: make_big_text/4
big_text	: pipe_to_text/3
big_text	: send_editor/2
big_text	: show_text/1
big_text	: text_to_file/2
big_text	: text_to_pipe/2

bitsets	% Operations on sets of integers (bitsets)
bitsets	- ./bitsets.pl
bitsets	: bit_add_element/3
bitsets	: bit_card/2
bitsets	: bit_del_element/3
bitsets	: bit_disjoint/2
bitsets	: bit_intersect/2
bitsets	: bit_intersection/2
bitsets	: bit_intersection/3
bitsets	: bit_member/2
bitsets	: bit_memberchk/2
bitsets	: bit_seteq/2
bitsets	: bit_subtract/3
bitsets	: bit_symdiff/3
bitsets	: bit_union/2
bitsets	: bit_union/3
bitsets	: bitset_ordset/2
bitsets	: bitset_to_list/2
bitsets	: is_bitset/1
bitsets	: list_to_bitset/2

break	% Print an error message and enter a break level (if possible).
break	- ./break.pl
break	: error_break/2

call	% apply/2 and several arities of call/N
call	- ./call.pl
call	: apply/2
call	: call/2
call	: call/3
call	: call/4
call	: call/5
call	: call/6
call	: call/7
call	: strip_module_prefix/4

caseconv	% upper-casing and lower-casing.
caseconv	- ./caseconv.pl
caseconv	: lower/1
caseconv	: lower/2
caseconv	: lower_upper/2
caseconv	: mixed/1
caseconv	: mixed/2
caseconv	: upper/1
caseconv	: upper/2

cassert	% Add a ground unit clause to the data base if not already there.
cassert	- ./cassert.pl
cassert	: cassert/1
cassert	: casserta/1
cassert	: cassertz/1

change_arg	+ documented in manual
change_arg	% use terms as one-dimensional arrays
change_arg	- ./changearg.pl
change_arg	: change_arg/4
change_arg	: change_arg/5
change_arg	: change_arg0/4
change_arg	: change_arg0/5
change_arg	: change_functor/5
change_arg	: change_path_arg/4
change_arg	: change_path_arg/5
change_arg	: swap_args/4
change_arg	: swap_args/6

charsio	% with_input_from_chars/2, with_output_to_chars/2
charsio	- ./charsio.pl
charsio	: chars_to_stream/2
charsio	: chars_to_term/2
charsio	: term_to_chars/2
charsio	: with_input_from_chars/2
charsio	: with_input_from_chars/3
charsio	: with_output_to_chars/2
charsio	: with_output_to_chars/3

clump	% Group adjacent related elements of lists
clump	- ./clump.pl
clump	: clumped/2
clump	: clumps/2
clump	: keyclumped/2
clump	: keyclumps/2

continued	+ documented in manual
continued	% read continued lines.
continued	- ./continued.pl
continued	: read_oper_continued_line/1
continued	: read_unix_continued_line/1

count	% Count predicate calls
count	- ./count.pl
count	: clear_counts/0
count	: count/1
count	: increment_/1
count	: write_counts/1

critical	% blocking signals
critical	- ./critical.pl
critical	: begin_critical/0
critical	: critical/1
critical	: critical_on_exception/3
critical	: end_critical/0

crypt	% encrypted I/O for Prolog.
crypt	- ./crypt.pl
crypt	: crypt_open/3
crypt	: crypt_open/4

ctr	% "counter" operations.
ctr	- ./ctr.pl
ctr	: ctr_dec/1
ctr	: ctr_dec/2
ctr	: ctr_dec/3
ctr	: ctr_inc/1
ctr	: ctr_inc/2
ctr	: ctr_inc/3
ctr	: ctr_is/2
ctr	: ctr_set/2
ctr	: ctr_set/3

ctypes	+ documented in manual
ctypes	% Character classification
ctypes	- ./ctypes.pl
ctypes	: ctypes_bits/2
ctypes	: is_alnum/1
ctypes	: is_alpha/1
ctypes	: is_ascii/1
ctypes	: is_char/1
ctypes	: is_cntrl/1
ctypes	: is_csym/1
ctypes	: is_csymf/1
ctypes	: is_digit/1
ctypes	: is_digit/2
ctypes	: is_digit/3
ctypes	: is_endfile/1
ctypes	: is_endline/1
ctypes	: is_graph/1
ctypes	: is_layout/1
ctypes	: is_lower/1
ctypes	: is_newline/1
ctypes	: is_newpage/1
ctypes	: is_paren/2
ctypes	: is_period/1
ctypes	: is_print/1
ctypes	: is_punct/1
ctypes	: is_quote/1
ctypes	: is_space/1
ctypes	: is_upper/1
ctypes	: is_white/1
ctypes	: to_lower/2
ctypes	: to_upper/2

date	+ documented in manual
date	% time-stamp routines
date	- ./date.pl
date	: date/1
date	: date/2
date	: date/3
date	: date_and_time/2
date	: date_and_time/3
date	: datime/1
date	: datime/2
date	: datime/3
date	: datime/6
date	: now/1
date	: portray_date/1
date	: time/1
date	: time/2
date	: time/3
date	: time_stamp/2
date	: time_stamp/3

decons	% Construct and take apart Prolog control structures.
decons	- ./decons.pl
decons	: prolog_bounded_quantification/3
decons	: prolog_clause/3
decons	: prolog_conjunction/2
decons	: prolog_disjunction/2
decons	: prolog_if_branch/3
decons	: prolog_if_then_else/4
decons	: prolog_negation/2

directory	+ documented in manual
directory	% directory scanning routines
directory	- ./directory.pl
directory	: current_directory/1
directory	: directory_member_of_directory/2
directory	: directory_member_of_directory/3
directory	: directory_member_of_directory/4
directory	: directory_members_of_directory/1
directory	: directory_members_of_directory/2
directory	: directory_members_of_directory/3
directory	: directory_property/2
directory	: directory_property/3
directory	: file_member_of_directory/2
directory	: file_member_of_directory/3
directory	: file_member_of_directory/4
directory	: file_members_of_directory/1
directory	: file_members_of_directory/2
directory	: file_members_of_directory/3
directory	: file_property/2
directory	: file_property/3

environ	% provide access to UNIX environment variables
environ	- ./environ.pl
environ	: argv/1
environ	: environ/2
environ	: expanded_file_name/2

environment	% 
environment	- ./environment.pl
environment	: environment/1

errno	% Reporting file errors
errno	- ./errno.pl
errno	: errno/2
errno	: file_error/3
errno	: fileerrno/2

exit	% An alternative to halt/0
exit	- ./exit.pl
exit	: exit/0
exit	: exit/1

expansion	+ documented in manual
expansion	% extensions to term_expansion/2
expansion	- ./expansion.pl
expansion	: clause_expansion_loop/3
expansion	: goal_expansion_loop/3
expansion	: memberchk/2
expansion	: nonmember/2
expansion	: xdebug/0
expansion	: xtrace/0

UNKNOWN	% 
UNKNOWN	- ./fastrw.pl
UNKNOWN	: fast_buf_read/2
UNKNOWN	: fast_buf_write/3
UNKNOWN	: fast_read/1
UNKNOWN	: fast_read/2
UNKNOWN	: fast_write/1
UNKNOWN	: fast_write/2

fft	% Fast Fourier Transform in Prolog.
fft	- ./fft.pl
fft	: fwd_fft/2
fft	: inv_fft/2

filename	% Portable file name manipulation a la Common Lisp
filename	- ./filename.pl
filename	: filename/1
filename	: filename/2
filename	: filename/3
filename	: filename_atom/2
filename	: filename_atom/3
filename	: filename_chars/2
filename	: filename_chars/3
filename	: filename_chars/4
filename	: filename_directory/4
filename	: open_file/3
filename	: portray_filename/1

files	+ documented in manual
files	% file-handling commands and predicates.
files	- ./files.pl
files	: can_open_file/2
files	: can_open_file/3
files	: close_all_streams/0
files	: current_dec10_stream/2
files	: dec10_rename/2
files	: delete_file/1
files	: directory_exists/1
files	: directory_exists/2
files	: file_exists/1
files	: file_exists/2
files	: file_must_exist/1
files	: file_must_exist/2
files	: open_file/3
files	: rename/2
files	: rename_file/2

findall	% the 'findall' routines for finding all solutions
findall	- ./findall.pl
findall	: findall/4

flatten	% Flatten various binary trees to lists and convert back.
flatten	- ./flatten.pl
flatten	: and_to_list/2
flatten	: binary_to_list/4
flatten	: binary_to_list/5
flatten	: flatten/2
flatten	: list_to_and/2
flatten	: list_to_binary/3
flatten	: list_to_binary/4
flatten	: list_to_or/2
flatten	: list_to_plus/2
flatten	: list_to_times/2
flatten	: or_to_list/2
flatten	: plus_to_list/2
flatten	: times_to_list/2

foreach	% A version of Peter Schachte's "foreach/2" control structure.
foreach	- ./foreach.pl
foreach	: forall/2
foreach	: foreach/2

free_variables	% SUPPORT for not.pl,setof.pl,foreach.pl
free_variables	- ./freevars.pl
free_variables	: free_variables/4
free_variables	: term_variables/3

fromonto	% input/output redirection.
fromonto	- ./fromonto.pl
fromonto	: copy_bytes/0
fromonto	: from_chars/2
fromonto	: from_file/2
fromonto	: from_stream/2
fromonto	: onto_chars/2
fromonto	: onto_file/2
fromonto	: onto_stream/2
fromonto	: writeln/1

gauss	% Solve linear equations by Gaussian elimination.
gauss	- ./gauss.pl
gauss	: gauss/3

getfile	% Read a whole file as a list of lines
getfile	- ./getfile.pl
getfile	: get_file/2

graphs	% Graph-processing utilities.
graphs	- ./graphs.pl
graphs	: compose/3
graphs	: f_to_p_graph/2
graphs	: f_to_s_graph/2
graphs	: p_length/2
graphs	: p_member/3
graphs	: p_to_f_graph/2
graphs	: p_to_s_graph/2
graphs	: p_transpose/2
graphs	: p_vertices/2
graphs	: reachable/3
graphs	: s_length/2
graphs	: s_member/3
graphs	: s_to_f_graph/2
graphs	: s_to_p_graph/2
graphs	: s_to_p_trans/2
graphs	: s_transpose/2
graphs	: s_vertices/2
graphs	: top_sort/2
graphs	: warshall/2

heaps	% Priority queues (also known as heaps)
heaps	- ./heaps.pl
heaps	: add_to_heap/4
heaps	: empty_heap/1
heaps	: get_from_heap/4
heaps	: heap_size/2
heaps	: heap_to_list/2
heaps	: is_heap/1
heaps	: list_to_heap/2
heaps	: min_of_heap/3
heaps	: min_of_heap/5
heaps	: portray_heap/1

hooks	+ documented in manual
hooks	% implementing hooks using messages
hooks	- ./hooks.pl
hooks	: asserta_hook/2
hooks	: asserta_hook/3
hooks	: assertz_hook/2
hooks	: assertz_hook/3
hooks	: current_hook/2
hooks	: retract_hook/2

indexer	% Provide multi-argument indexing.
indexer	- ./indexer.pl
indexer	: add_fact/1
indexer	: del_all/1
indexer	: del_fact/1

kee	% Read "KEE"-style rules.
kee	- ./kee.pl
kee	: eof_kee/1
kee	: load_kee/2
kee	: read_kee/1
kee	: vars_kee/4
kee	: write_kee/1

knuth_b_1	% table of constants.
knuth_b_1	- ./knuth_b_1.pl
knuth_b_1	: constant/2

length	% chopping a list into pieces by length.
length	- ./length.pl
length	: append_length/3
length	: append_length/4
length	: prefix_length/3
length	: proper_prefix_length/3
length	: proper_suffix_length/3
length	: rotate_list/2
length	: rotate_list/3
length	: sublist/3
length	: sublist/4
length	: sublist/5
length	: suffix_length/3

level	% Take horizontal slices through a tree
level	- ./level.pl
level	: term_level/3
level	: term_level_labels/3
level	: tree_level/3
level	: tree_level_labels/3

lineio	+ documented in manual
lineio	% read and write lines as lists of character codes
lineio	- ./lineio.pl
lineio	: fget_line/2
lineio	: fget_line/3
lineio	: get_line/1
lineio	: get_line/2
lineio	: put_chars/1
lineio	: put_line/1

list_parts	+ documented in manual
list_parts	% names for parts of lists.
list_parts	- ./listparts.pl
list_parts	: cons/3
list_parts	: head/2
list_parts	: last/3
list_parts	: prefix/2
list_parts	: proper_prefix/2
list_parts	: proper_segment/2
list_parts	: proper_sublist/2
list_parts	: proper_suffix/2
list_parts	: segment/2
list_parts	: sublist/2
list_parts	: suffix/2
list_parts	: tail/2

lists	+ documented in manual
lists	% list processing utilities
lists	- ./lists.pl
lists	: append/2
lists	: append/5
lists	: correspond/4
lists	: delete/3
lists	: delete/4
lists	: is_list/1
lists	: keys_and_values/3
lists	: last/2
lists	: nextto/3
lists	: nmember/3
lists	: nth0/3
lists	: nth0/4
lists	: nth1/3
lists	: nth1/4
lists	: one_longer/2
lists	: perm/2
lists	: perm2/4
lists	: permutation/2
lists	: proper_length/2
lists	: remove_dups/2
lists	: rev/2
lists	: reverse/2
lists	: same_length/2
lists	: same_length/3
lists	: select/4
lists	: selectchk/4
lists	: shorter_list/2
lists	: subseq/3
lists	: subseq0/2
lists	: subseq1/2
lists	: sumlist/2
lists	: transpose/2

logarr	% Extendable arrays with logarithmic access time.
logarr	- ./logarr.pl
logarr	: alist/2
logarr	: aref/3
logarr	: arefa/3
logarr	: arefl/3
logarr	: aset/4
logarr	: is_array/1
logarr	: new_array/1

long	% Arbitrary precision rational arithmetic package.
long	- ./long.pl
long	: ceiling/2
long	: ceiling/3
long	: ceiling/4
long	: eq/2
long	: eval/1
long	: eval/2
long	: floor/2
long	: floor/3
long	: floor/4
long	: ge/2
long	: gt/2
long	: le/2
long	: lt/2
long	: ne/2
long	: plus/3
long	: portray_number/1
long	: power/3
long	: rational/1
long	: round/2
long	: round/3
long	: round/4
long	: succ/2
long	: times/3
long	: truncate/2
long	: truncate/3
long	: truncate/4
long	: whole/1

lpa	% LPA Prolog compatibility.
lpa	- ./lpa.pl
lpa	: \= /2
lpa	: adict/1
lpa	: aload/1
lpa	: apply/2
lpa	: asave/2
lpa	: atom/2
lpa	: beep/1
lpa	: beep/2
lpa	: cdef/1
lpa	: cdict/1
lpa	: char_atoms/2
lpa	: charof/2
lpa	: crarray/4
lpa	: crarray/5
lpa	: current_directory/1
lpa	: dec10_abolish/2
lpa	: dec10_display/1
lpa	: def/1
lpa	: default/3
lpa	: deg_rad/2
lpa	: del_cons/1
lpa	: del_prop/2
lpa	: del_props/1
lpa	: delete_file/1
lpa	: dict/1
lpa	: ems/0
lpa	: environment/1
lpa	: fdict/1
lpa	: file_exists/1
lpa	: force/1
lpa	: forget/1
lpa	: gdict/1
lpa	: get_cons/2
lpa	: get_prop/3
lpa	: get_props/2
lpa	: getblk/6
lpa	: gread/1
lpa	: gread/2
lpa	: gread/3
lpa	: idef/1
lpa	: idict/1
lpa	: keysort/3
lpa	: kill/1
lpa	: load_program/1
lpa	: lst/1
lpa	: mdict/1
lpa	: mem/3
lpa	: member/2
lpa	: not/1
lpa	: on/2
lpa	: one/1
lpa	: open_file/3
lpa	: p_abs/2
lpa	: p_acos/2
lpa	: p_asin/2
lpa	: p_atan/2
lpa	: p_call/1
lpa	: p_call/2
lpa	: p_call/3
lpa	: p_call/4
lpa	: p_call/5
lpa	: p_call/6
lpa	: p_call/7
lpa	: p_close/1
lpa	: p_cos/2
lpa	: p_date/3
lpa	: p_datime/6
lpa	: p_exp/2
lpa	: p_exp/3
lpa	: p_functor/3
lpa	: p_get/1
lpa	: p_log/2
lpa	: p_log/3
lpa	: p_sign/2
lpa	: p_sin/2
lpa	: p_sqrt/2
lpa	: p_tan/2
lpa	: p_time/3
lpa	: pdef/1
lpa	: pi/1
lpa	: prompt_error/1
lpa	: prompt_gread/2
lpa	: prompt_gread/3
lpa	: prompt_message/1
lpa	: prompt_read/2
lpa	: prompt_warning/1
lpa	: prompt_yesno/1
lpa	: recall/2
lpa	: remember/2
lpa	: remove/3
lpa	: remove_all/3
lpa	: rename_file/2
lpa	: reverse/2
lpa	: rotblk/7
lpa	: run_time/2
lpa	: run_time/3
lpa	: schline/5
lpa	: schline/6
lpa	: sdef/1
lpa	: sdict/1
lpa	: select/3
lpa	: set_directory/1
lpa	: set_prop/3
lpa	: setblk/6
lpa	: sort/3
lpa	: sort/4
lpa	: stringof/2
lpa	: subtract/3
lpa	: sys/1
lpa	: szarray/3
lpa	: szarray/4
lpa	: textof/2
lpa	: toground/2
lpa	: toground/3
lpa	: toground/4
lpa	: toground/5
lpa	: tohollow/3
lpa	: tohollow/4
lpa	: varsin/2
lpa	: wdict/1
lpa	: writenl/1
lpa	: writenl/2
lpa	: writeq/3
lpa	: writeqnl/1
lpa	: writeqnl/2
lpa	: writeqnl/3
lpa	: writeqseq/1
lpa	: writeqseq/2
lpa	: writeqseq/3
lpa	: writeqseqnl/1
lpa	: writeqseqnl/2
lpa	: writeqseqnl/3
lpa	: writeseq/1
lpa	: writeseq/2
lpa	: writeseqnl/1
lpa	: writeseqnl/2
lpa	: writev/2
lpa	: writev/3

mapand	% mapping routines over &-trees
mapand	- ./mapand.pl
mapand	: checkand/2
mapand	: mapand/3

maplist	% Various "function" application routines based on library(call).
maplist	- ./maplist.pl
maplist	: checklist/2
maplist	: cumlist/4
maplist	: cumlist/5
maplist	: cumlist/6
maplist	: map_product/4
maplist	: maplist/2
maplist	: maplist/3
maplist	: maplist/4
maplist	: scanlist/4
maplist	: scanlist/5
maplist	: scanlist/6
maplist	: some/2
maplist	: some/3
maplist	: some/4
maplist	: somechk/2
maplist	: somechk/3
maplist	: somechk/4

mapqueue	% mapping operations over queues (see library(queues,maplist))
mapqueue	- ./mapqueue.pl
mapqueue	: map_list_queue/3
mapqueue	: map_queue/2
mapqueue	: map_queue/3
mapqueue	: map_queue_list/3
mapqueue	: some_queue/2
mapqueue	: some_queue/3
mapqueue	: somechk_queue/2
mapqueue	: somechk_queue/3

maps	% Implement finite maps.
maps	- ./maps.pl
maps	: is_map/1
maps	: list_to_map/2
maps	: map_agree/2
maps	: map_compose/3
maps	: map_disjoint/2
maps	: map_domain/2
maps	: map_exclude/3
maps	: map_include/3
maps	: map_intersection/3
maps	: map_invert/2
maps	: map_map/3
maps	: map_range/2
maps	: map_to_assoc/2
maps	: map_to_list/2
maps	: map_union/3
maps	: map_update/3
maps	: map_update/4
maps	: map_value/3
maps	: portray_map/1

math	+ documented in manual
math	% Interface to Unix Math library
math	- ./math.pl
math	: abs/2
math	: acos/2
math	: acosh/2
math	: asin/2
math	: asinh/2
math	: atan/2
math	: atan2/3
math	: atanh/2
math	: cabs/2
math	: ceil/2
math	: ceiling/2
math	: ceiling/3
math	: cos/2
math	: cosh/2
math	: decode_float/4
math	: exp/2
math	: fabs/2
math	: fceiling/2
math	: fceiling/3
math	: ffloor/2
math	: ffloor/3
math	: floor/2
math	: floor/3
math	: fremainder/3
math	: fround/2
math	: fround/3
math	: ftruncate/2
math	: ftruncate/3
math	: hypot/3
math	: j0/2
math	: j1/2
math	: jn/3
math	: log/2
math	: log10/2
math	: max/3
math	: min/3
math	: pow/3
math	: round/2
math	: round/3
math	: scale/3
math	: sign/2
math	: sign/3
math	: sin/2
math	: sinh/2
math	: sqrt/2
math	: tan/2
math	: tanh/2
math	: truncate/2
math	: truncate/3
math	: y0/2
math	: y1/2
math	: yn/3

menu	% Choose items from a menu using the Emacs interface.
menu	- ./menu.pl
menu	: menu_choice/2
menu	: menu_choice/3
menu	: menu_number/3
menu	: send_editor/1

more_lists	% some list operations useful for text processing.
more_lists	- ./morelists.pl
more_lists	: adjust/5
more_lists	: adjust/6
more_lists	: bnd/2
more_lists	: bnd/3
more_lists	: bnd/4
more_lists	: len/2
more_lists	: len/3
more_lists	: len/4
more_lists	: lit/3
more_lists	: oneof/3
more_lists	: oneof/4
more_lists	: replist/2
more_lists	: replist/3
more_lists	: replist/4
more_lists	: spaces/2
more_lists	: spaces/3

more_maps	% More predicates for mapping down lists.
more_maps	- ./moremaps.pl
more_maps	: convlist/3
more_maps	: exclude/3
more_maps	: exclude/4
more_maps	: exclude/5
more_maps	: group/3
more_maps	: group/4
more_maps	: group/5
more_maps	: include/3
more_maps	: include/4
more_maps	: include/5
more_maps	: partition/5

mst	% Find minimum spanning trees.
mst	- ./mst.pl
mst	: first_mst/4
mst	: mst/4

multi_lists	% Multiple-list routines
multi_lists	- ./multil.pl
multi_lists	: ml_maplist/2
multi_lists	: ml_maplist/3
multi_lists	: ml_maplist/4
multi_lists	: ml_member/2
multi_lists	: ml_memberchk/2
multi_lists	: ml_select/3

nlist	% Interface to the Unix library function nlist(3)
nlist	- ./nlist.pl
nlist	: nlist/3

negation	+ documented in manual
negation	% "suspicious" negation, and inequality.
negation	- ./not.pl
negation	: \= /2
negation	: not/1
negation	: once/1
negation	: ~= /2

note	% New "recorded" data-base commands.
note	- ./note.pl
note	: note/2
note	: note/3
note	: notea/2
note	: notea/3
note	: noted/2
note	: noted/3
note	: notez/2
note	: notez/3
note	: scrap/2
note	: scrap_every/1
note	: scrap_every/2
note	: scrap_first/1
note	: scrap_first/2

occurs	+ documented in manual
occurs	% checking whether a term does/does not contain a term/variable
occurs	- ./occurs.pl
occurs	: contains_term/2
occurs	: contains_var/2
occurs	: free_of_term/2
occurs	: free_of_var/2
occurs	: occurrences_of_term/3
occurs	: occurrences_of_var/3
occurs	: sub_term/2

open_files	% open a sequence of files for reading as one stream
open_files	- ./openfiles.pl
open_files	: open_files/2
open_files	: open_null_input/1

order	% comparison predicates with usual argument order.
order	- ./order.pl
order	: number_order/3
order	: ordset_order/3
order	: set_order/3
order	: term_order/3

ordered	% Define the "ordered" predicates.
ordered	- ./ordered.pl
ordered	: max_member/2
ordered	: max_member/3
ordered	: min_member/2
ordered	: min_member/3
ordered	: ordered/1
ordered	: ordered/2
ordered	: select_max/3
ordered	: select_max/4
ordered	: select_min/3
ordered	: select_min/4

ordprefix	% Extract ordered prefixes from sequences
ordprefix	- ./ordprefix.pl
ordprefix	: decreasing_prefix/3
ordprefix	: decreasing_prefix/4
ordprefix	: increasing_prefix/3
ordprefix	: increasing_prefix/4

ordsets	+ documented in manual
ordsets	% Ordered set manipulation utilities
ordsets	- ./ordsets.pl
ordsets	: is_ordset/1
ordsets	: list_to_ord_set/2
ordsets	: ord_add_element/3
ordsets	: ord_del_element/3
ordsets	: ord_disjoint/2
ordsets	: ord_disjoint_union/3
ordsets	: ord_intersect/2
ordsets	: ord_intersect/3
ordsets	: ord_intersection/2
ordsets	: ord_intersection/3
ordsets	: ord_nonmember/2
ordsets	: ord_seteq/2
ordsets	: ord_setproduct/3
ordsets	: ord_subset/2
ordsets	: ord_subtract/3
ordsets	: ord_symdiff/3
ordsets	: ord_union/2
ordsets	: ord_union/3
ordsets	: ord_union/4

pairup	% assorted flavours of association lists.
pairup	- ./pairup.pl
pairup	: assoc_cons/3
pairup	: assoc_list/3
pairup	: assoc_pair/3
pairup	: first_cons/3
pairup	: first_cons/4
pairup	: first_list/3
pairup	: first_list/4
pairup	: first_pair/3
pairup	: first_pair/4
pairup	: first_side/3
pairup	: first_side/4
pairup	: pairup_cons/3
pairup	: pairup_list/3
pairup	: pairup_pair/3
pairup	: pairup_side/3
pairup	: select_cons/4
pairup	: select_cons/5
pairup	: select_list/4
pairup	: select_list/5
pairup	: select_pair/4
pairup	: select_pair/5
pairup	: select_side/4
pairup	: select_side/5
pairup	: value_cons/3
pairup	: value_list/3
pairup	: value_pair/3
pairup	: value_side/3

pipe	% Show how Quintus streams may be connected to pipes.
pipe	- ./pipe.pl
pipe	: popen/3

plot	% Generate UNIX plot(5)files
plot	- ./plot.pl
plot	: arc/3
plot	: arc/6
plot	: circle/2
plot	: circle/3
plot	: close_plot/0
plot	: cont/1
plot	: cont/2
plot	: erase_plot/0
plot	: flush_plot/0
plot	: label/1
plot	: line/2
plot	: line/4
plot	: linemod/1
plot	: move/1
plot	: move/2
plot	: point/1
plot	: point/2
plot	: polygon/1
plot	: polygon/2
plot	: polyline/1
plot	: polyline/2
plot	: set_plot/1
plot	: space/2
plot	: space/4

pp_tree	% pretty-printers for (parse) trees represented in the form
pp_tree	- ./pptree.pl
pp_tree	: pp_term/1
pp_tree	: pp_tree/1
pp_tree	: ps_tree/1

print_chars	+ documented in manual
print_chars	% Portray lists of characters as strings.
print_chars	- ./printchars.pl
print_chars	: plausible_chars/1
print_chars	: portray_chars/1

print_length	% determining how wide a term would be if written
print_length	- ./printlength.pl
print_length	: print_length/2
print_length	: print_length/3
print_length	: print_lines/2
print_length	: tab_to/1

prompt	+ documented in manual
prompt	% Prompted input from the terminal.
prompt	- ./prompt.pl
prompt	: prompt/1
prompt	: prompted_char/2
prompt	: prompted_line/2
prompt	: prompted_line/3

put_file	% Copy the contents of a file to the current output stream
put_file	- ./putfile.pl
put_file	: put_file/1

qsort	% qsort/2, qmsort/2, qkeysort/2
qsort	- ./qsort.pl
qsort	: qkeysort/2
qsort	: qmsort/2
qsort	: qsort/2

queues	% queue operations (using difference lists)
queues	- ./queues.pl
queues	: empty_queue/1
queues	: head_queue/2
queues	: is_queue/1
queues	: join_queue/3
queues	: jump_queue/3
queues	: length_queue/2
queues	: list_join_queue/3
queues	: list_jump_queue/3
queues	: list_to_queue/2
queues	: make_queue/1
queues	: portray_queue/1
queues	: queue_to_list/2
queues	: serve_queue/3

random	% Provide a portable random number generator.
random	- ./random.pl
random	: getrand/1
random	: maybe/0
random	: maybe/1
random	: maybe/2
random	: random/1
random	: random/3
random	: random_graph/3
random	: random_member/2
random	: random_numlist/4
random	: random_perm2/4
random	: random_permutation/2
random	: random_select/3
random	: random_subseq/3
random	: setrand/1

ranstk	% Random-access stacks
ranstk	- ./ranstk.pl
ranstk	: cons_rs/3
ranstk	: empty_rs/1
ranstk	: index_rs/3
ranstk	: length_rs/2
ranstk	: portray_rs/1
ranstk	: top_rs/2

read	% Read Prolog terms in Dec-10 syntax.
read	- ./read.pl
read	: bind_named_variables/2
read	: portable_gread/1
read	: portable_gread/2
read	: portable_read/1
read	: portable_read/2

read_constant	+ documented in manual
read_constant	% Pascal-style constant reading
read_constant	- ./readconst.pl
read_constant	: prompted_constant/2
read_constant	: prompted_constants/2
read_constant	: read_constant/1
read_constant	: read_constant/2
read_constant	: read_constants/1
read_constant	: read_constants/2
read_constant	: skip_constant/0
read_constant	: skip_constant/1
read_constant	: skip_constants/1
read_constant	: skip_constants/2

read_in	+ documented in manual
read_in	% Read in a sentence as a list of words.
read_in	- ./readin.pl
read_in	: read_in/1

readints	% Read integers from current input.
readints	- ./readints.pl
readints	: read_integers/1

read_sent	+ documented in manual
read_sent	% to provide a flexible input facility
read_sent	- ./readsent.pl
read_sent	: case_shift/2
read_sent	: chars_to_words/2
read_sent	: read_line/1
read_sent	: read_sent/1
read_sent	: read_until/2
read_sent	: trim_blanks/2

rem	% Maintain equivalence classes using Rem's algorithm.
rem	- ./rem.pl
rem	: rem_add_link/4
rem	: rem_create/2
rem	: rem_equivalent/3

retract	% a complete set of clause-at-a-time data base updates
retract	- ./retract.pl
retract	: affirm/2
retract	: affirm/3
retract	: affirma/2
retract	: affirma/3
retract	: affirmed/2
retract	: affirmed/3
retract	: affirmz/2
retract	: affirmz/3
retract	: asserted/1
retract	: asserted/2
retract	: deny/2
retract	: deny_every/1
retract	: deny_every/2
retract	: deny_first/1
retract	: deny_first/2
retract	: make_defined/1
retract	: make_dynamic/1
retract	: record/2
retract	: record/3
retract	: recorda/2
retract	: recorded/2
retract	: recordz/2
retract	: retract_every/1
retract	: retract_first/1
retract	: wipe/2
retract	: wipe_every/1
retract	: wipe_every/2
retract	: wipe_first/1
retract	: wipe_first/2

same_functor	+ documented in manual
same_functor	% same_functor/[2,3,4]
same_functor	- ./samefunctor.pl
same_functor	: same_functor/2
same_functor	: same_functor/3
same_functor	: same_functor/4

samsort	% a sorting routine which exploits existing order
samsort	- ./samsort.pl
samsort	: keymerge/3
samsort	: merge/3
samsort	: merge/4
samsort	: samkeysort/2
samsort	: samsort/2
samsort	: samsort/3

setof	% improved versions of setof and bagof
setof	- ./setof.pl
setof	: bag_of/3
setof	: bag_of_all/3
setof	: grouped_bag_of/4
setof	: grouped_set_of/4
setof	: set_of/3
setof	: set_of_all/3

sets	+ documented in manual
sets	% Set manipulation utilities
sets	- ./sets.pl
sets	: add_element/3
sets	: del_element/3
sets	: disjoint/2
sets	: disjoint_union/3
sets	: intersect/2
sets	: intersect/3
sets	: intersection/2
sets	: intersection/3
sets	: is_set/1
sets	: list_to_set/2
sets	: pairfrom/4
sets	: power_set/2
sets	: select/3
sets	: selectchk/3
sets	: seteq/2
sets	: setproduct/3
sets	: subset/2
sets	: subtract/3
sets	: symdiff/3
sets	: union/2
sets	: union/3
sets	: union/4

show	% Some analogues of 'listing'.
show	- ./show.pl
show	: show_builtins/0
show	: show_builtins/1
show	: show_records/0
show	: show_records/1

show_module	% show the imports and exports of a module
show_module	- ./showmodule.pl
show_module	: show_module/1

statistics	% full_statistics/[0,2]
statistics	- ./statistics.pl
statistics	: full_statistics/0
statistics	: full_statistics/2

stchk	% Allow LOCAL style-check modifications in a file.
stchk	- ./stchk.pl
stchk	: pop_style/0
stchk	: push_style/0
stchk	: set_style/2

stream_property	% stream_property/3 (replaces character_count/2 &c)
stream_property	- ./streamproperty.pl
stream_property	: stream_property/3
stream_property	: valid_stream/1

strings	+ documented in manual
strings	% define string_size/2, string_char/3, substring/5.
strings	- ./strings.pl
strings	: atom_chars1/2
strings	: cgensym/2
strings	: char_atom/2
strings	: compare_strings/3
strings	: compare_strings/4
strings	: concat/3
strings	: concat_atom/2
strings	: concat_atom/3
strings	: concat_chars/2
strings	: concat_chars/3
strings	: gensym/1
strings	: gensym/2
strings	: index/3
strings	: midstring/3
strings	: midstring/4
strings	: midstring/5
strings	: midstring/6
strings	: name/1
strings	: name1/2
strings	: nth_char/3
strings	: number_chars1/2
strings	: span_left/3
strings	: span_left/4
strings	: span_left/5
strings	: span_right/3
strings	: span_right/4
strings	: span_right/5
strings	: span_trim/2
strings	: span_trim/3
strings	: span_trim/5
strings	: string/1
strings	: string_append/3
strings	: string_char/3
strings	: string_length/2
strings	: string_search/3
strings	: string_size/2
strings	: subchars/4
strings	: subchars/5
strings	: substring/4
strings	: substring/5
strings	: system/1

subsumes	+ documented in manual
subsumes	% term subsumption
subsumes	- ./subsumes.pl
subsumes	: subsumes/2
subsumes	: variant/2

term_depth	% Find or check the depth of a term.
term_depth	- ./termdepth.pl
term_depth	: depth_bound/2
term_depth	: length_bound/2
term_depth	: size_bound/2
term_depth	: term_depth/2
term_depth	: term_size/2

terms	% pass terms between Prolog and C.
terms	- ./terms.pl
terms	: c_to_prolog/2
terms	: erase_c_term/1
terms	: prolog_to_c/2

tokens	% a public-domain tokeniser in reasonably standard Prolog.
tokens	- ./tokens.pl
tokens	: read_tokens/1
tokens	: read_tokens/2

trees	% Updatable binary trees.
trees	- ./trees.pl
trees	: get_label/3
trees	: list_to_tree/2
trees	: map_tree/3
trees	: put_label/4
trees	: put_label/5
trees	: tree_size/2
trees	: tree_to_list/2

true	% Define true/N, fail/N, false/N for several N.
true	- ./true.pl
true	: fail/1
true	: fail/2
true	: fail/3
true	: fail/4
true	: fail/5
true	: fail/6
true	: false/1
true	: false/2
true	: false/3
true	: false/4
true	: false/5
true	: false/6
true	: true/1
true	: true/2
true	: true/3
true	: true/4
true	: true/5
true	: true/6

twild	% Trivial WILD-card matching.
twild	- ./twild.pl
twild	: twild/2
twild	: twild/3

types	% More and better type tests.
types	- ./types.pl
types	: chars/1
types	: constant/1
types	: must_be/3
types	: must_be/4
types	: must_be_atom/3
types	: must_be_between/5
types	: must_be_callable/3
types	: must_be_chars/3
types	: must_be_compound/3
types	: must_be_constant/3
types	: must_be_ground/3
types	: must_be_integer/3
types	: must_be_nonneg/3
types	: must_be_nonvar/3
types	: must_be_number/3
types	: must_be_oneof/4
types	: must_be_proper_list/3
types	: must_be_symbol/3
types	: must_be_var/3
types	: proper_list/1
types	: should_be/3
types	: should_be/4
types	: symbol/1
types	: term_type/2

unify	+ documented in manual
unify	% sound unification
unify	- ./unify.pl
unify	: unify/2

unix	% provide unix-like commands having atom/chars arguments.
unix	- ./unix.pl
unix	: cd/0
unix	: cd/1
unix	: csh/0
unix	: csh/1
unix	: ls/0
unix	: mktemp/2
unix	: mktemp/3
unix	: more/1
unix	: sh/0
unix	: sh/1
unix	: shell/0
unix	: shell/1

update	% Utilities for updating "data-base" relations.
update	- ./update.pl
update	: delete/2
update	: extend/2
update	: modify/3
update	: update/2

varnumbers	% Inverse of numbervars/3
varnumbers	- ./varnumbers.pl
varnumbers	: numbervars/1
varnumbers	: varnumbers/2
varnumbers	: varnumbers/3

vectors	% support Prolog list <-> C vector interface
vectors	- ./vectors.pl
vectors	: kill_vector/1
vectors	: kill_vector/2
vectors	: list_to_vector/2
vectors	: list_to_vector/3
vectors	: lists_to_vectors/2
vectors	: make_vector/3
vectors	: set_vector_element/3
vectors	: vector_element/3
vectors	: vector_size/2
vectors	: vector_to_list/2

writetokens	% Convert a term to a list of tokens.
writetokens	- ./writetokens.pl
writetokens	: term_to_tokens/2
writetokens	: term_to_tokens/4

xml	% Parse and generate XML
xml	- ./xml.pl
xml	: xml_parse/2
xml	: xml_parse/3
xml	: xml_pp/1
xml	: xml_subterm/2

