(REQUEST :RECEIVER IM :CONTENT (LISTEN USER-INPUT))
(MONITOR :RECEIVER IM :CONTENT (STATUS SPEECH-PP))
(TELL :RECEIVER IM :CONTENT (READY))
(TELL :CONTENT (SENTENCE "where are the trains") :RECEIVER PARSER)
(TELL :CONTENT (WORD "no") (INDEX 1) :RECEIVER PARSER)
Error: &key list isn't even.
Evaluation stack:

   (EXCL::INTERNAL-INVOKE-DEBUGGER "Error" #<PROGRAM-ERROR @ #x761cfa>
                                   T)
   (ERROR PROGRAM-ERROR :FORMAT-CONTROL "&key list isn't even."
          :FORMAT-ARGUMENTS NIL)
   (EXCL::ERROR-FROM-CODE 45)
   (SYS::..RUNTIME-OPERATION -67112478 #(:SENDER :CONTENT) -67112454 0
                             #<non-lisp object @ #x5> T)
 ->(KQML-PARSE-TELL)
   (SYS::..RUNTIME-OPERATION . :UNKNOWN-ARGS)
   (SYS::..RUNTIME-OPERATION #<Function KQML-PARSE-TELL>
                             (:CONTENT (WORD "no") (INDEX 1) :RECEIVER
                              PARSER))
   (KQML-PARSER)
   (SYS::..RUNTIME-OPERATION . :UNKNOWN-ARGS)
   (SYS::..RUNTIME-OPERATION KQML-PARSER NIL)
   (EXCL::%EVAL (APPLY *PARSER-RESTART-FUNCTION* NIL))
   (EXCL::EVAL-AS-PROGN ((APPLY *PARSER-RESTART-FUNCTION* NIL)))
   (LET
      ((EXCL::*HANDLER-CLUSTERS*
        (LOCALLY (DECLARE (EXCL::DYNAMIC-EXTENT-CONSING))
          (CONS (LIST (CONS 'ERROR #'(LAMBDA (E) (ZOOM-AND-EXIT E))))
                (EXCL::FAST EXCL::*HANDLER-CLUSTERS*)))))
      (DECLARE (DYNAMIC-EXTENT EXCL::*HANDLER-CLUSTERS*))
      (APPLY *PARSER-RESTART-FUNCTION* NIL))
   [... EXCL::%EVAL ]
   (EXCL::EVAL-AS-PROGN
      ((HANDLER-BIND ((ERROR #'(LAMBDA (E) (ZOOM-AND-EXIT E))))
         (APPLY *PARSER-RESTART-FUNCTION* NIL))))
   (LET
      ((*LOG-STREAM*
        (OPEN "parser.log" :DIRECTION :OUTPUT
          :IF-EXISTS :SUPERSEDE
          :IF-DOES-NOT-EXIST :CREATE))
       (*ROBUST-STREAM*
        (OPEN "robust.log" :DIRECTION :OUTPUT
          :IF-EXISTS :SUPERSEDE
          :IF-DOES-NOT-EXIST :CREATE)))
      (HANDLER-BIND ((ERROR #'(LAMBDA (E) (ZOOM-AND-EXIT E))))
        (APPLY *PARSER-RESTART-FUNCTION* NIL)))
   [... EXCL::%EVAL ]
   (EXCL::EVAL-AS-PROGN
      ((LET ((*LOG-STREAM*
              (OPEN "parser.log" :DIRECTION :OUTPUT
                :IF-EXISTS :SUPERSEDE
                :IF-DOES-NOT-EXIST :CREATE))
             (*ROBUST-STREAM*
              (OPEN "robust.log" :DIRECTION :OUTPUT
                :IF-EXISTS :SUPERSEDE
                :IF-DOES-NOT-EXIST :CREATE)))
         (HANDLER-BIND ((ERROR #'(LAMBDA (E) (ZOOM-AND-EXIT E))))
           (APPLY *PARSER-RESTART-FUNCTION* NIL)))))
   (BLOCK MY-RESTART-FUNCTION
          (SETQ *TERMINAL-IO*
                (MAKE-INSTANCE 'STREAM:BIDIRECTIONAL-TERMINAL-STREAM
                               :FN-IN 0 :FN-OUT 2))
          (SETQ EXCL:*INITIAL-TERMINAL-IO* *TERMINAL-IO*)
          (SETQ *ERROR-OUTPUT* *TERMINAL-IO*)
          (FORMAT *TERMINAL-IO* "~A: ~A~%"
                  (SYS:COMMAND-LINE-ARGUMENT 0) *TIMESTAMP*)
          (FINISH-OUTPUT *TERMINAL-IO*)
          (LET ((*LOG-STREAM*
                 (OPEN "parser.log" :DIRECTION :OUTPUT
                   :IF-EXISTS :SUPERSEDE
                   :IF-DOES-NOT-EXIST :CREATE))
                (*ROBUST-STREAM*
                 (OPEN "robust.log" :DIRECTION :OUTPUT
                   :IF-EXISTS :SUPERSEDE
                   :IF-DOES-NOT-EXIST :CREATE)))
            (HANDLER-BIND ((ERROR #'(LAMBDA (E) (ZOOM-AND-EXIT E))))
              (APPLY *PARSER-RESTART-FUNCTION* NIL))))
   [... EXCL::%EVAL ]
   (MY-RESTART-FUNCTION)
   (MY-RESTART-FUNCTION)
   (SYS::..RUNTIME-OPERATION . :UNKNOWN-ARGS)
   (SYS::..RUNTIME-OPERATION MY-RESTART-FUNCTION NIL)
   (TPL:START-INTERACTIVE-TOP-LEVEL
      #<STREAM:BIDIRECTIONAL-TERMINAL-STREAM
        [initial terminal io] fd 0/1 @ #xd81ea>
      MY-RESTART-FUNCTION NIL)
   (EXCL::START-LISP-EXECUTION)
   (EXCL::SETUP-REQUIRED-STACK-GROUP-BINDINGS
      #<Function START-LISP-EXECUTION-1>)
   (EXCL::START-REBORN-LISP)
   (SYS::..RUNTIME-OPERATION)
