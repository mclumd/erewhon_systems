.\" Time-stamp: <96/10/14 16:30:58 ferguson>
.TH TIM_MSG 1 "10 Oct 1996" "TRAINS Project"
.SH NAME
tim_msg \- Send a KQML message to the TRAINS Input Manager
.SH SYNOPSIS
tim_msg [-socket HOST:PORT] verb [parameters]
.SH DESCRIPTION
.PP
.I Tim_msg
is a simple program that allows a single KQML message to be sent to
the TRAINS Input Manager. It first connects to the Input Manager (see
the -socket option, below). The arguments are then formatted
as a KQML performative and sent over the connection.
Note that the parameters are not checked for KQML syntactic correctness.
Be sure to escape parentheses, spaces, and the like from the shell.
.SH OPTIONS
.PP
.IP "-socket HOST:PORT"
Connect to Input Manager at the given
.I HOST
and
.IR PORT .
The default is to use port 6200 on the local host, or the value of the
environment variable TRAINS_SOCKET, if set.
.I Tim_msg
will scan successive port numbers from that given trying to connect
(see
.IR tim (1)
for details).
.SH USAGE
This command tells the IM to terminate, thereby terminating all the
other modules:

.nf
.na
    tim_msg request :receiver im :content '(exit)'
.ad
.fi

This simple example simulates a word being recognized by Sphinx:

.nf
.na
    tim_msg tell :sender speech-in :content '(word "hello" :index 1)'
.ad
.fi

.SH ENVIRONMENT
.PP
TRAINS_SOCKET			HOST:PORT at which to contact IM
.SH FILES
.PP
None.
.SH DIAGNOSTICS
.PP
None.
.SH SEE ALSO
.PP
tim(1),
tim_cat(1),
tim_client(1)
.SH BUGS
.PP
Probably not.
.SH AUTHOR
.PP
George Ferguson (ferguson@cs.rochester.edu).


