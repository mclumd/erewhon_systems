(setf (current-problem)
  (create-problem
    (name p1511)
    (objects 
        (rmA rmB rmC rmD ROOM)
        (boxA boxB boxC boxD BOX)
        (drA drB drC drD DOOR)
        (keyA keyB keyC keyD KEY)
)
    (state
      (and
          (dr-to-rm drA rmA)
          (dr-to-rm drA rmB)
          (connects drA rmA rmB)
          (connects drA rmB rmA)
          (locked drA)
          (dr-closed drA)
          (is-key keyA drA)
          (carriable keyA)
          (inroom keyA rmB)
          (dr-to-rm drB rmC)
          (dr-to-rm drB rmD)
          (connects drB rmC rmD)
          (connects drB rmD rmC)
          (locked drB)
          (dr-closed drB)
          (is-key keyC drB)
          (carriable keyC)
          (inroom keyC rmB)
          (dr-to-rm drC rmB)
          (dr-to-rm drC rmD)
          (connects drC rmB rmD)
          (connects drC rmD rmB)
          (unlocked drC)
          (dr-closed drC)
          (is-key keyB drC)
          (carriable keyB)
          (inroom keyB rmC)
          (dr-to-rm drD rmA)
          (dr-to-rm drD rmC)
          (connects drD rmA rmC)
          (connects drD rmC rmA)
          (unlocked drD)
          (dr-open drD)
          (is-key keyD drD)
          (carriable keyD)
          (inroom keyD rmB)
          (inroom robot rmC)
          (arm-empty)
          (carriable boxA)
          (inroom boxA rmB)
          (pushable boxB)
          (inroom boxB rmD)
          (pushable boxD)
          (inroom boxD rmB)
          (pushable boxC)
          (inroom boxC rmC)
))
    (goal
      (and
          (holding boxA)
          (inroom boxD rmB)
          (inroom boxC rmB)
          (inroom boxB rmB)
))))