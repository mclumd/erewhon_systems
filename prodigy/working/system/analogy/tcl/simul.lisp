(defun simul ()
  (send-to-tcl "Load-case")
  (send-to-tcl "case-1")
  (send-to-tcl '(on a b))
  (send-to-tcl '(stack a b))
  (send-to-tcl '(on a b))
  (send-to-tcl '(stack a b))
  (send-to-tcl '(on a b))
  (send-to-tcl "Load-case")
  (send-to-tcl "case-2")
  (send-to-tcl '(on-table b))
  (send-to-tcl '(put-down b))
  (send-to-tcl "DONE"))

(defun update (case-name pos message)
  (send-to-tcl "Update-case")
  (send-to-tcl case-name)
  (send-to-tcl pos)
  (send-to-tcl message))

(defun test-s ()
  (update "case-1" 1 "bla")
  (update "case-1" 2 "bla")
  (update "case-2" 1 "bla")
  (update "case-1" 4 "bla")
  (update "case-2" 2 "bla")
  (send-to-tcl "DONE"))

(defun text (case-name pos message)
  (send-to-tcl "Update-text")
  (send-to-tcl case-name)
  (send-to-tcl pos)
  (send-to-tcl message)
  (send-to-tcl "DONE"))

(defun clean (case)
  (send-to-tcl "Clean-case")
  (send-to-tcl case)
  (send-to-tcl "DONE"))

(defun end ()
  (send-to-tcl "END"))


