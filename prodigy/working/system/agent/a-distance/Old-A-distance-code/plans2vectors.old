(in-package :user)

;;;; 
;;;; File plan2vectors.lisp implements the functions to map Kerkez's plan 
;;;; representation into state vector sequences for use in the A-distance 
;;;; metric. Read the file README.
;;;; 

#|

;;; Soln to p1 in problems generated for the logistics domain.

((NULL)
 ((SAME-CITY PO_CJ AIRPORT_CJ) (SAME-CITY AIRPORT_CJ PO_CJ) (SAME-CITY PO_CI AIRPORT_CI) (SAME-CITY AIRPORT_CI PO_CI) (SAME-CITY PO_CH AIRPORT_CH)
  (SAME-CITY AIRPORT_CH PO_CH) (SAME-CITY PO_CG AIRPORT_CG) (SAME-CITY AIRPORT_CG PO_CG) (SAME-CITY PO_CF AIRPORT_CF) (SAME-CITY AIRPORT_CF PO_CF)
  (SAME-CITY PO_CE AIRPORT_CE) (SAME-CITY AIRPORT_CE PO_CE) (SAME-CITY PO_CD AIRPORT_CD) (SAME-CITY AIRPORT_CD PO_CD) (SAME-CITY PO_CC AIRPORT_CC)
  (SAME-CITY AIRPORT_CC PO_CC) (SAME-CITY PO_CB AIRPORT_CB) (SAME-CITY AIRPORT_CB PO_CB) (SAME-CITY PO_CA AIRPORT_CA) (SAME-CITY AIRPORT_CA PO_CA)
  (LOC-AT PO_CJ CJ) (LOC-AT AIRPORT_CJ CJ) (LOC-AT PO_CI CI) (LOC-AT AIRPORT_CI CI) (LOC-AT PO_CH CH) (LOC-AT AIRPORT_CH CH) (LOC-AT PO_CG CG)
  (LOC-AT AIRPORT_CG CG) (LOC-AT PO_CF CF) (LOC-AT AIRPORT_CF CF) (LOC-AT PO_CE CE) (LOC-AT AIRPORT_CE CE) (LOC-AT PO_CD CD) (LOC-AT AIRPORT_CD CD)
  (LOC-AT PO_CC CC) (LOC-AT AIRPORT_CC CC) (LOC-AT PO_CB CB) (LOC-AT AIRPORT_CB CB) (LOC-AT PO_CA CA) (LOC-AT AIRPORT_CA CA) (INSIDE-TRUCK OBJC T_CA)
  (INSIDE-TRUCK OBJE T_CJ) (INSIDE-AIRPLANE OBJF PLANEB) (INSIDE-AIRPLANE OBJG PLANEB) (AT-OBJ OBJD PO_CI) (AT-OBJ OBJA PO_CB)
  (AT-OBJ OBJB AIRPORT_CA) (PART-OF T_CJ CJ) (PART-OF T_CI CI) (PART-OF T_CH CH) (PART-OF T_CG CG) (PART-OF T_CF CF) (PART-OF T_CE CE)
  (PART-OF T_CD CD) (PART-OF T_CC CC) (PART-OF T_CB CB) (PART-OF T_CA CA) (AT-AIRPLANE PLANED AIRPORT_CJ) (AT-AIRPLANE PLANEA AIRPORT_CB)
  (AT-AIRPLANE PLANEB AIRPORT_CI) (AT-AIRPLANE PLANEE AIRPORT_CE) (AT-AIRPLANE PLANEC AIRPORT_CH) (AT-TRUCK T_CJ AIRPORT_CJ)
  (AT-TRUCK T_CI AIRPORT_CI) (AT-TRUCK T_CH AIRPORT_CH) (AT-TRUCK T_CG PO_CG) (AT-TRUCK T_CF AIRPORT_CF) (AT-TRUCK T_CE PO_CE)
  (AT-TRUCK T_CD AIRPORT_CD) (AT-TRUCK T_CC AIRPORT_CC) (AT-TRUCK T_CB AIRPORT_CB) (AT-TRUCK T_CA AIRPORT_CA))
 (DRIVE-TRUCK T_CI AIRPORT_CI PO_CI)
 ((SAME-CITY PO_CJ AIRPORT_CJ) (SAME-CITY AIRPORT_CJ PO_CJ) (SAME-CITY PO_CI AIRPORT_CI) (SAME-CITY AIRPORT_CI PO_CI) (SAME-CITY PO_CH AIRPORT_CH)
  (SAME-CITY AIRPORT_CH PO_CH) (SAME-CITY PO_CG AIRPORT_CG) (SAME-CITY AIRPORT_CG PO_CG) (SAME-CITY PO_CF AIRPORT_CF) (SAME-CITY AIRPORT_CF PO_CF)
  (SAME-CITY PO_CE AIRPORT_CE) (SAME-CITY AIRPORT_CE PO_CE) (SAME-CITY PO_CD AIRPORT_CD) (SAME-CITY AIRPORT_CD PO_CD) (SAME-CITY PO_CC AIRPORT_CC)
  (SAME-CITY AIRPORT_CC PO_CC) (SAME-CITY PO_CB AIRPORT_CB) (SAME-CITY AIRPORT_CB PO_CB) (SAME-CITY PO_CA AIRPORT_CA) (SAME-CITY AIRPORT_CA PO_CA)
  (LOC-AT PO_CJ CJ) (LOC-AT AIRPORT_CJ CJ) (LOC-AT PO_CI CI) (LOC-AT AIRPORT_CI CI) (LOC-AT PO_CH CH) (LOC-AT AIRPORT_CH CH) (LOC-AT PO_CG CG)
  (LOC-AT AIRPORT_CG CG) (LOC-AT PO_CF CF) (LOC-AT AIRPORT_CF CF) (LOC-AT PO_CE CE) (LOC-AT AIRPORT_CE CE) (LOC-AT PO_CD CD) (LOC-AT AIRPORT_CD CD)
  (LOC-AT PO_CC CC) (LOC-AT AIRPORT_CC CC) (LOC-AT PO_CB CB) (LOC-AT AIRPORT_CB CB) (LOC-AT PO_CA CA) (LOC-AT AIRPORT_CA CA) (INSIDE-TRUCK OBJC T_CA)
  (INSIDE-TRUCK OBJE T_CJ) (INSIDE-AIRPLANE OBJF PLANEB) (INSIDE-AIRPLANE OBJG PLANEB) (AT-OBJ OBJD PO_CI) (AT-OBJ OBJA PO_CB)
  (AT-OBJ OBJB AIRPORT_CA) (PART-OF T_CJ CJ) (PART-OF T_CI CI) (PART-OF T_CH CH) (PART-OF T_CG CG) (PART-OF T_CF CF) (PART-OF T_CE CE)
  (PART-OF T_CD CD) (PART-OF T_CC CC) (PART-OF T_CB CB) (PART-OF T_CA CA) (AT-AIRPLANE PLANED AIRPORT_CJ) (AT-AIRPLANE PLANEA AIRPORT_CB)
  (AT-AIRPLANE PLANEB AIRPORT_CI) (AT-AIRPLANE PLANEE AIRPORT_CE) (AT-AIRPLANE PLANEC AIRPORT_CH) (AT-TRUCK T_CI PO_CI) (AT-TRUCK T_CJ AIRPORT_CJ)
  (AT-TRUCK T_CH AIRPORT_CH) (AT-TRUCK T_CG PO_CG) (AT-TRUCK T_CF AIRPORT_CF) (AT-TRUCK T_CE PO_CE) (AT-TRUCK T_CD AIRPORT_CD)
  (AT-TRUCK T_CC AIRPORT_CC) (AT-TRUCK T_CB AIRPORT_CB) (AT-TRUCK T_CA AIRPORT_CA))
 (LOAD-TRUCK OBJD T_CI PO_CI)
 ((SAME-CITY PO_CJ AIRPORT_CJ) (SAME-CITY AIRPORT_CJ PO_CJ) (SAME-CITY PO_CI AIRPORT_CI) (SAME-CITY AIRPORT_CI PO_CI) (SAME-CITY PO_CH AIRPORT_CH)
  (SAME-CITY AIRPORT_CH PO_CH) (SAME-CITY PO_CG AIRPORT_CG) (SAME-CITY AIRPORT_CG PO_CG) (SAME-CITY PO_CF AIRPORT_CF) (SAME-CITY AIRPORT_CF PO_CF)
  (SAME-CITY PO_CE AIRPORT_CE) (SAME-CITY AIRPORT_CE PO_CE) (SAME-CITY PO_CD AIRPORT_CD) (SAME-CITY AIRPORT_CD PO_CD) (SAME-CITY PO_CC AIRPORT_CC)
  (SAME-CITY AIRPORT_CC PO_CC) (SAME-CITY PO_CB AIRPORT_CB) (SAME-CITY AIRPORT_CB PO_CB) (SAME-CITY PO_CA AIRPORT_CA) (SAME-CITY AIRPORT_CA PO_CA)
  (LOC-AT PO_CJ CJ) (LOC-AT AIRPORT_CJ CJ) (LOC-AT PO_CI CI) (LOC-AT AIRPORT_CI CI) (LOC-AT PO_CH CH) (LOC-AT AIRPORT_CH CH) (LOC-AT PO_CG CG)
  (LOC-AT AIRPORT_CG CG) (LOC-AT PO_CF CF) (LOC-AT AIRPORT_CF CF) (LOC-AT PO_CE CE) (LOC-AT AIRPORT_CE CE) (LOC-AT PO_CD CD) (LOC-AT AIRPORT_CD CD)
  (LOC-AT PO_CC CC) (LOC-AT AIRPORT_CC CC) (LOC-AT PO_CB CB) (LOC-AT AIRPORT_CB CB) (LOC-AT PO_CA CA) (LOC-AT AIRPORT_CA CA) (INSIDE-TRUCK OBJD T_CI)
  (INSIDE-TRUCK OBJC T_CA) (INSIDE-TRUCK OBJE T_CJ) (INSIDE-AIRPLANE OBJF PLANEB) (INSIDE-AIRPLANE OBJG PLANEB) (AT-OBJ OBJA PO_CB)
  (AT-OBJ OBJB AIRPORT_CA) (PART-OF T_CJ CJ) (PART-OF T_CI CI) (PART-OF T_CH CH) (PART-OF T_CG CG) (PART-OF T_CF CF) (PART-OF T_CE CE)
  (PART-OF T_CD CD) (PART-OF T_CC CC) (PART-OF T_CB CB) (PART-OF T_CA CA) (AT-AIRPLANE PLANED AIRPORT_CJ) (AT-AIRPLANE PLANEA AIRPORT_CB)
  (AT-AIRPLANE PLANEB AIRPORT_CI) (AT-AIRPLANE PLANEE AIRPORT_CE) (AT-AIRPLANE PLANEC AIRPORT_CH) (AT-TRUCK T_CI PO_CI) (AT-TRUCK T_CJ AIRPORT_CJ)
  (AT-TRUCK T_CH AIRPORT_CH) (AT-TRUCK T_CG PO_CG) (AT-TRUCK T_CF AIRPORT_CF) (AT-TRUCK T_CE PO_CE) (AT-TRUCK T_CD AIRPORT_CD)
  (AT-TRUCK T_CC AIRPORT_CC) (AT-TRUCK T_CB AIRPORT_CB) (AT-TRUCK T_CA AIRPORT_CA))
 (DRIVE-TRUCK T_CI PO_CI AIRPORT_CI)
 ((SAME-CITY PO_CJ AIRPORT_CJ) (SAME-CITY AIRPORT_CJ PO_CJ) (SAME-CITY PO_CI AIRPORT_CI) (SAME-CITY AIRPORT_CI PO_CI) (SAME-CITY PO_CH AIRPORT_CH)
  (SAME-CITY AIRPORT_CH PO_CH) (SAME-CITY PO_CG AIRPORT_CG) (SAME-CITY AIRPORT_CG PO_CG) (SAME-CITY PO_CF AIRPORT_CF) (SAME-CITY AIRPORT_CF PO_CF)
  (SAME-CITY PO_CE AIRPORT_CE) (SAME-CITY AIRPORT_CE PO_CE) (SAME-CITY PO_CD AIRPORT_CD) (SAME-CITY AIRPORT_CD PO_CD) (SAME-CITY PO_CC AIRPORT_CC)
  (SAME-CITY AIRPORT_CC PO_CC) (SAME-CITY PO_CB AIRPORT_CB) (SAME-CITY AIRPORT_CB PO_CB) (SAME-CITY PO_CA AIRPORT_CA) (SAME-CITY AIRPORT_CA PO_CA)
  (LOC-AT PO_CJ CJ) (LOC-AT AIRPORT_CJ CJ) (LOC-AT PO_CI CI) (LOC-AT AIRPORT_CI CI) (LOC-AT PO_CH CH) (LOC-AT AIRPORT_CH CH) (LOC-AT PO_CG CG)
  (LOC-AT AIRPORT_CG CG) (LOC-AT PO_CF CF) (LOC-AT AIRPORT_CF CF) (LOC-AT PO_CE CE) (LOC-AT AIRPORT_CE CE) (LOC-AT PO_CD CD) (LOC-AT AIRPORT_CD CD)
  (LOC-AT PO_CC CC) (LOC-AT AIRPORT_CC CC) (LOC-AT PO_CB CB) (LOC-AT AIRPORT_CB CB) (LOC-AT PO_CA CA) (LOC-AT AIRPORT_CA CA) (INSIDE-TRUCK OBJD T_CI)
  (INSIDE-TRUCK OBJC T_CA) (INSIDE-TRUCK OBJE T_CJ) (INSIDE-AIRPLANE OBJF PLANEB) (INSIDE-AIRPLANE OBJG PLANEB) (AT-OBJ OBJA PO_CB)
  (AT-OBJ OBJB AIRPORT_CA) (PART-OF T_CJ CJ) (PART-OF T_CI CI) (PART-OF T_CH CH) (PART-OF T_CG CG) (PART-OF T_CF CF) (PART-OF T_CE CE)
  (PART-OF T_CD CD) (PART-OF T_CC CC) (PART-OF T_CB CB) (PART-OF T_CA CA) (AT-AIRPLANE PLANED AIRPORT_CJ) (AT-AIRPLANE PLANEA AIRPORT_CB)
  (AT-AIRPLANE PLANEB AIRPORT_CI) (AT-AIRPLANE PLANEE AIRPORT_CE) (AT-AIRPLANE PLANEC AIRPORT_CH) (AT-TRUCK T_CJ AIRPORT_CJ)
  (AT-TRUCK T_CI AIRPORT_CI) (AT-TRUCK T_CH AIRPORT_CH) (AT-TRUCK T_CG PO_CG) (AT-TRUCK T_CF AIRPORT_CF) (AT-TRUCK T_CE PO_CE)
  (AT-TRUCK T_CD AIRPORT_CD) (AT-TRUCK T_CC AIRPORT_CC) (AT-TRUCK T_CB AIRPORT_CB) (AT-TRUCK T_CA AIRPORT_CA))
 (UNLOAD-TRUCK OBJD T_CI AIRPORT_CI)
 ((SAME-CITY PO_CJ AIRPORT_CJ) (SAME-CITY AIRPORT_CJ PO_CJ) (SAME-CITY PO_CI AIRPORT_CI) (SAME-CITY AIRPORT_CI PO_CI) (SAME-CITY PO_CH AIRPORT_CH)
  (SAME-CITY AIRPORT_CH PO_CH) (SAME-CITY PO_CG AIRPORT_CG) (SAME-CITY AIRPORT_CG PO_CG) (SAME-CITY PO_CF AIRPORT_CF) (SAME-CITY AIRPORT_CF PO_CF)
  (SAME-CITY PO_CE AIRPORT_CE) (SAME-CITY AIRPORT_CE PO_CE) (SAME-CITY PO_CD AIRPORT_CD) (SAME-CITY AIRPORT_CD PO_CD) (SAME-CITY PO_CC AIRPORT_CC)
  (SAME-CITY AIRPORT_CC PO_CC) (SAME-CITY PO_CB AIRPORT_CB) (SAME-CITY AIRPORT_CB PO_CB) (SAME-CITY PO_CA AIRPORT_CA) (SAME-CITY AIRPORT_CA PO_CA)
  (LOC-AT PO_CJ CJ) (LOC-AT AIRPORT_CJ CJ) (LOC-AT PO_CI CI) (LOC-AT AIRPORT_CI CI) (LOC-AT PO_CH CH) (LOC-AT AIRPORT_CH CH) (LOC-AT PO_CG CG)
  (LOC-AT AIRPORT_CG CG) (LOC-AT PO_CF CF) (LOC-AT AIRPORT_CF CF) (LOC-AT PO_CE CE) (LOC-AT AIRPORT_CE CE) (LOC-AT PO_CD CD) (LOC-AT AIRPORT_CD CD)
  (LOC-AT PO_CC CC) (LOC-AT AIRPORT_CC CC) (LOC-AT PO_CB CB) (LOC-AT AIRPORT_CB CB) (LOC-AT PO_CA CA) (LOC-AT AIRPORT_CA CA) (INSIDE-TRUCK OBJC T_CA)
  (INSIDE-TRUCK OBJE T_CJ) (INSIDE-AIRPLANE OBJF PLANEB) (INSIDE-AIRPLANE OBJG PLANEB) (AT-OBJ OBJD AIRPORT_CI) (AT-OBJ OBJA PO_CB)
  (AT-OBJ OBJB AIRPORT_CA) (PART-OF T_CJ CJ) (PART-OF T_CI CI) (PART-OF T_CH CH) (PART-OF T_CG CG) (PART-OF T_CF CF) (PART-OF T_CE CE)
  (PART-OF T_CD CD) (PART-OF T_CC CC) (PART-OF T_CB CB) (PART-OF T_CA CA) (AT-AIRPLANE PLANED AIRPORT_CJ) (AT-AIRPLANE PLANEA AIRPORT_CB)
  (AT-AIRPLANE PLANEB AIRPORT_CI) (AT-AIRPLANE PLANEE AIRPORT_CE) (AT-AIRPLANE PLANEC AIRPORT_CH) (AT-TRUCK T_CJ AIRPORT_CJ)
  (AT-TRUCK T_CI AIRPORT_CI) (AT-TRUCK T_CH AIRPORT_CH) (AT-TRUCK T_CG PO_CG) (AT-TRUCK T_CF AIRPORT_CF) (AT-TRUCK T_CE PO_CE)
  (AT-TRUCK T_CD AIRPORT_CD) (AT-TRUCK T_CC AIRPORT_CC) (AT-TRUCK T_CB AIRPORT_CB) (AT-TRUCK T_CA AIRPORT_CA))
 (LOAD-AIRPLANE OBJD PLANEB AIRPORT_CI)
 ((SAME-CITY PO_CJ AIRPORT_CJ) (SAME-CITY AIRPORT_CJ PO_CJ) (SAME-CITY PO_CI AIRPORT_CI) (SAME-CITY AIRPORT_CI PO_CI) (SAME-CITY PO_CH AIRPORT_CH)
  (SAME-CITY AIRPORT_CH PO_CH) (SAME-CITY PO_CG AIRPORT_CG) (SAME-CITY AIRPORT_CG PO_CG) (SAME-CITY PO_CF AIRPORT_CF) (SAME-CITY AIRPORT_CF PO_CF)
  (SAME-CITY PO_CE AIRPORT_CE) (SAME-CITY AIRPORT_CE PO_CE) (SAME-CITY PO_CD AIRPORT_CD) (SAME-CITY AIRPORT_CD PO_CD) (SAME-CITY PO_CC AIRPORT_CC)
  (SAME-CITY AIRPORT_CC PO_CC) (SAME-CITY PO_CB AIRPORT_CB) (SAME-CITY AIRPORT_CB PO_CB) (SAME-CITY PO_CA AIRPORT_CA) (SAME-CITY AIRPORT_CA PO_CA)
  (LOC-AT PO_CJ CJ) (LOC-AT AIRPORT_CJ CJ) (LOC-AT PO_CI CI) (LOC-AT AIRPORT_CI CI) (LOC-AT PO_CH CH) (LOC-AT AIRPORT_CH CH) (LOC-AT PO_CG CG)
  (LOC-AT AIRPORT_CG CG) (LOC-AT PO_CF CF) (LOC-AT AIRPORT_CF CF) (LOC-AT PO_CE CE) (LOC-AT AIRPORT_CE CE) (LOC-AT PO_CD CD) (LOC-AT AIRPORT_CD CD)
  (LOC-AT PO_CC CC) (LOC-AT AIRPORT_CC CC) (LOC-AT PO_CB CB) (LOC-AT AIRPORT_CB CB) (LOC-AT PO_CA CA) (LOC-AT AIRPORT_CA CA) (INSIDE-TRUCK OBJC T_CA)
  (INSIDE-TRUCK OBJE T_CJ) (INSIDE-AIRPLANE OBJD PLANEB) (INSIDE-AIRPLANE OBJF PLANEB) (INSIDE-AIRPLANE OBJG PLANEB) (AT-OBJ OBJA PO_CB)
  (AT-OBJ OBJB AIRPORT_CA) (PART-OF T_CJ CJ) (PART-OF T_CI CI) (PART-OF T_CH CH) (PART-OF T_CG CG) (PART-OF T_CF CF) (PART-OF T_CE CE)
  (PART-OF T_CD CD) (PART-OF T_CC CC) (PART-OF T_CB CB) (PART-OF T_CA CA) (AT-AIRPLANE PLANED AIRPORT_CJ) (AT-AIRPLANE PLANEA AIRPORT_CB)
  (AT-AIRPLANE PLANEB AIRPORT_CI) (AT-AIRPLANE PLANEE AIRPORT_CE) (AT-AIRPLANE PLANEC AIRPORT_CH) (AT-TRUCK T_CJ AIRPORT_CJ)
  (AT-TRUCK T_CI AIRPORT_CI) (AT-TRUCK T_CH AIRPORT_CH) (AT-TRUCK T_CG PO_CG) (AT-TRUCK T_CF AIRPORT_CF) (AT-TRUCK T_CE PO_CE)
  (AT-TRUCK T_CD AIRPORT_CD) (AT-TRUCK T_CC AIRPORT_CC) (AT-TRUCK T_CB AIRPORT_CB) (AT-TRUCK T_CA AIRPORT_CA))
 (FLY-AIRPLANE PLANEB AIRPORT_CI AIRPORT_CG)
 ((SAME-CITY PO_CJ AIRPORT_CJ) (SAME-CITY AIRPORT_CJ PO_CJ) (SAME-CITY PO_CI AIRPORT_CI) (SAME-CITY AIRPORT_CI PO_CI) (SAME-CITY PO_CH AIRPORT_CH)
  (SAME-CITY AIRPORT_CH PO_CH) (SAME-CITY PO_CG AIRPORT_CG) (SAME-CITY AIRPORT_CG PO_CG) (SAME-CITY PO_CF AIRPORT_CF) (SAME-CITY AIRPORT_CF PO_CF)
  (SAME-CITY PO_CE AIRPORT_CE) (SAME-CITY AIRPORT_CE PO_CE) (SAME-CITY PO_CD AIRPORT_CD) (SAME-CITY AIRPORT_CD PO_CD) (SAME-CITY PO_CC AIRPORT_CC)
  (SAME-CITY AIRPORT_CC PO_CC) (SAME-CITY PO_CB AIRPORT_CB) (SAME-CITY AIRPORT_CB PO_CB) (SAME-CITY PO_CA AIRPORT_CA) (SAME-CITY AIRPORT_CA PO_CA)
  (LOC-AT PO_CJ CJ) (LOC-AT AIRPORT_CJ CJ) (LOC-AT PO_CI CI) (LOC-AT AIRPORT_CI CI) (LOC-AT PO_CH CH) (LOC-AT AIRPORT_CH CH) (LOC-AT PO_CG CG)
  (LOC-AT AIRPORT_CG CG) (LOC-AT PO_CF CF) (LOC-AT AIRPORT_CF CF) (LOC-AT PO_CE CE) (LOC-AT AIRPORT_CE CE) (LOC-AT PO_CD CD) (LOC-AT AIRPORT_CD CD)
  (LOC-AT PO_CC CC) (LOC-AT AIRPORT_CC CC) (LOC-AT PO_CB CB) (LOC-AT AIRPORT_CB CB) (LOC-AT PO_CA CA) (LOC-AT AIRPORT_CA CA) (INSIDE-TRUCK OBJC T_CA)
  (INSIDE-TRUCK OBJE T_CJ) (INSIDE-AIRPLANE OBJD PLANEB) (INSIDE-AIRPLANE OBJF PLANEB) (INSIDE-AIRPLANE OBJG PLANEB) (AT-OBJ OBJA PO_CB)
  (AT-OBJ OBJB AIRPORT_CA) (PART-OF T_CJ CJ) (PART-OF T_CI CI) (PART-OF T_CH CH) (PART-OF T_CG CG) (PART-OF T_CF CF) (PART-OF T_CE CE)
  (PART-OF T_CD CD) (PART-OF T_CC CC) (PART-OF T_CB CB) (PART-OF T_CA CA) (AT-AIRPLANE PLANEB AIRPORT_CG) (AT-AIRPLANE PLANED AIRPORT_CJ)
  (AT-AIRPLANE PLANEA AIRPORT_CB) (AT-AIRPLANE PLANEE AIRPORT_CE) (AT-AIRPLANE PLANEC AIRPORT_CH) (AT-TRUCK T_CJ AIRPORT_CJ)
  (AT-TRUCK T_CI AIRPORT_CI) (AT-TRUCK T_CH AIRPORT_CH) (AT-TRUCK T_CG PO_CG) (AT-TRUCK T_CF AIRPORT_CF) (AT-TRUCK T_CE PO_CE)
  (AT-TRUCK T_CD AIRPORT_CD) (AT-TRUCK T_CC AIRPORT_CC) (AT-TRUCK T_CB AIRPORT_CB) (AT-TRUCK T_CA AIRPORT_CA))
 (UNLOAD-AIRPLANE OBJD PLANEB AIRPORT_CG)
 ((SAME-CITY PO_CJ AIRPORT_CJ) (SAME-CITY AIRPORT_CJ PO_CJ) (SAME-CITY PO_CI AIRPORT_CI) (SAME-CITY AIRPORT_CI PO_CI) (SAME-CITY PO_CH AIRPORT_CH)
  (SAME-CITY AIRPORT_CH PO_CH) (SAME-CITY PO_CG AIRPORT_CG) (SAME-CITY AIRPORT_CG PO_CG) (SAME-CITY PO_CF AIRPORT_CF) (SAME-CITY AIRPORT_CF PO_CF)
  (SAME-CITY PO_CE AIRPORT_CE) (SAME-CITY AIRPORT_CE PO_CE) (SAME-CITY PO_CD AIRPORT_CD) (SAME-CITY AIRPORT_CD PO_CD) (SAME-CITY PO_CC AIRPORT_CC)
  (SAME-CITY AIRPORT_CC PO_CC) (SAME-CITY PO_CB AIRPORT_CB) (SAME-CITY AIRPORT_CB PO_CB) (SAME-CITY PO_CA AIRPORT_CA) (SAME-CITY AIRPORT_CA PO_CA)
  (LOC-AT PO_CJ CJ) (LOC-AT AIRPORT_CJ CJ) (LOC-AT PO_CI CI) (LOC-AT AIRPORT_CI CI) (LOC-AT PO_CH CH) (LOC-AT AIRPORT_CH CH) (LOC-AT PO_CG CG)
  (LOC-AT AIRPORT_CG CG) (LOC-AT PO_CF CF) (LOC-AT AIRPORT_CF CF) (LOC-AT PO_CE CE) (LOC-AT AIRPORT_CE CE) (LOC-AT PO_CD CD) (LOC-AT AIRPORT_CD CD)
  (LOC-AT PO_CC CC) (LOC-AT AIRPORT_CC CC) (LOC-AT PO_CB CB) (LOC-AT AIRPORT_CB CB) (LOC-AT PO_CA CA) (LOC-AT AIRPORT_CA CA) (INSIDE-TRUCK OBJC T_CA)
  (INSIDE-TRUCK OBJE T_CJ) (INSIDE-AIRPLANE OBJF PLANEB) (INSIDE-AIRPLANE OBJG PLANEB) (AT-OBJ OBJD AIRPORT_CG) (AT-OBJ OBJA PO_CB)
  (AT-OBJ OBJB AIRPORT_CA) (PART-OF T_CJ CJ) (PART-OF T_CI CI) (PART-OF T_CH CH) (PART-OF T_CG CG) (PART-OF T_CF CF) (PART-OF T_CE CE)
  (PART-OF T_CD CD) (PART-OF T_CC CC) (PART-OF T_CB CB) (PART-OF T_CA CA) (AT-AIRPLANE PLANEB AIRPORT_CG) (AT-AIRPLANE PLANED AIRPORT_CJ)
  (AT-AIRPLANE PLANEA AIRPORT_CB) (AT-AIRPLANE PLANEE AIRPORT_CE) (AT-AIRPLANE PLANEC AIRPORT_CH) (AT-TRUCK T_CJ AIRPORT_CJ)
  (AT-TRUCK T_CI AIRPORT_CI) (AT-TRUCK T_CH AIRPORT_CH) (AT-TRUCK T_CG PO_CG) (AT-TRUCK T_CF AIRPORT_CF) (AT-TRUCK T_CE PO_CE)
  (AT-TRUCK T_CD AIRPORT_CD) (AT-TRUCK T_CC AIRPORT_CC) (AT-TRUCK T_CB AIRPORT_CB) (AT-TRUCK T_CA AIRPORT_CA))
 (DRIVE-TRUCK T_CG PO_CG AIRPORT_CG)
 ((SAME-CITY PO_CJ AIRPORT_CJ) (SAME-CITY AIRPORT_CJ PO_CJ) (SAME-CITY PO_CI AIRPORT_CI) (SAME-CITY AIRPORT_CI PO_CI) (SAME-CITY PO_CH AIRPORT_CH)
  (SAME-CITY AIRPORT_CH PO_CH) (SAME-CITY PO_CG AIRPORT_CG) (SAME-CITY AIRPORT_CG PO_CG) (SAME-CITY PO_CF AIRPORT_CF) (SAME-CITY AIRPORT_CF PO_CF)
  (SAME-CITY PO_CE AIRPORT_CE) (SAME-CITY AIRPORT_CE PO_CE) (SAME-CITY PO_CD AIRPORT_CD) (SAME-CITY AIRPORT_CD PO_CD) (SAME-CITY PO_CC AIRPORT_CC)
  (SAME-CITY AIRPORT_CC PO_CC) (SAME-CITY PO_CB AIRPORT_CB) (SAME-CITY AIRPORT_CB PO_CB) (SAME-CITY PO_CA AIRPORT_CA) (SAME-CITY AIRPORT_CA PO_CA)
  (LOC-AT PO_CJ CJ) (LOC-AT AIRPORT_CJ CJ) (LOC-AT PO_CI CI) (LOC-AT AIRPORT_CI CI) (LOC-AT PO_CH CH) (LOC-AT AIRPORT_CH CH) (LOC-AT PO_CG CG)
  (LOC-AT AIRPORT_CG CG) (LOC-AT PO_CF CF) (LOC-AT AIRPORT_CF CF) (LOC-AT PO_CE CE) (LOC-AT AIRPORT_CE CE) (LOC-AT PO_CD CD) (LOC-AT AIRPORT_CD CD)
  (LOC-AT PO_CC CC) (LOC-AT AIRPORT_CC CC) (LOC-AT PO_CB CB) (LOC-AT AIRPORT_CB CB) (LOC-AT PO_CA CA) (LOC-AT AIRPORT_CA CA) (INSIDE-TRUCK OBJC T_CA)
  (INSIDE-TRUCK OBJE T_CJ) (INSIDE-AIRPLANE OBJF PLANEB) (INSIDE-AIRPLANE OBJG PLANEB) (AT-OBJ OBJD AIRPORT_CG) (AT-OBJ OBJA PO_CB)
  (AT-OBJ OBJB AIRPORT_CA) (PART-OF T_CJ CJ) (PART-OF T_CI CI) (PART-OF T_CH CH) (PART-OF T_CG CG) (PART-OF T_CF CF) (PART-OF T_CE CE)
  (PART-OF T_CD CD) (PART-OF T_CC CC) (PART-OF T_CB CB) (PART-OF T_CA CA) (AT-AIRPLANE PLANEB AIRPORT_CG) (AT-AIRPLANE PLANED AIRPORT_CJ)
  (AT-AIRPLANE PLANEA AIRPORT_CB) (AT-AIRPLANE PLANEE AIRPORT_CE) (AT-AIRPLANE PLANEC AIRPORT_CH) (AT-TRUCK T_CG AIRPORT_CG)
  (AT-TRUCK T_CJ AIRPORT_CJ) (AT-TRUCK T_CI AIRPORT_CI) (AT-TRUCK T_CH AIRPORT_CH) (AT-TRUCK T_CF AIRPORT_CF) (AT-TRUCK T_CE PO_CE)
  (AT-TRUCK T_CD AIRPORT_CD) (AT-TRUCK T_CC AIRPORT_CC) (AT-TRUCK T_CB AIRPORT_CB) (AT-TRUCK T_CA AIRPORT_CA))
 (LOAD-TRUCK OBJD T_CG AIRPORT_CG)
 ((SAME-CITY PO_CJ AIRPORT_CJ) (SAME-CITY AIRPORT_CJ PO_CJ) (SAME-CITY PO_CI AIRPORT_CI) (SAME-CITY AIRPORT_CI PO_CI) (SAME-CITY PO_CH AIRPORT_CH)
  (SAME-CITY AIRPORT_CH PO_CH) (SAME-CITY PO_CG AIRPORT_CG) (SAME-CITY AIRPORT_CG PO_CG) (SAME-CITY PO_CF AIRPORT_CF) (SAME-CITY AIRPORT_CF PO_CF)
  (SAME-CITY PO_CE AIRPORT_CE) (SAME-CITY AIRPORT_CE PO_CE) (SAME-CITY PO_CD AIRPORT_CD) (SAME-CITY AIRPORT_CD PO_CD) (SAME-CITY PO_CC AIRPORT_CC)
  (SAME-CITY AIRPORT_CC PO_CC) (SAME-CITY PO_CB AIRPORT_CB) (SAME-CITY AIRPORT_CB PO_CB) (SAME-CITY PO_CA AIRPORT_CA) (SAME-CITY AIRPORT_CA PO_CA)
  (LOC-AT PO_CJ CJ) (LOC-AT AIRPORT_CJ CJ) (LOC-AT PO_CI CI) (LOC-AT AIRPORT_CI CI) (LOC-AT PO_CH CH) (LOC-AT AIRPORT_CH CH) (LOC-AT PO_CG CG)
  (LOC-AT AIRPORT_CG CG) (LOC-AT PO_CF CF) (LOC-AT AIRPORT_CF CF) (LOC-AT PO_CE CE) (LOC-AT AIRPORT_CE CE) (LOC-AT PO_CD CD) (LOC-AT AIRPORT_CD CD)
  (LOC-AT PO_CC CC) (LOC-AT AIRPORT_CC CC) (LOC-AT PO_CB CB) (LOC-AT AIRPORT_CB CB) (LOC-AT PO_CA CA) (LOC-AT AIRPORT_CA CA) (INSIDE-TRUCK OBJD T_CG)
  (INSIDE-TRUCK OBJC T_CA) (INSIDE-TRUCK OBJE T_CJ) (INSIDE-AIRPLANE OBJF PLANEB) (INSIDE-AIRPLANE OBJG PLANEB) (AT-OBJ OBJA PO_CB)
  (AT-OBJ OBJB AIRPORT_CA) (PART-OF T_CJ CJ) (PART-OF T_CI CI) (PART-OF T_CH CH) (PART-OF T_CG CG) (PART-OF T_CF CF) (PART-OF T_CE CE)
  (PART-OF T_CD CD) (PART-OF T_CC CC) (PART-OF T_CB CB) (PART-OF T_CA CA) (AT-AIRPLANE PLANEB AIRPORT_CG) (AT-AIRPLANE PLANED AIRPORT_CJ)
  (AT-AIRPLANE PLANEA AIRPORT_CB) (AT-AIRPLANE PLANEE AIRPORT_CE) (AT-AIRPLANE PLANEC AIRPORT_CH) (AT-TRUCK T_CG AIRPORT_CG)
  (AT-TRUCK T_CJ AIRPORT_CJ) (AT-TRUCK T_CI AIRPORT_CI) (AT-TRUCK T_CH AIRPORT_CH) (AT-TRUCK T_CF AIRPORT_CF) (AT-TRUCK T_CE PO_CE)
  (AT-TRUCK T_CD AIRPORT_CD) (AT-TRUCK T_CC AIRPORT_CC) (AT-TRUCK T_CB AIRPORT_CB) (AT-TRUCK T_CA AIRPORT_CA))
 (DRIVE-TRUCK T_CG AIRPORT_CG PO_CG)
 ((SAME-CITY PO_CJ AIRPORT_CJ) (SAME-CITY AIRPORT_CJ PO_CJ) (SAME-CITY PO_CI AIRPORT_CI) (SAME-CITY AIRPORT_CI PO_CI) (SAME-CITY PO_CH AIRPORT_CH)
  (SAME-CITY AIRPORT_CH PO_CH) (SAME-CITY PO_CG AIRPORT_CG) (SAME-CITY AIRPORT_CG PO_CG) (SAME-CITY PO_CF AIRPORT_CF) (SAME-CITY AIRPORT_CF PO_CF)
  (SAME-CITY PO_CE AIRPORT_CE) (SAME-CITY AIRPORT_CE PO_CE) (SAME-CITY PO_CD AIRPORT_CD) (SAME-CITY AIRPORT_CD PO_CD) (SAME-CITY PO_CC AIRPORT_CC)
  (SAME-CITY AIRPORT_CC PO_CC) (SAME-CITY PO_CB AIRPORT_CB) (SAME-CITY AIRPORT_CB PO_CB) (SAME-CITY PO_CA AIRPORT_CA) (SAME-CITY AIRPORT_CA PO_CA)
  (LOC-AT PO_CJ CJ) (LOC-AT AIRPORT_CJ CJ) (LOC-AT PO_CI CI) (LOC-AT AIRPORT_CI CI) (LOC-AT PO_CH CH) (LOC-AT AIRPORT_CH CH) (LOC-AT PO_CG CG)
  (LOC-AT AIRPORT_CG CG) (LOC-AT PO_CF CF) (LOC-AT AIRPORT_CF CF) (LOC-AT PO_CE CE) (LOC-AT AIRPORT_CE CE) (LOC-AT PO_CD CD) (LOC-AT AIRPORT_CD CD)
  (LOC-AT PO_CC CC) (LOC-AT AIRPORT_CC CC) (LOC-AT PO_CB CB) (LOC-AT AIRPORT_CB CB) (LOC-AT PO_CA CA) (LOC-AT AIRPORT_CA CA) (INSIDE-TRUCK OBJD T_CG)
  (INSIDE-TRUCK OBJC T_CA) (INSIDE-TRUCK OBJE T_CJ) (INSIDE-AIRPLANE OBJF PLANEB) (INSIDE-AIRPLANE OBJG PLANEB) (AT-OBJ OBJA PO_CB)
  (AT-OBJ OBJB AIRPORT_CA) (PART-OF T_CJ CJ) (PART-OF T_CI CI) (PART-OF T_CH CH) (PART-OF T_CG CG) (PART-OF T_CF CF) (PART-OF T_CE CE)
  (PART-OF T_CD CD) (PART-OF T_CC CC) (PART-OF T_CB CB) (PART-OF T_CA CA) (AT-AIRPLANE PLANEB AIRPORT_CG) (AT-AIRPLANE PLANED AIRPORT_CJ)
  (AT-AIRPLANE PLANEA AIRPORT_CB) (AT-AIRPLANE PLANEE AIRPORT_CE) (AT-AIRPLANE PLANEC AIRPORT_CH) (AT-TRUCK T_CJ AIRPORT_CJ)
  (AT-TRUCK T_CI AIRPORT_CI) (AT-TRUCK T_CH AIRPORT_CH) (AT-TRUCK T_CG PO_CG) (AT-TRUCK T_CF AIRPORT_CF) (AT-TRUCK T_CE PO_CE)
  (AT-TRUCK T_CD AIRPORT_CD) (AT-TRUCK T_CC AIRPORT_CC) (AT-TRUCK T_CB AIRPORT_CB) (AT-TRUCK T_CA AIRPORT_CA))
 (UNLOAD-TRUCK OBJD T_CG PO_CG)
 ((SAME-CITY PO_CJ AIRPORT_CJ) (SAME-CITY AIRPORT_CJ PO_CJ) (SAME-CITY PO_CI AIRPORT_CI) (SAME-CITY AIRPORT_CI PO_CI) (SAME-CITY PO_CH AIRPORT_CH)
  (SAME-CITY AIRPORT_CH PO_CH) (SAME-CITY PO_CG AIRPORT_CG) (SAME-CITY AIRPORT_CG PO_CG) (SAME-CITY PO_CF AIRPORT_CF) (SAME-CITY AIRPORT_CF PO_CF)
  (SAME-CITY PO_CE AIRPORT_CE) (SAME-CITY AIRPORT_CE PO_CE) (SAME-CITY PO_CD AIRPORT_CD) (SAME-CITY AIRPORT_CD PO_CD) (SAME-CITY PO_CC AIRPORT_CC)
  (SAME-CITY AIRPORT_CC PO_CC) (SAME-CITY PO_CB AIRPORT_CB) (SAME-CITY AIRPORT_CB PO_CB) (SAME-CITY PO_CA AIRPORT_CA) (SAME-CITY AIRPORT_CA PO_CA)
  (LOC-AT PO_CJ CJ) (LOC-AT AIRPORT_CJ CJ) (LOC-AT PO_CI CI) (LOC-AT AIRPORT_CI CI) (LOC-AT PO_CH CH) (LOC-AT AIRPORT_CH CH) (LOC-AT PO_CG CG)
  (LOC-AT AIRPORT_CG CG) (LOC-AT PO_CF CF) (LOC-AT AIRPORT_CF CF) (LOC-AT PO_CE CE) (LOC-AT AIRPORT_CE CE) (LOC-AT PO_CD CD) (LOC-AT AIRPORT_CD CD)
  (LOC-AT PO_CC CC) (LOC-AT AIRPORT_CC CC) (LOC-AT PO_CB CB) (LOC-AT AIRPORT_CB CB) (LOC-AT PO_CA CA) (LOC-AT AIRPORT_CA CA) (INSIDE-TRUCK OBJC T_CA)
  (INSIDE-TRUCK OBJE T_CJ) (INSIDE-AIRPLANE OBJF PLANEB) (INSIDE-AIRPLANE OBJG PLANEB) (AT-OBJ OBJD PO_CG) (AT-OBJ OBJA PO_CB)
  (AT-OBJ OBJB AIRPORT_CA) (PART-OF T_CJ CJ) (PART-OF T_CI CI) (PART-OF T_CH CH) (PART-OF T_CG CG) (PART-OF T_CF CF) (PART-OF T_CE CE)
  (PART-OF T_CD CD) (PART-OF T_CC CC) (PART-OF T_CB CB) (PART-OF T_CA CA) (AT-AIRPLANE PLANEB AIRPORT_CG) (AT-AIRPLANE PLANED AIRPORT_CJ)
  (AT-AIRPLANE PLANEA AIRPORT_CB) (AT-AIRPLANE PLANEE AIRPORT_CE) (AT-AIRPLANE PLANEC AIRPORT_CH) (AT-TRUCK T_CJ AIRPORT_CJ)
  (AT-TRUCK T_CI AIRPORT_CI) (AT-TRUCK T_CH AIRPORT_CH) (AT-TRUCK T_CG PO_CG) (AT-TRUCK T_CF AIRPORT_CF) (AT-TRUCK T_CE PO_CE)
  (AT-TRUCK T_CD AIRPORT_CD) (AT-TRUCK T_CC AIRPORT_CC) (AT-TRUCK T_CB AIRPORT_CB) (AT-TRUCK T_CA AIRPORT_CA)))

  |#

;;; 
;;; The *predicates* variable hold a list of all of the state predicates in the
;;; plan. For the sample plan above, *predicates* is the following. 
;;; 
;;; (AT-TRUCK AT-AIRPLANE PART-OF AT-OBJ INSIDE-AIRPLANE INSIDE-TRUCK LOC-AT SAME-CITY)
;;; 
;;; Note that they are in reverse order.
;;; 
;;; PRODIGY does not use the symbol-value of predicate symbols, so we will
;;; maintain a count of predicate occurences in the state. Because the first
;;; (and all) state(s) have 20 instances of the predicate SAME-CITY, the value
;;; of the symbol will be equal to the count 20.
;;; 
;;; Initialize to a full set for this sequence to avoid the problem of 
;;; different problem sets using a different predicate sequence.
;;; 
(defvar *predicates* 
    '(AT-TRUCK AT-AIRPLANE PART-OF AT-OBJ INSIDE-AIRPLANE INSIDE-TRUCK LOC-AT SAME-CITY)
    ;; nil
    )

(defvar *vector-results* nil)

(defparameter *results-directory* 
  (concatenate 
   'string
   *prodigy-root-directory* 
   "domains/logistics/")
  "Where results are written to disk.")

#|
(with-open-file
   (file-out 
    (concatenate 'string 
		 user::*results-directory*
		 "vector-results.txt")
    :direction :output
    :if-exists :append
    :if-does-not-exist :create)
   (format file-out
	   "~S~%"
	   (user::plan2vectors 
	    (user::gen-file))))
|#
;;; May use in future.
(defun create-vres-file (&optional
			(results *battery-results*))
  "Write out partial results in format handled by Systat."
  (with-open-file
   (file-out 
    (concatenate 'string 
		 *results-directory*
		 "vector-results.txt")
    :direction :output
    :if-exists :append
    :if-does-not-exist :create)
   (mapc #'(lambda (i)
	     (format file-out
		     "~,5F, ~,5F, ~,5F~%"
		     n-ops
		     delay
		     measure)
	     )
	 results))
  nil
  )

;;; 
;;; Function convert2numbers takes a list of predicate counters in the state as
;;; input and returns a vector representation. The first state in the example 
;;; above maps to the following.
;;; (10 5 10 3 2 2 20 20)
;;; 
(defun convert2numbers (alist)
  (cond ((null alist)
	 nil)
	(t
	 (cons (symbol-value (first alist))
	       (convert2numbers (rest alist)))))
  )

;;; 
;;; function reset re-initializes all predicate counts to zero.
;;; 
(defun reset (alist)
  (cond ((null alist)
	 nil)
	(t 
	 (set (first alist) 0)
	 (reset (rest alist))))
  )


;;; 
(defun convert2vector (state &aux return-val)
  (cond ((null state)
	 (setf return-val
	   (convert2numbers *predicates*))
	 (reset *predicates*)
	 return-val)
	(t
	 (let ((first-literal (first state)))
	   (when (not (boundp (first first-literal)))
	     (set (first first-literal) 0)
	     (setf *predicates*
	       (cons (first first-literal) *predicates*)))
	   (set (first first-literal) (+ 1 (symbol-value (first first-literal))))
	   (convert2vector (rest state)))))	 
  )


;;; 
;;; call (plan2vectors (gen-file)) to get results. 
;;; the sample plan at the top of this file maps to the folloing sequence.
;;; ((10 5 10 3 2 2 20 20) (10 5 10 3 2 2 20 20) (10 5 10 2 2 3 20 20) (10 5 10 2 2 3 20 20) (10 5 10 3 2 2 20 20) (10 5 10 2 3 2 20 20)
;;;  (10 5 10 2 3 2 20 20) (10 5 10 3 2 2 20 20) (10 5 10 3 2 2 20 20) (10 5 10 2 2 3 20 20) (10 5 10 2 2 3 20 20) (10 5 10 3 2 2 20 20))
;;; 
(defun plan2vectors (plan)
  (cond ((null plan)
	 nil)
	(t
	 ;;; Because the plan is a sequence of (<action> <state>) pairs,
	 ;;; we convert the state (i.e., the second item)
	 (cons (convert2vector
		(second plan))
	       (plan2vectors
		(rest (rest plan))))))
  )


;;; The following shuffles a sequence including a list. 
;;; Got this code off the internet.
(defun seqrnd (seq)
  "Randomize the elements of a sequence. Destructive on SEQ."
  (sort seq #'> :key (lambda (x) (random 1.0))))


#|
;;; This is the code to execute the planning on the generated problems and to 
;;; save the vector translated results on the variable *vector-results*. Set 
;;; *skip-list* to nil to perform task on original problem set that includes 
;;; insolvable problems.

(dotimes (i 100) 
  (when (not (member (intern (make-symbol (format nil "P~s" (1+ i)))) 
		     *skip-list*))
    (problem (intern (make-symbol (format nil "P~s" (1+ i)))))
    (run :time-bound 300
	 :output-level 0)
    (sleep 2)
    (setf *vector-results*
      (cons (user::plan2vectors 
	     (gen-file))
	    *vector-results*))))

;;; Finding the problems that have no solution:
(let ((x (reverse
	  '(((6 2 6 1 0 0 12 12) (6 2 6 0 0 1 12 12) (6 2 6 0 0 1 12 12) (6 2 6 1 0 0 12 12) (6 2 6 1 0 0 12 12) (6 2 6 0 1 0 12 12) (6 2 6 0 1 0 12 12)
				 (6 2 6 1 0 0 12 12))
	    ((6 2 6 1 0 0 12 12) (6 2 6 1 0 0 12 12) (6 2 6 0 0 1 12 12) (6 2 6 0 0 1 12 12) (6 2 6 1 0 0 12 12) (6 2 6 0 1 0 12 12) (6 2 6 0 1 0 12 12)
	     (6 2 6 1 0 0 12 12))
	    ((6 2 6 3 0 2 12 12) (6 2 6 2 1 2 12 12) (6 2 6 2 1 2 12 12) (6 2 6 3 0 2 12 12) (6 2 6 2 0 3 12 12) (6 2 6 2 0 3 12 12) (6 2 6 3 0 2 12 12)
	     (6 2 6 2 0 3 12 12) (6 2 6 2 0 3 12 12) (6 2 6 3 0 2 12 12) (6 2 6 3 0 2 12 12) (6 2 6 2 1 2 12 12) (6 2 6 2 1 2 12 12) (6 2 6 3 0 2 12 12)
	     (6 2 6 3 0 2 12 12) (6 2 6 2 0 3 12 12) (6 2 6 2 0 3 12 12) (6 2 6 3 0 2 12 12) (6 2 6 3 0 2 12 12) (6 2 6 4 0 1 12 12))
	    ((6 1 6 3 0 0 12 12) (6 1 6 2 0 1 12 12) (6 1 6 2 0 1 12 12) (6 1 6 3 0 0 12 12) (6 1 6 2 1 0 12 12) (6 1 6 2 1 0 12 12) (6 1 6 3 0 0 12 12)
	     (6 1 6 2 0 1 12 12) (6 1 6 2 0 1 12 12) (6 1 6 3 0 0 12 12))
	    ((6 8 6 1 0 0 12 12) (6 8 6 0 1 0 12 12) (6 8 6 0 1 0 12 12) (6 8 6 1 0 0 12 12))
	    ((6 9 6 0 0 1 12 12) (6 9 6 1 0 0 12 12) (6 9 6 1 0 0 12 12) (6 9 6 0 1 0 12 12) (6 9 6 0 1 0 12 12) (6 9 6 1 0 0 12 12) (6 9 6 1 0 0 12 12)
	     (6 9 6 0 0 1 12 12) (6 9 6 0 0 1 12 12) (6 9 6 1 0 0 12 12))
	    NIL NIL ((6 6 6 2 2 1 12 12) (6 6 6 2 2 1 12 12) (6 6 6 3 1 1 12 12)) ((6 7 6 0 1 0 12 12) (6 7 6 0 1 0 12 12) (6 7 6 1 0 0 12 12)) NIL
	    ((6 5 6 2 0 1 12 12) (6 5 6 1 1 1 12 12) (6 5 6 0 1 2 12 12) (6 5 6 0 1 2 12 12) (6 5 6 1 1 1 12 12) (6 5 6 1 1 1 12 12) (6 5 6 2 0 1 12 12)
	     (6 5 6 2 0 1 12 12) (6 5 6 3 0 0 12 12) (6 5 6 3 0 0 12 12) (6 5 6 2 1 0 12 12) (6 5 6 2 1 0 12 12) (6 5 6 3 0 0 12 12))
	    ((6 8 6 1 2 2 12 12) (6 8 6 1 2 2 12 12) (6 8 6 2 1 2 12 12))
	    ((6 7 6 6 0 2 12 12) (6 7 6 5 1 2 12 12) (6 7 6 5 1 2 12 12) (6 7 6 6 1 1 12 12) (6 7 6 6 1 1 12 12) (6 7 6 5 2 1 12 12) (6 7 6 5 2 1 12 12)
	     (6 7 6 6 1 1 12 12) (6 7 6 6 1 1 12 12) (6 7 6 5 1 2 12 12) (6 7 6 5 1 2 12 12) (6 7 6 6 1 1 12 12) (6 7 6 6 1 1 12 12) (6 7 6 7 0 1 12 12)
	     (6 7 6 6 0 2 12 12) (6 7 6 6 0 2 12 12) (6 7 6 7 0 1 12 12))
	    ((6 1 6 1 0 0 12 12) (6 1 6 0 0 1 12 12) (6 1 6 0 0 1 12 12) (6 1 6 1 0 0 12 12) (6 1 6 1 0 0 12 12) (6 1 6 0 1 0 12 12) (6 1 6 0 1 0 12 12)
	     (6 1 6 1 0 0 12 12))
	    ((6 2 6 1 2 3 12 12) (6 2 6 1 2 3 12 12) (6 2 6 2 2 2 12 12) (6 2 6 2 2 2 12 12) (6 2 6 1 3 2 12 12) (6 2 6 1 3 2 12 12) (6 2 6 2 2 2 12 12))
	    NIL ((6 4 6 1 0 0 12 12) (6 4 6 0 1 0 12 12) (6 4 6 0 1 0 12 12) (6 4 6 1 0 0 12 12))
	    ((6 1 6 5 0 0 12 12) (6 1 6 4 0 1 12 12) (6 1 6 4 0 1 12 12) (6 1 6 5 0 0 12 12) (6 1 6 5 0 0 12 12) (6 1 6 4 1 0 12 12) (6 1 6 4 1 0 12 12)
	     (6 1 6 5 0 0 12 12) (6 1 6 5 0 0 12 12) (6 1 6 4 0 1 12 12) (6 1 6 4 0 1 12 12) (6 1 6 5 0 0 12 12))
	    NIL
	    ((6 3 6 0 2 0 12 12) (6 3 6 0 2 0 12 12) (6 3 6 1 1 0 12 12) (6 3 6 1 1 0 12 12) (6 3 6 2 0 0 12 12) (6 3 6 1 0 1 12 12) (6 3 6 1 0 1 12 12)
	     (6 3 6 2 0 0 12 12))
	    ((6 8 6 3 0 2 12 12) (6 8 6 3 0 2 12 12) (6 8 6 4 0 1 12 12) (6 8 6 4 0 1 12 12) (6 8 6 3 1 1 12 12) (6 8 6 3 1 1 12 12) (6 8 6 4 0 1 12 12))
	    ((6 4 6 1 0 1 12 12) (6 4 6 2 0 0 12 12) (6 4 6 1 1 0 12 12) (6 4 6 1 1 0 12 12) (6 4 6 2 0 0 12 12) (6 4 6 2 0 0 12 12) (6 4 6 1 0 1 12 12)
	     (6 4 6 1 0 1 12 12) (6 4 6 2 0 0 12 12) (6 4 6 2 0 0 12 12) (6 4 6 1 1 0 12 12) (6 4 6 1 1 0 12 12) (6 4 6 2 0 0 12 12))
	    NIL NIL NIL NIL
	    ((6 8 6 1 1 1 12 12) (6 8 6 1 1 1 12 12) (6 8 6 2 1 0 12 12) (6 8 6 2 1 0 12 12) (6 8 6 1 2 0 12 12) (6 8 6 1 2 0 12 12) (6 8 6 2 1 0 12 12)
	     (6 8 6 1 1 1 12 12) (6 8 6 1 1 1 12 12) (6 8 6 2 1 0 12 12) (6 8 6 2 1 0 12 12) (6 8 6 3 0 0 12 12))
	    NIL NIL NIL ((6 3 6 0 1 0 12 12) (6 3 6 0 1 0 12 12) (6 3 6 1 0 0 12 12) (6 3 6 0 0 1 12 12) (6 3 6 0 0 1 12 12) (6 3 6 1 0 0 12 12))
	    ((6 5 6 2 0 0 12 12) (6 5 6 2 0 0 12 12) (6 5 6 1 0 1 12 12) (6 5 6 1 0 1 12 12) (6 5 6 2 0 0 12 12) (6 5 6 2 0 0 12 12) (6 5 6 1 0 1 12 12)
	     (6 5 6 1 0 1 12 12) (6 5 6 2 0 0 12 12))
	    ((6 7 6 2 0 1 12 12) (6 7 6 2 0 1 12 12) (6 7 6 3 0 0 12 12)) NIL
	    ((6 7 6 1 1 0 12 12) (6 7 6 0 2 0 12 12) (6 7 6 0 2 0 12 12) (6 7 6 1 1 0 12 12) (6 7 6 1 1 0 12 12) (6 7 6 2 0 0 12 12) (6 7 6 1 0 1 12 12)
	     (6 7 6 1 0 1 12 12) (6 7 6 2 0 0 12 12))
	    ((6 7 6 1 0 0 12 12) (6 7 6 0 0 1 12 12) (6 7 6 0 0 1 12 12) (6 7 6 1 0 0 12 12)) NIL
	    ((6 6 6 7 0 1 12 12) (6 6 6 6 0 2 12 12) (6 6 6 6 0 2 12 12) (6 6 6 7 0 1 12 12) (6 6 6 7 0 1 12 12) (6 6 6 6 0 2 12 12) (6 6 6 6 0 2 12 12)
	     (6 6 6 7 0 1 12 12) (6 6 6 7 0 1 12 12) (6 6 6 6 1 1 12 12) (6 6 6 6 1 1 12 12) (6 6 6 7 0 1 12 12) (6 6 6 6 0 2 12 12) (6 6 6 6 0 2 12 12)
	     (6 6 6 7 0 1 12 12) (6 6 6 8 0 0 12 12))
	    NIL
	    ((6 1 6 5 0 2 12 12) (6 1 6 5 0 2 12 12) (6 1 6 6 0 1 12 12) (6 1 6 6 0 1 12 12) (6 1 6 5 1 1 12 12) (6 1 6 5 1 1 12 12) (6 1 6 6 0 1 12 12))
	    NIL ((6 1 6 0 0 1 12 12) (6 1 6 0 0 1 12 12) (6 1 6 1 0 0 12 12)) NIL NIL NIL
	    ((6 7 6 2 0 0 12 12) (6 7 6 1 1 0 12 12) (6 7 6 1 1 0 12 12) (6 7 6 2 0 0 12 12))
	    ((6 7 6 1 0 0 12 12) (6 7 6 0 0 1 12 12) (6 7 6 0 0 1 12 12) (6 7 6 1 0 0 12 12)) NIL
	    ((6 2 6 0 3 1 12 12) (6 2 6 1 2 1 12 12) (6 2 6 1 2 1 12 12) (6 2 6 0 2 2 12 12) (6 2 6 0 2 2 12 12) (6 2 6 1 2 1 12 12)) NIL NIL NIL NIL
	    ((6 5 6 3 4 1 12 12) (6 5 6 4 4 0 12 12) (6 5 6 4 4 0 12 12) (6 5 6 3 5 0 12 12) (6 5 6 3 5 0 12 12) (6 5 6 4 4 0 12 12) (6 5 6 4 4 0 12 12)
	     (6 5 6 3 4 1 12 12) (6 5 6 3 4 1 12 12) (6 5 6 4 4 0 12 12))
	    ((6 9 6 2 0 1 12 12) (6 9 6 2 0 1 12 12) (6 9 6 1 0 2 12 12) (6 9 6 1 0 2 12 12) (6 9 6 2 0 1 12 12) (6 9 6 1 1 1 12 12) (6 9 6 1 1 1 12 12)
	     (6 9 6 2 0 1 12 12) (6 9 6 1 0 2 12 12) (6 9 6 1 0 2 12 12) (6 9 6 2 0 1 12 12))
	    ((6 9 6 2 0 1 12 12) (6 9 6 3 0 0 12 12) (6 9 6 2 0 1 12 12) (6 9 6 2 0 1 12 12) (6 9 6 3 0 0 12 12) (6 9 6 3 0 0 12 12) (6 9 6 2 1 0 12 12)
	     (6 9 6 2 1 0 12 12) (6 9 6 3 0 0 12 12) (6 9 6 3 0 0 12 12) (6 9 6 2 0 1 12 12) (6 9 6 2 0 1 12 12) (6 9 6 3 0 0 12 12) (6 9 6 3 0 0 12 12)
	     (6 9 6 2 0 1 12 12) (6 9 6 2 0 1 12 12) (6 9 6 3 0 0 12 12))
	    NIL NIL NIL
	    ((6 7 6 3 0 0 12 12) (6 7 6 2 1 0 12 12) (6 7 6 2 1 0 12 12) (6 7 6 3 0 0 12 12) (6 7 6 3 0 0 12 12) (6 7 6 2 0 1 12 12) (6 7 6 2 0 1 12 12)
	     (6 7 6 3 0 0 12 12) (6 7 6 2 1 0 12 12) (6 7 6 2 1 0 12 12) (6 7 6 3 0 0 12 12))
	    NIL ((6 9 6 1 0 0 12 12) (6 9 6 1 0 0 12 12) (6 9 6 0 1 0 12 12) (6 9 6 0 1 0 12 12) (6 9 6 1 0 0 12 12))
	    ((6 9 6 1 0 0 12 12) (6 9 6 0 0 1 12 12) (6 9 6 0 0 1 12 12) (6 9 6 1 0 0 12 12)) NIL
	    ((6 9 6 1 0 0 12 12) (6 9 6 0 0 1 12 12) (6 9 6 0 0 1 12 12) (6 9 6 1 0 0 12 12))
	    ((6 6 6 0 1 0 12 12) (6 6 6 0 1 0 12 12) (6 6 6 1 0 0 12 12) (6 6 6 1 0 0 12 12) (6 6 6 0 0 1 12 12) (6 6 6 0 0 1 12 12) (6 6 6 1 0 0 12 12))
	    NIL
	    ((6 7 6 6 1 0 12 12) (6 7 6 5 2 0 12 12) (6 7 6 5 2 0 12 12) (6 7 6 4 2 1 12 12) (6 7 6 4 2 1 12 12) (6 7 6 5 2 0 12 12) (6 7 6 4 3 0 12 12)
	     (6 7 6 4 3 0 12 12) (6 7 6 5 2 0 12 12) (6 7 6 5 2 0 12 12) (6 7 6 6 1 0 12 12) (6 7 6 5 1 1 12 12) (6 7 6 5 1 1 12 12) (6 7 6 6 1 0 12 12))
	    ((6 6 6 3 3 2 12 12) (6 6 6 4 3 1 12 12) (6 6 6 4 3 1 12 12) (6 6 6 3 4 1 12 12) (6 6 6 3 4 1 12 12) (6 6 6 4 3 1 12 12) (6 6 6 4 3 1 12 12)
	     (6 6 6 3 3 2 12 12) (6 6 6 3 3 2 12 12) (6 6 6 4 3 1 12 12))
	    ((6 6 6 0 1 1 12 12) (6 6 6 1 1 0 12 12) (6 6 6 1 1 0 12 12) (6 6 6 2 0 0 12 12) (6 6 6 2 0 0 12 12) (6 6 6 1 0 1 12 12) (6 6 6 1 0 1 12 12)
	     (6 6 6 2 0 0 12 12))
	    NIL NIL
	    ((6 1 6 1 1 0 12 12) (6 1 6 1 1 0 12 12) (6 1 6 2 0 0 12 12) (6 1 6 2 0 0 12 12) (6 1 6 1 0 1 12 12) (6 1 6 1 0 1 12 12) (6 1 6 2 0 0 12 12))
	    ((6 9 6 2 1 1 12 12) (6 9 6 2 1 1 12 12) (6 9 6 3 0 1 12 12) (6 9 6 2 0 2 12 12) (6 9 6 2 0 2 12 12) (6 9 6 3 0 1 12 12))
	    ((6 1 6 1 0 0 12 12) (6 1 6 0 1 0 12 12) (6 1 6 0 1 0 12 12) (6 1 6 1 0 0 12 12))
	    ((6 9 6 2 1 0 12 12) (6 9 6 1 2 0 12 12) (6 9 6 1 2 0 12 12) (6 9 6 2 1 0 12 12) (6 9 6 2 1 0 12 12) (6 9 6 3 0 0 12 12)) NIL
	    ((6 8 6 0 1 0 12 12) (6 8 6 0 1 0 12 12) (6 8 6 1 0 0 12 12)) NIL
	    ((6 2 6 1 0 2 12 12) (6 2 6 1 0 2 12 12) (6 2 6 0 1 2 12 12) (6 2 6 0 1 2 12 12) (6 2 6 1 0 2 12 12)) NIL
	    ((6 9 6 4 0 1 12 12) (6 9 6 4 0 1 12 12) (6 9 6 3 1 1 12 12) (6 9 6 3 1 1 12 12) (6 9 6 4 0 1 12 12) (6 9 6 4 0 1 12 12) (6 9 6 3 0 2 12 12)
	     (6 9 6 3 0 2 12 12) (6 9 6 4 0 1 12 12))
	    NIL NIL NIL NIL
	    ((6 2 6 2 1 0 12 12) (6 2 6 3 0 0 12 12) (6 2 6 2 0 1 12 12) (6 2 6 1 0 2 12 12) (6 2 6 1 0 2 12 12) (6 2 6 2 0 1 12 12) (6 2 6 2 0 1 12 12)
	     (6 2 6 1 1 1 12 12) (6 2 6 1 1 1 12 12) (6 2 6 2 0 1 12 12) (6 2 6 2 0 1 12 12) (6 2 6 1 0 2 12 12) (6 2 6 1 0 2 12 12) (6 2 6 2 0 1 12 12)
	     (6 2 6 2 0 1 12 12) (6 2 6 1 1 1 12 12) (6 2 6 1 1 1 12 12) (6 2 6 2 0 1 12 12) (6 2 6 2 0 1 12 12) (6 2 6 3 0 0 12 12))
	    ((6 1 6 1 1 1 12 12) (6 1 6 1 1 1 12 12) (6 1 6 2 0 1 12 12) (6 1 6 2 0 1 12 12) (6 1 6 1 0 2 12 12) (6 1 6 1 0 2 12 12) (6 1 6 2 0 1 12 12))
	    NIL NIL ((6 8 6 1 3 1 12 12) (6 8 6 1 3 1 12 12) (6 8 6 2 2 1 12 12))
	    ((6 8 6 3 0 0 12 12) (6 8 6 2 1 0 12 12) (6 8 6 1 1 1 12 12) (6 8 6 0 1 2 12 12) (6 8 6 0 1 2 12 12) (6 8 6 1 1 1 12 12) (6 8 6 2 1 0 12 12)
	     (6 8 6 1 2 0 12 12) (6 8 6 1 2 0 12 12) (6 8 6 2 1 0 12 12) (6 8 6 2 1 0 12 12) (6 8 6 3 0 0 12 12))
	    ((6 8 6 1 0 0 12 12) (6 8 6 1 0 0 12 12) (6 8 6 0 0 1 12 12) (6 8 6 0 0 1 12 12) (6 8 6 1 0 0 12 12) (6 8 6 0 1 0 12 12) (6 8 6 0 1 0 12 12)
	     (6 8 6 1 0 0 12 12))
	    NIL ((6 9 6 0 0 1 12 12) (6 9 6 1 0 0 12 12) (6 9 6 1 0 0 12 12) (6 9 6 0 1 0 12 12) (6 9 6 0 1 0 12 12) (6 9 6 1 0 0 12 12))
	    ((6 9 6 4 0 3 12 12) (6 9 6 4 0 3 12 12) (6 9 6 3 0 4 12 12) (6 9 6 3 0 4 12 12) (6 9 6 4 0 3 12 12) (6 9 6 3 1 3 12 12) (6 9 6 3 1 3 12 12)
	     (6 9 6 4 0 3 12 12))
	    ((6 3 6 3 0 4 12 12) (6 3 6 2 0 5 12 12) (6 3 6 2 0 5 12 12) (6 3 6 3 0 4 12 12) (6 3 6 2 1 4 12 12) (6 3 6 2 1 4 12 12) (6 3 6 3 0 4 12 12)
	     (6 3 6 2 0 5 12 12) (6 3 6 2 0 5 12 12) (6 3 6 3 0 4 12 12))
	    NIL ((6 6 6 3 1 3 12 12) (6 6 6 3 1 3 12 12) (6 6 6 4 0 3 12 12) (6 6 6 3 0 4 12 12) (6 6 6 3 0 4 12 12) (6 6 6 4 0 3 12 12))))
	 ))
  (dotimes (i 100) 
    (if (null (first x))
	(setf *skip-list* (cons (intern (make-symbol (format nil "P~s" (1+ i)))) *skip-list*)))
    (setf x (rest x))
    )
  )

|#

;;; The problems that have no solution in problem set 4:
(defvar *skip-list* nil
  ;;'(P2 P6 P10 P11 P14 P15 P16 P17 P19 P21 P23 P28 P29 P33 P36 P39 P41 P42 P43 P47 P48 P49 P50 P52 P55 P56 P57 P59 P61 P63 P66 P70 P71 P72 P74 P75 P76 P77 P81 P84 P90 P93 P94)
  )
