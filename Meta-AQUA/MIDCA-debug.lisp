(in-package :metaaqua) ;Was :user

;;;; 
;;;; This code implements some testing mechanisms for the K-track
;;;; interpretation (i.e., explanation) process at the cognitive level
;;;; for MIDCA. It uses sockets to communicate with the Meta-AQUA
;;;; K-track, substituting for the python code of MIDCA. The sockets
;;;; are active on this side. 
;;;; 


(defvar *example-MIDCA-input*
    '(report.1
      (
       ((unstack.1
	 (actor  (value person.0))
	 (object  (value D_))
	 (recipient  (value B_)))
	"")
       ((state
	 (arsonist.1  (domain  (value Gui_Montag)))
	 (block.1  (domain  (value A_)))
	 (block.2  (domain  (value B_)))
	 (block.3  (domain  (value C_)))
	 (clear.1  (domain  (value C_)))
	 (clear.2  (domain  (value B_)))
	 (free.1  (domain  (value Gui_Montag)))
	 (holding.1  (domain  (value D_)))
	 (on-table.1  (domain  (value A_)))
	 (on-table.2  (domain  (value C_)))
	 (on.1  (co-domain  (value A_))
		(domain  (value B_)))
	 (table.1  (domain  (value table)))
	 (triangle.1  (domain  (value D_))))
	"")
       ((putdown.1
	 (actor  (value person.0))
	 (object  (value D_)))
	"")
       ((state
	 (arm-empty.1 )
	 (arsonist.2  (domain  (value Gui_Montag)))
	 (block.4  (domain  (value A_)))
	 (block.5  (domain  (value B_)))
	 (block.6  (domain  (value C_)))
	 (clear.3  (domain  (value C_)))
	 (clear.4  (domain  (value B_)))
	 (clear.5  (domain  (value D_)))
	 (free.2  (domain  (value Gui_Montag)))
	 (on-table.3  (domain  (value A_)))
	 (on-table.4  (domain  (value C_)))
	 (on-table.5  (domain  (value D_)))
	 (on.2  (co-domain  (value A_))
		(domain  (value B_)))
	 (table.2  (domain  (value table)))
	 (triangle.2  (domain  (value D_))))
	"")
       ((pick-up.1
	 (actor  (value person.0))
	 (object  (value C_)))
	"")
       ((state
	 (arsonist.3  (domain  (value Gui_Montag)))
	 (block.7  (domain  (value A_)))
	 (block.8  (domain  (value B_)))
	 (block.9  (domain  (value C_)))
	 (clear.6  (domain  (value B_)))
	 (clear.7  (domain  (value D_)))
	 (free.3  (domain  (value Gui_Montag)))
	 (holding.2  (domain  (value C_)))
	 (on-table.6  (domain  (value A_)))
	 (on-table.7  (domain  (value D_)))
	 (on.3  (co-domain  (value A_))
		(domain  (value B_)))
	 (table.3  (domain  (value table)))
	 (triangle.3  (domain  (value D_))))
	"")
       ((stack.1
	 (actor  (value person.0))
	 (object  (value C_))
	 (recipient  (value B_)))
	"")
       ((state
	 (arm-empty.2 )
	 (arsonist.4  (domain  (value Gui_Montag)))
	 (block.10  (domain  (value A_)))
	 (block.11  (domain  (value B_)))
	 (block.12  (domain  (value C_)))
	 (clear.8  (domain  (value D_)))
	 (clear.9  (domain  (value C_)))
	 (free.4  (domain  (value Gui_Montag)))
	 (on-table.8  (domain  (value A_)))
	 (on-table.9  (domain  (value D_)))
	 (on.4  (co-domain  (value A_))
		(domain  (value B_)))
	 (on.5  (co-domain  (value B_))
		(domain  (value C_)))
	 (table.4  (domain  (value table)))
	 (triangle.4  (domain  (value D_))))
	"")
       ((pick-up.2
	 (actor  (value person.0))
	 (object  (value D_)))
	"")
       ((state
	 (arsonist.5  (domain  (value Gui_Montag)))
	 (block.13  (domain  (value A_)))
	 (block.14  (domain  (value B_)))
	 (block.15  (domain  (value C_)))
	 (clear.10  (domain  (value C_)))
	 (free.5  (domain  (value Gui_Montag)))
	 (holding.3  (domain  (value D_)))
	 (on-table.10  (domain  (value A_)))
	 (on.6  (co-domain  (value A_))
		(domain  (value B_)))
	 (on.7  (co-domain  (value B_))
		(domain  (value C_)))
	 (table.5  (domain  (value table)))
	 (triangle.5  (domain  (value D_))))
	"")
       ((stack.2
	 (actor  (value person.0))
	 (object  (value D_))
	 (recipient  (value C_)))
	"")
       ((state
	 (arm-empty.3 )
	 (arsonist.6  (domain  (value Gui_Montag)))
	 (block.16  (domain  (value A_)))
	 (block.17  (domain  (value B_)))
	 (block.18  (domain  (value C_)))
	 (clear.11  (domain  (value D_)))
	 (free.6  (domain  (value Gui_Montag)))
	 (on-table.11  (domain  (value A_)))
	 (on.10  (co-domain  (value C_))
		 (domain  (value D_)))
	 (on.8  (co-domain  (value A_))
		(domain  (value B_)))
	 (on.9  (co-domain  (value B_))
		(domain  (value C_)))
	 (table.6  (domain  (value table)))
	 (triangle.6  (domain  (value D_))))
	"")
       ((unstack.2
	 (actor  (value person.0))
	 (object  (value D_))
	 (recipient  (value C_)))
	"")
       ((state
	 (arsonist.7  (domain  (value Gui_Montag)))
	 (block.19  (domain  (value A_)))
	 (block.20  (domain  (value B_)))
	 (block.21  (domain  (value C_)))
	 (clear.12  (domain  (value C_)))
	 (free.7  (domain  (value Gui_Montag)))
	 (holding.4  (domain  (value D_)))
	 (on-table.12  (domain  (value A_)))
	 (on.11  (co-domain  (value A_))
		 (domain  (value B_)))
	 (on.12  (co-domain  (value B_))
		 (domain  (value C_)))
	 (table.7  (domain  (value table)))
	 (triangle.7  (domain  (value D_))))
	"")
       ((putdown.2
	 (actor  (value person.0))
	 (object  (value D_)))
	"")
       ((state
	 (arm-empty.4 )
	 (arsonist.8  (domain  (value Gui_Montag)))
	 (block.22  (domain  (value A_)))
	 (block.23  (domain  (value B_)))
	 (block.24  (domain  (value C_)))
	 (clear.13  (domain  (value C_)))
	 (clear.14  (domain  (value D_)))
	 (free.8  (domain  (value Gui_Montag)))
	 (on-table.13  (domain  (value A_)))
	 (on-table.14  (domain  (value D_)))
	 (on.13  (co-domain  (value A_))
		 (domain  (value B_)))
	 (on.14  (co-domain  (value B_))
		 (domain  (value C_)))
	 (table.8  (domain  (value table)))
	 (triangle.8  (domain  (value D_))))
	"")
       ((unstack.3
	 (actor  (value person.0))
	 (object  (value C_))
	 (recipient  (value B_)))
	"")
       ((state
	 (arsonist.9  (domain  (value Gui_Montag)))
	 (block.25  (domain  (value A_)))
	 (block.26  (domain  (value B_)))
	 (block.27  (domain  (value C_)))
	 (clear.15  (domain  (value D_)))
	 (clear.16  (domain  (value B_)))
	 (free.9  (domain  (value Gui_Montag)))
	 (holding.5  (domain  (value C_)))
	 (on-table.15  (domain  (value A_)))
	 (on-table.16  (domain  (value D_)))
	 (on.15  (co-domain  (value A_))
		 (domain  (value B_)))
	 (table.9  (domain  (value table)))
	 (triangle.9  (domain  (value D_))))
	"")
       ((putdown.3
	 (actor  (value person.0))
	 (object  (value C_)))
	"")
       ((state
	 (arm-empty.5 )
	 (arsonist.10  (domain  (value Gui_Montag)))
	 (block.28  (domain  (value A_)))
	 (block.29  (domain  (value B_)))
	 (block.30  (domain  (value C_)))
	 (clear.17  (domain  (value D_)))
	 (clear.18  (domain  (value B_)))
	 (clear.19  (domain  (value C_)))
	 (free.10  (domain  (value Gui_Montag)))
	 (on-table.17  (domain  (value A_)))
	 (on-table.18  (domain  (value D_)))
	 (on-table.19  (domain  (value C_)))
	 (on.16  (co-domain  (value A_))
		 (domain  (value B_)))
	 (table.10  (domain  (value table)))
	 (triangle.10  (domain  (value D_))))
	"")
       ((unstack.4
	 (actor  (value person.0))
	 (object  (value B_))
	 (recipient  (value A_)))
	"")
       ((state
	 (arsonist.11  (domain  (value Gui_Montag)))
	 (block.31  (domain  (value A_)))
	 (block.32  (domain  (value B_)))
	 (block.33  (domain  (value C_)))
	 (clear.20  (domain  (value D_)))
	 (clear.21  (domain  (value C_)))
	 (clear.22  (domain  (value A_)))
	 (free.11  (domain  (value Gui_Montag)))
	 (holding.6  (domain  (value B_)))
	 (on-table.20  (domain  (value A_)))
	 (on-table.21  (domain  (value D_)))
	 (on-table.22  (domain  (value C_)))
	 (table.11  (domain  (value table)))
	 (triangle.11  (domain  (value D_))))
	"")
       ((putdown.4
	 (actor  (value person.0))
	 (object  (value B_)))
	"")
       ((state
	 (arm-empty.6 )
	 (arsonist.12  (domain  (value Gui_Montag)))
	 (block.34  (domain  (value A_)))
	 (block.35  (domain  (value B_)))
	 (block.36  (domain  (value C_)))
	 (clear.23  (domain  (value D_)))
	 (clear.24  (domain  (value C_)))
	 (clear.25  (domain  (value A_)))
	 (clear.26  (domain  (value B_)))
	 (free.12  (domain  (value Gui_Montag)))
	 (on-table.23  (domain  (value A_)))
	 (on-table.24  (domain  (value D_)))
	 (on-table.25  (domain  (value C_)))
	 (on-table.26  (domain  (value B_)))
	 (onfire.1  (domain  (value A_)))
	 (table.12  (domain  (value table)))
	 (triangle.12  (domain  (value D_))))
	"")
       ((burns.1
	 (actor  (value nature))
	 (object  (value A_)))
	"")
       ((state
	 (arm-empty.7 )
	 (arsonist.13  (domain  (value Gui_Montag)))
	 (block.37  (domain  (value A_)))
	 (block.38  (domain  (value B_)))
	 (block.39  (domain  (value C_)))
	 (clear.27  (domain  (value D_)))
	 (clear.28  (domain  (value C_)))
	 (clear.29  (domain  (value A_)))
	 (clear.30  (domain  (value B_)))
	 (free.13  (domain  (value Gui_Montag)))
	 (on-table.27  (domain  (value A_)))
	 (on-table.28  (domain  (value D_)))
	 (on-table.29  (domain  (value C_)))
	 (on-table.30  (domain  (value B_)))
	 (onfire.2  (domain  (value A_)))
	 (table.13  (domain  (value table)))
	 (triangle.13  (domain  (value D_))))
	"")
       ((pick-up.3
	 (actor  (value person.0))
	 (object  (value C_)))
	"")
       ((state
	 (arsonist.14  (domain  (value Gui_Montag)))
	 (block.40  (domain  (value A_)))
	 (block.41  (domain  (value B_)))
	 (block.42  (domain  (value C_)))
	 (clear.31  (domain  (value D_)))
	 (clear.32  (domain  (value A_)))
	 (clear.33  (domain  (value B_)))
	 (free.14  (domain  (value Gui_Montag)))
	 (holding.7  (domain  (value C_)))
	 (on-table.31  (domain  (value A_)))
	 (on-table.32  (domain  (value D_)))
	 (on-table.33  (domain  (value B_)))
	 (onfire.3  (domain  (value A_)))
	 (onfire.4  (domain  (value B_)))
	 (table.14  (domain  (value table)))
	 (triangle.14  (domain  (value D_))))
	"")
       ((burns.2
	 (actor  (value nature))
	 (object  (value B_)))
	"")
       ((state
	 (arsonist.15  (domain  (value Gui_Montag)))
	 (block.43  (domain  (value A_)))
	 (block.44  (domain  (value B_)))
	 (block.45  (domain  (value C_)))
	 (clear.34  (domain  (value D_)))
	 (clear.35  (domain  (value A_)))
	 (clear.36  (domain  (value B_)))
	 (free.15  (domain  (value Gui_Montag)))
	 (holding.8  (domain  (value C_)))
	 (on-table.34  (domain  (value A_)))
	 (on-table.35  (domain  (value D_)))
	 (on-table.36  (domain  (value B_)))
	 (onfire.5  (domain  (value A_)))
	 (onfire.6  (domain  (value B_)))
	 (table.15  (domain  (value table)))
	 (triangle.15  (domain  (value D_))))
	"")
       ((stack.3
	 (actor  (value person.0))
	 (object  (value C_))
	 (recipient  (value A_)))
	"")
       ((state
	 (arm-empty.8 )
	 (arsonist.16  (domain  (value Gui_Montag)))
	 (block.46  (domain  (value A_)))
	 (block.47  (domain  (value B_)))
	 (block.48  (domain  (value C_)))
	 (clear.37  (domain  (value D_)))
	 (clear.38  (domain  (value B_)))
	 (clear.39  (domain  (value C_)))
	 (free.16  (domain  (value Gui_Montag)))
	 (on-table.37  (domain  (value A_)))
	 (on-table.38  (domain  (value D_)))
	 (on-table.39  (domain  (value B_)))
	 (on.17  (co-domain  (value A_))
		 (domain  (value C_)))
	 (onfire.7  (domain  (value A_)))
	 (onfire.8  (domain  (value B_)))
	 (table.16  (domain  (value table)))
	 (triangle.16  (domain  (value D_))))
	"")
       ((pick-up.4
	 (actor  (value person.0))
	 (object  (value D_)))
	"")
       ((state
	 (arsonist.17  (domain  (value Gui_Montag)))
	 (block.49  (domain  (value A_)))
	 (block.50  (domain  (value B_)))
	 (block.51  (domain  (value C_)))
	 (clear.40  (domain  (value B_)))
	 (clear.41  (domain  (value C_)))
	 (free.17  (domain  (value Gui_Montag)))
	 (holding.9  (domain  (value D_)))
	 (on-table.40  (domain  (value A_)))
	 (on-table.41  (domain  (value B_)))
	 (on.18  (co-domain  (value A_))
		 (domain  (value C_)))
	 (onfire.10  (domain  (value B_)))
	 (onfire.9  (domain  (value A_)))
	 (table.17  (domain  (value table)))
	 (triangle.17  (domain  (value D_))))
	"")


       ((stack.4
	 (actor  (value person.0))
	 (object  (value D_))
	 (recipient  (value B_)))
	"")
       ((state
	 (arm-empty.9 )
	 (arsonist.18  (domain  (value Gui_Montag)))
	 (block.52  (domain  (value A_)))
	 (block.53  (domain  (value B_)))
	 (block.54  (domain  (value C_)))
	 (clear.42  (domain  (value C_)))
	 (clear.43  (domain  (value D_)))
	 (free.18  (domain  (value Gui_Montag)))
	 (on-table.42  (domain  (value A_)))
	 (on-table.43  (domain  (value B_)))
	 (on.19  (co-domain  (value A_))
		 (domain  (value C_)))
	 (on.20  (co-domain  (value B_))
		 (domain  (value D_)))
	 (onfire.11  (domain  (value A_)))
	 (onfire.12  (domain  (value B_)))
	 (table.18  (domain  (value table)))
	 (triangle.18  (domain  (value D_))))
	""))
      )
  "Example input from MIDCA")

(defvar *example-MIDCA-input2*
    '(report.2
      (
       ((unstack.1
	 (actor  (value person.0))
	 (object  (value D_))
	 (recipient  (value B_)))
	"")
       ((state
	 (arsonist.1  (domain  (value Gui_Montag)))
	 (block.1  (domain  (value A_)))
	 (block.2  (domain  (value B_)))
	 (block.3  (domain  (value C_)))
	 (clear.1  (domain  (value C_)))
	 (clear.2  (domain  (value B_)))
	 (free.1  (domain  (value Gui_Montag)))
	 (holding.1  (domain  (value D_)))
	 (on-table.1  (domain  (value A_)))
	 (on-table.2  (domain  (value C_)))
	 (on.1  (co-domain  (value A_))
		(domain  (value B_)))
	 (table.1  (domain  (value table)))
	 (triangle.1  (domain  (value D_))))
	"")
       ))
"Second example input from MIDCA")

;;; 
;;; Next 2 used for test stub.
;;; 
(defvar *MIDCA-stub* nil "active socket 1")
(defvar *MIDCA-stub2* nil "active socket 2")

;;; 
;;; This function is used in testing. It is not used in the MIDCA
;;; system otherwise. Run in another lisp listener.
;;; 
(defun setup-stub ()
  ;; Establish connection to Meta-AQUA input stream
  (user::establish-active-agent-connection 
   *MIDCA-port*
   "localhost"
   '*MIDCA-stub*)
  (sleep 1)
  ;;Establish connection to Meta-AQUA output stream
  (user::establish-active-agent-connection 
   user::*MCL-port*)
  )

(defun execute-stub-test (&optional
			  (example 
			   *example-MIDCA-input*))
  (format *MIDCA-stub* 
	  "~S~%" 
	  example)
  (finish-output *MIDCA-stub*)
  )

(defun end-stub-test ()
  (format *MIDCA-stub* 
	  "Done~%")
  (finish-output *MIDCA-stub*)
  )


#|
'(report.1
     (
      ((unstack.1
	(actor  (value person.0))
	(object  (value t_))
	(recipient  (value b_)))
       "")
      ((state
	(arsonist.1  (domain  (value Gui_Montag)))
	(block.1  (domain  (value a_)))
	(block.2  (domain  (value b_)))
	(block.3  (domain  (value c_)))
	(clear.1  (domain  (value c_)))
	(clear.2  (domain  (value b_)))
	(free.1  (domain  (value Gui_Montag)))
	(holding.1  (domain  (value t_)))
	(on-table.1  (domain  (value b_)))
	(on-table.2  (domain  (value c_)))
	(on.1  (co-domain  (value a_))
	       (domain  (value b_)))
	(table.1  (domain  (value table)))
	(triangle.1  (domain  (value t_))))
       ""))
       )

       |#

       